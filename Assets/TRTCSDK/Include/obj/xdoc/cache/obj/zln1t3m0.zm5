id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: trtc
  commentId: N:trtc
  language: CSharp
  name:
    CSharp: trtc
    VB: trtc
  nameWithType:
    CSharp: trtc
    VB: trtc
  qualifiedName:
    CSharp: trtc
    VB: trtc
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: trtc.TXLiteAVError
    commentId: T:trtc.TXLiteAVError
    language: CSharp
    name:
      CSharp: TXLiteAVError
      VB: TXLiteAVError
    nameWithType:
      CSharp: TXLiteAVError
      VB: TXLiteAVError
    qualifiedName:
      CSharp: trtc.TXLiteAVError
      VB: trtc.TXLiteAVError
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TXLiteAVError
      path: ''
      startLine: 10
    summary: "\nError codes (critical)\n"
    example: []
    syntax:
      content:
        CSharp: public enum TXLiteAVError
        VB: Public Enum TXLiteAVError
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TXLiteAVError.ERR_NULL
      commentId: F:trtc.TXLiteAVError.ERR_NULL
      language: CSharp
      name:
        CSharp: ERR_NULL
        VB: ERR_NULL
      nameWithType:
        CSharp: TXLiteAVError.ERR_NULL
        VB: TXLiteAVError.ERR_NULL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_NULL
        VB: trtc.TXLiteAVError.ERR_NULL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_NULL
        path: ''
        startLine: 20
      summary: "\nNo error\n"
      example: []
      syntax:
        content:
          CSharp: ERR_NULL = 0
          VB: ERR_NULL = 0
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_ROOM_ENTER_FAIL
      commentId: F:trtc.TXLiteAVError.ERR_ROOM_ENTER_FAIL
      language: CSharp
      name:
        CSharp: ERR_ROOM_ENTER_FAIL
        VB: ERR_ROOM_ENTER_FAIL
      nameWithType:
        CSharp: TXLiteAVError.ERR_ROOM_ENTER_FAIL
        VB: TXLiteAVError.ERR_ROOM_ENTER_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_ROOM_ENTER_FAIL
        VB: trtc.TXLiteAVError.ERR_ROOM_ENTER_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_ROOM_ENTER_FAIL
        path: ''
        startLine: 31
      summary: "\nFailed to enter the room.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_ROOM_ENTER_FAIL = -3301
          VB: ERR_ROOM_ENTER_FAIL = -3301
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_ENTER_ROOM_PARAM_NULL
      commentId: F:trtc.TXLiteAVError.ERR_ENTER_ROOM_PARAM_NULL
      language: CSharp
      name:
        CSharp: ERR_ENTER_ROOM_PARAM_NULL
        VB: ERR_ENTER_ROOM_PARAM_NULL
      nameWithType:
        CSharp: TXLiteAVError.ERR_ENTER_ROOM_PARAM_NULL
        VB: TXLiteAVError.ERR_ENTER_ROOM_PARAM_NULL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_ENTER_ROOM_PARAM_NULL
        VB: trtc.TXLiteAVError.ERR_ENTER_ROOM_PARAM_NULL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_ENTER_ROOM_PARAM_NULL
        path: ''
        startLine: 35
      summary: "\nEmpty room entry parameters. Please check whether valid parameters were passed in to the `enterRoom:appScene:` API.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_ENTER_ROOM_PARAM_NULL = -3316
          VB: ERR_ENTER_ROOM_PARAM_NULL = -3316
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_SDK_APPID_INVALID
      commentId: F:trtc.TXLiteAVError.ERR_SDK_APPID_INVALID
      language: CSharp
      name:
        CSharp: ERR_SDK_APPID_INVALID
        VB: ERR_SDK_APPID_INVALID
      nameWithType:
        CSharp: TXLiteAVError.ERR_SDK_APPID_INVALID
        VB: TXLiteAVError.ERR_SDK_APPID_INVALID
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_SDK_APPID_INVALID
        VB: trtc.TXLiteAVError.ERR_SDK_APPID_INVALID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_SDK_APPID_INVALID
        path: ''
        startLine: 39
      summary: "\nInvalid `sdkAppId`.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_SDK_APPID_INVALID = -3317
          VB: ERR_SDK_APPID_INVALID = -3317
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_ROOM_ID_INVALID
      commentId: F:trtc.TXLiteAVError.ERR_ROOM_ID_INVALID
      language: CSharp
      name:
        CSharp: ERR_ROOM_ID_INVALID
        VB: ERR_ROOM_ID_INVALID
      nameWithType:
        CSharp: TXLiteAVError.ERR_ROOM_ID_INVALID
        VB: TXLiteAVError.ERR_ROOM_ID_INVALID
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_ROOM_ID_INVALID
        VB: trtc.TXLiteAVError.ERR_ROOM_ID_INVALID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_ROOM_ID_INVALID
        path: ''
        startLine: 43
      summary: "\nInvalid `roomId`.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_ROOM_ID_INVALID = -3318
          VB: ERR_ROOM_ID_INVALID = -3318
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_USER_ID_INVALID
      commentId: F:trtc.TXLiteAVError.ERR_USER_ID_INVALID
      language: CSharp
      name:
        CSharp: ERR_USER_ID_INVALID
        VB: ERR_USER_ID_INVALID
      nameWithType:
        CSharp: TXLiteAVError.ERR_USER_ID_INVALID
        VB: TXLiteAVError.ERR_USER_ID_INVALID
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_USER_ID_INVALID
        VB: trtc.TXLiteAVError.ERR_USER_ID_INVALID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_USER_ID_INVALID
        path: ''
        startLine: 47
      summary: "\nInvalid `userID`.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_USER_ID_INVALID = -3319
          VB: ERR_USER_ID_INVALID = -3319
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_USER_SIG_INVALID
      commentId: F:trtc.TXLiteAVError.ERR_USER_SIG_INVALID
      language: CSharp
      name:
        CSharp: ERR_USER_SIG_INVALID
        VB: ERR_USER_SIG_INVALID
      nameWithType:
        CSharp: TXLiteAVError.ERR_USER_SIG_INVALID
        VB: TXLiteAVError.ERR_USER_SIG_INVALID
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_USER_SIG_INVALID
        VB: trtc.TXLiteAVError.ERR_USER_SIG_INVALID
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_USER_SIG_INVALID
        path: ''
        startLine: 51
      summary: "\nInvalid `userSig`.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_USER_SIG_INVALID = -3320
          VB: ERR_USER_SIG_INVALID = -3320
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_ROOM_REQUEST_ENTER_ROOM_TIMEOUT
      commentId: F:trtc.TXLiteAVError.ERR_ROOM_REQUEST_ENTER_ROOM_TIMEOUT
      language: CSharp
      name:
        CSharp: ERR_ROOM_REQUEST_ENTER_ROOM_TIMEOUT
        VB: ERR_ROOM_REQUEST_ENTER_ROOM_TIMEOUT
      nameWithType:
        CSharp: TXLiteAVError.ERR_ROOM_REQUEST_ENTER_ROOM_TIMEOUT
        VB: TXLiteAVError.ERR_ROOM_REQUEST_ENTER_ROOM_TIMEOUT
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_ROOM_REQUEST_ENTER_ROOM_TIMEOUT
        VB: trtc.TXLiteAVError.ERR_ROOM_REQUEST_ENTER_ROOM_TIMEOUT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_ROOM_REQUEST_ENTER_ROOM_TIMEOUT
        path: ''
        startLine: 55
      summary: "\nThe room entry request timed out. Please check your network.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_ROOM_REQUEST_ENTER_ROOM_TIMEOUT = -3308
          VB: ERR_ROOM_REQUEST_ENTER_ROOM_TIMEOUT = -3308
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_SERVER_INFO_SERVICE_SUSPENDED
      commentId: F:trtc.TXLiteAVError.ERR_SERVER_INFO_SERVICE_SUSPENDED
      language: CSharp
      name:
        CSharp: ERR_SERVER_INFO_SERVICE_SUSPENDED
        VB: ERR_SERVER_INFO_SERVICE_SUSPENDED
      nameWithType:
        CSharp: TXLiteAVError.ERR_SERVER_INFO_SERVICE_SUSPENDED
        VB: TXLiteAVError.ERR_SERVER_INFO_SERVICE_SUSPENDED
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_SERVER_INFO_SERVICE_SUSPENDED
        VB: trtc.TXLiteAVError.ERR_SERVER_INFO_SERVICE_SUSPENDED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_SERVER_INFO_SERVICE_SUSPENDED
        path: ''
        startLine: 59
      summary: "\nThe service is unavailable. Check if you have used up your package or whether your Tencent Cloud account has overdue payment.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_SERVER_INFO_SERVICE_SUSPENDED = -100013
          VB: ERR_SERVER_INFO_SERVICE_SUSPENDED = -100013
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_ROOM_REQUEST_QUIT_ROOM_TIMEOUT
      commentId: F:trtc.TXLiteAVError.ERR_ROOM_REQUEST_QUIT_ROOM_TIMEOUT
      language: CSharp
      name:
        CSharp: ERR_ROOM_REQUEST_QUIT_ROOM_TIMEOUT
        VB: ERR_ROOM_REQUEST_QUIT_ROOM_TIMEOUT
      nameWithType:
        CSharp: TXLiteAVError.ERR_ROOM_REQUEST_QUIT_ROOM_TIMEOUT
        VB: TXLiteAVError.ERR_ROOM_REQUEST_QUIT_ROOM_TIMEOUT
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_ROOM_REQUEST_QUIT_ROOM_TIMEOUT
        VB: trtc.TXLiteAVError.ERR_ROOM_REQUEST_QUIT_ROOM_TIMEOUT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_ROOM_REQUEST_QUIT_ROOM_TIMEOUT
        path: ''
        startLine: 71
      summary: "\nThe room exit request timed out.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_ROOM_REQUEST_QUIT_ROOM_TIMEOUT = -3325
          VB: ERR_ROOM_REQUEST_QUIT_ROOM_TIMEOUT = -3325
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_CAMERA_START_FAIL
      commentId: F:trtc.TXLiteAVError.ERR_CAMERA_START_FAIL
      language: CSharp
      name:
        CSharp: ERR_CAMERA_START_FAIL
        VB: ERR_CAMERA_START_FAIL
      nameWithType:
        CSharp: TXLiteAVError.ERR_CAMERA_START_FAIL
        VB: TXLiteAVError.ERR_CAMERA_START_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_CAMERA_START_FAIL
        VB: trtc.TXLiteAVError.ERR_CAMERA_START_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_CAMERA_START_FAIL
        path: ''
        startLine: 84
      summary: "\nFailed to turn the camera on. This occurs when, for example, there is a problem with the camera configuration program (driver) on Windows or macOS. Turn the camera off and on again, restart the device, or update the configuration program.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_CAMERA_START_FAIL = -1301
          VB: ERR_CAMERA_START_FAIL = -1301
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_CAMERA_NOT_AUTHORIZED
      commentId: F:trtc.TXLiteAVError.ERR_CAMERA_NOT_AUTHORIZED
      language: CSharp
      name:
        CSharp: ERR_CAMERA_NOT_AUTHORIZED
        VB: ERR_CAMERA_NOT_AUTHORIZED
      nameWithType:
        CSharp: TXLiteAVError.ERR_CAMERA_NOT_AUTHORIZED
        VB: TXLiteAVError.ERR_CAMERA_NOT_AUTHORIZED
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_CAMERA_NOT_AUTHORIZED
        VB: trtc.TXLiteAVError.ERR_CAMERA_NOT_AUTHORIZED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_CAMERA_NOT_AUTHORIZED
        path: ''
        startLine: 88
      summary: "\nNo access to the camera. This usually occurs on mobile devices and may be because the user denied the access.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_CAMERA_NOT_AUTHORIZED = -1314
          VB: ERR_CAMERA_NOT_AUTHORIZED = -1314
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_CAMERA_SET_PARAM_FAIL
      commentId: F:trtc.TXLiteAVError.ERR_CAMERA_SET_PARAM_FAIL
      language: CSharp
      name:
        CSharp: ERR_CAMERA_SET_PARAM_FAIL
        VB: ERR_CAMERA_SET_PARAM_FAIL
      nameWithType:
        CSharp: TXLiteAVError.ERR_CAMERA_SET_PARAM_FAIL
        VB: TXLiteAVError.ERR_CAMERA_SET_PARAM_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_CAMERA_SET_PARAM_FAIL
        VB: trtc.TXLiteAVError.ERR_CAMERA_SET_PARAM_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_CAMERA_SET_PARAM_FAIL
        path: ''
        startLine: 92
      summary: "\nIncorrect camera parameter settings (unsupported values or others).\n"
      example: []
      syntax:
        content:
          CSharp: ERR_CAMERA_SET_PARAM_FAIL = -1315
          VB: ERR_CAMERA_SET_PARAM_FAIL = -1315
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_CAMERA_OCCUPY
      commentId: F:trtc.TXLiteAVError.ERR_CAMERA_OCCUPY
      language: CSharp
      name:
        CSharp: ERR_CAMERA_OCCUPY
        VB: ERR_CAMERA_OCCUPY
      nameWithType:
        CSharp: TXLiteAVError.ERR_CAMERA_OCCUPY
        VB: TXLiteAVError.ERR_CAMERA_OCCUPY
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_CAMERA_OCCUPY
        VB: trtc.TXLiteAVError.ERR_CAMERA_OCCUPY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_CAMERA_OCCUPY
        path: ''
        startLine: 96
      summary: "\nThe camera is being used. Try another camera.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_CAMERA_OCCUPY = -1316
          VB: ERR_CAMERA_OCCUPY = -1316
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_MIC_START_FAIL
      commentId: F:trtc.TXLiteAVError.ERR_MIC_START_FAIL
      language: CSharp
      name:
        CSharp: ERR_MIC_START_FAIL
        VB: ERR_MIC_START_FAIL
      nameWithType:
        CSharp: TXLiteAVError.ERR_MIC_START_FAIL
        VB: TXLiteAVError.ERR_MIC_START_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_MIC_START_FAIL
        VB: trtc.TXLiteAVError.ERR_MIC_START_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_MIC_START_FAIL
        path: ''
        startLine: 100
      summary: "\nFailed to turn the mic on. This occurs when, for example, there is a problem with the mic configuration program (driver) on Windows or macOS. Turn the mic off and on again, restart the device, or update the configuration program.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_MIC_START_FAIL = -1302
          VB: ERR_MIC_START_FAIL = -1302
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_MIC_NOT_AUTHORIZED
      commentId: F:trtc.TXLiteAVError.ERR_MIC_NOT_AUTHORIZED
      language: CSharp
      name:
        CSharp: ERR_MIC_NOT_AUTHORIZED
        VB: ERR_MIC_NOT_AUTHORIZED
      nameWithType:
        CSharp: TXLiteAVError.ERR_MIC_NOT_AUTHORIZED
        VB: TXLiteAVError.ERR_MIC_NOT_AUTHORIZED
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_MIC_NOT_AUTHORIZED
        VB: trtc.TXLiteAVError.ERR_MIC_NOT_AUTHORIZED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_MIC_NOT_AUTHORIZED
        path: ''
        startLine: 104
      summary: "\nNo access to the mic. This usually occurs on mobile devices and may be because the user denied the access.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_MIC_NOT_AUTHORIZED = -1317
          VB: ERR_MIC_NOT_AUTHORIZED = -1317
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_MIC_SET_PARAM_FAIL
      commentId: F:trtc.TXLiteAVError.ERR_MIC_SET_PARAM_FAIL
      language: CSharp
      name:
        CSharp: ERR_MIC_SET_PARAM_FAIL
        VB: ERR_MIC_SET_PARAM_FAIL
      nameWithType:
        CSharp: TXLiteAVError.ERR_MIC_SET_PARAM_FAIL
        VB: TXLiteAVError.ERR_MIC_SET_PARAM_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_MIC_SET_PARAM_FAIL
        VB: trtc.TXLiteAVError.ERR_MIC_SET_PARAM_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_MIC_SET_PARAM_FAIL
        path: ''
        startLine: 108
      summary: "\nFailed to set mic parameters.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_MIC_SET_PARAM_FAIL = -1318
          VB: ERR_MIC_SET_PARAM_FAIL = -1318
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_MIC_OCCUPY
      commentId: F:trtc.TXLiteAVError.ERR_MIC_OCCUPY
      language: CSharp
      name:
        CSharp: ERR_MIC_OCCUPY
        VB: ERR_MIC_OCCUPY
      nameWithType:
        CSharp: TXLiteAVError.ERR_MIC_OCCUPY
        VB: TXLiteAVError.ERR_MIC_OCCUPY
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_MIC_OCCUPY
        VB: trtc.TXLiteAVError.ERR_MIC_OCCUPY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_MIC_OCCUPY
        path: ''
        startLine: 112
      summary: "\nThe mic is being used. The mic cannot be turned on when, for example, the user is having a call on the mobile device.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_MIC_OCCUPY = -1319
          VB: ERR_MIC_OCCUPY = -1319
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_MIC_STOP_FAIL
      commentId: F:trtc.TXLiteAVError.ERR_MIC_STOP_FAIL
      language: CSharp
      name:
        CSharp: ERR_MIC_STOP_FAIL
        VB: ERR_MIC_STOP_FAIL
      nameWithType:
        CSharp: TXLiteAVError.ERR_MIC_STOP_FAIL
        VB: TXLiteAVError.ERR_MIC_STOP_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_MIC_STOP_FAIL
        VB: trtc.TXLiteAVError.ERR_MIC_STOP_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_MIC_STOP_FAIL
        path: ''
        startLine: 116
      summary: "\nFailed to turn the mic off.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_MIC_STOP_FAIL = -1320
          VB: ERR_MIC_STOP_FAIL = -1320
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_SPEAKER_START_FAIL
      commentId: F:trtc.TXLiteAVError.ERR_SPEAKER_START_FAIL
      language: CSharp
      name:
        CSharp: ERR_SPEAKER_START_FAIL
        VB: ERR_SPEAKER_START_FAIL
      nameWithType:
        CSharp: TXLiteAVError.ERR_SPEAKER_START_FAIL
        VB: TXLiteAVError.ERR_SPEAKER_START_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_SPEAKER_START_FAIL
        VB: trtc.TXLiteAVError.ERR_SPEAKER_START_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_SPEAKER_START_FAIL
        path: ''
        startLine: 120
      summary: "\nFailed to turn the speaker on. This occurs when, for example, there is a problem with the speaker configuration program (driver) on Windows or macOS. Turn the speaker off and on again, restart the device, or update the configuration program.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_SPEAKER_START_FAIL = -1321
          VB: ERR_SPEAKER_START_FAIL = -1321
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_SPEAKER_SET_PARAM_FAIL
      commentId: F:trtc.TXLiteAVError.ERR_SPEAKER_SET_PARAM_FAIL
      language: CSharp
      name:
        CSharp: ERR_SPEAKER_SET_PARAM_FAIL
        VB: ERR_SPEAKER_SET_PARAM_FAIL
      nameWithType:
        CSharp: TXLiteAVError.ERR_SPEAKER_SET_PARAM_FAIL
        VB: TXLiteAVError.ERR_SPEAKER_SET_PARAM_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_SPEAKER_SET_PARAM_FAIL
        VB: trtc.TXLiteAVError.ERR_SPEAKER_SET_PARAM_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_SPEAKER_SET_PARAM_FAIL
        path: ''
        startLine: 124
      summary: "\nFailed to set speaker parameters.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_SPEAKER_SET_PARAM_FAIL = -1322
          VB: ERR_SPEAKER_SET_PARAM_FAIL = -1322
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_SPEAKER_STOP_FAIL
      commentId: F:trtc.TXLiteAVError.ERR_SPEAKER_STOP_FAIL
      language: CSharp
      name:
        CSharp: ERR_SPEAKER_STOP_FAIL
        VB: ERR_SPEAKER_STOP_FAIL
      nameWithType:
        CSharp: TXLiteAVError.ERR_SPEAKER_STOP_FAIL
        VB: TXLiteAVError.ERR_SPEAKER_STOP_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_SPEAKER_STOP_FAIL
        VB: trtc.TXLiteAVError.ERR_SPEAKER_STOP_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_SPEAKER_STOP_FAIL
        path: ''
        startLine: 128
      summary: "\nFailed to turn the speaker off.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_SPEAKER_STOP_FAIL = -1323
          VB: ERR_SPEAKER_STOP_FAIL = -1323
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_VIDEO_ENCODE_FAIL
      commentId: F:trtc.TXLiteAVError.ERR_VIDEO_ENCODE_FAIL
      language: CSharp
      name:
        CSharp: ERR_VIDEO_ENCODE_FAIL
        VB: ERR_VIDEO_ENCODE_FAIL
      nameWithType:
        CSharp: TXLiteAVError.ERR_VIDEO_ENCODE_FAIL
        VB: TXLiteAVError.ERR_VIDEO_ENCODE_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_VIDEO_ENCODE_FAIL
        VB: trtc.TXLiteAVError.ERR_VIDEO_ENCODE_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_VIDEO_ENCODE_FAIL
        path: ''
        startLine: 139
      summary: "\nFailed to encode video frames. This occurs when, for example, a user on iOS switches to another app, which may cause the system to release the hardware encoder. When the user switches back, this error may be thrown before the hardware encoder is restarted.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_VIDEO_ENCODE_FAIL = -1303
          VB: ERR_VIDEO_ENCODE_FAIL = -1303
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_UNSUPPORTED_RESOLUTION
      commentId: F:trtc.TXLiteAVError.ERR_UNSUPPORTED_RESOLUTION
      language: CSharp
      name:
        CSharp: ERR_UNSUPPORTED_RESOLUTION
        VB: ERR_UNSUPPORTED_RESOLUTION
      nameWithType:
        CSharp: TXLiteAVError.ERR_UNSUPPORTED_RESOLUTION
        VB: TXLiteAVError.ERR_UNSUPPORTED_RESOLUTION
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_UNSUPPORTED_RESOLUTION
        VB: trtc.TXLiteAVError.ERR_UNSUPPORTED_RESOLUTION
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_UNSUPPORTED_RESOLUTION
        path: ''
        startLine: 143
      summary: "\nUnsupported video resolution.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_UNSUPPORTED_RESOLUTION = -1305
          VB: ERR_UNSUPPORTED_RESOLUTION = -1305
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_AUDIO_ENCODE_FAIL
      commentId: F:trtc.TXLiteAVError.ERR_AUDIO_ENCODE_FAIL
      language: CSharp
      name:
        CSharp: ERR_AUDIO_ENCODE_FAIL
        VB: ERR_AUDIO_ENCODE_FAIL
      nameWithType:
        CSharp: TXLiteAVError.ERR_AUDIO_ENCODE_FAIL
        VB: TXLiteAVError.ERR_AUDIO_ENCODE_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_AUDIO_ENCODE_FAIL
        VB: trtc.TXLiteAVError.ERR_AUDIO_ENCODE_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_AUDIO_ENCODE_FAIL
        path: ''
        startLine: 147
      summary: "\nFailed to encode audio frames. This occurs when, for example, the SDK could not process the custom audio data passed in.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_AUDIO_ENCODE_FAIL = -1304
          VB: ERR_AUDIO_ENCODE_FAIL = -1304
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_UNSUPPORTED_SAMPLERATE
      commentId: F:trtc.TXLiteAVError.ERR_UNSUPPORTED_SAMPLERATE
      language: CSharp
      name:
        CSharp: ERR_UNSUPPORTED_SAMPLERATE
        VB: ERR_UNSUPPORTED_SAMPLERATE
      nameWithType:
        CSharp: TXLiteAVError.ERR_UNSUPPORTED_SAMPLERATE
        VB: TXLiteAVError.ERR_UNSUPPORTED_SAMPLERATE
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_UNSUPPORTED_SAMPLERATE
        VB: trtc.TXLiteAVError.ERR_UNSUPPORTED_SAMPLERATE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_UNSUPPORTED_SAMPLERATE
        path: ''
        startLine: 151
      summary: "\nUnsupported audio sample rate.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_UNSUPPORTED_SAMPLERATE = -1306
          VB: ERR_UNSUPPORTED_SAMPLERATE = -1306
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_PIXEL_FORMAT_UNSUPPORTED
      commentId: F:trtc.TXLiteAVError.ERR_PIXEL_FORMAT_UNSUPPORTED
      language: CSharp
      name:
        CSharp: ERR_PIXEL_FORMAT_UNSUPPORTED
        VB: ERR_PIXEL_FORMAT_UNSUPPORTED
      nameWithType:
        CSharp: TXLiteAVError.ERR_PIXEL_FORMAT_UNSUPPORTED
        VB: TXLiteAVError.ERR_PIXEL_FORMAT_UNSUPPORTED
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_PIXEL_FORMAT_UNSUPPORTED
        VB: trtc.TXLiteAVError.ERR_PIXEL_FORMAT_UNSUPPORTED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_PIXEL_FORMAT_UNSUPPORTED
        path: ''
        startLine: 162
      summary: "\nUnsupported pixel format.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_PIXEL_FORMAT_UNSUPPORTED = -1327
          VB: ERR_PIXEL_FORMAT_UNSUPPORTED = -1327
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVError.ERR_BUFFER_TYPE_UNSUPPORTED
      commentId: F:trtc.TXLiteAVError.ERR_BUFFER_TYPE_UNSUPPORTED
      language: CSharp
      name:
        CSharp: ERR_BUFFER_TYPE_UNSUPPORTED
        VB: ERR_BUFFER_TYPE_UNSUPPORTED
      nameWithType:
        CSharp: TXLiteAVError.ERR_BUFFER_TYPE_UNSUPPORTED
        VB: TXLiteAVError.ERR_BUFFER_TYPE_UNSUPPORTED
      qualifiedName:
        CSharp: trtc.TXLiteAVError.ERR_BUFFER_TYPE_UNSUPPORTED
        VB: trtc.TXLiteAVError.ERR_BUFFER_TYPE_UNSUPPORTED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ERR_BUFFER_TYPE_UNSUPPORTED
        path: ''
        startLine: 166
      summary: "\nUnsupported buffer type.\n"
      example: []
      syntax:
        content:
          CSharp: ERR_BUFFER_TYPE_UNSUPPORTED = -1328
          VB: ERR_BUFFER_TYPE_UNSUPPORTED = -1328
        return:
          type: trtc.TXLiteAVError
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TXLiteAVWarning
    commentId: T:trtc.TXLiteAVWarning
    language: CSharp
    name:
      CSharp: TXLiteAVWarning
      VB: TXLiteAVWarning
    nameWithType:
      CSharp: TXLiteAVWarning
      VB: TXLiteAVWarning
    qualifiedName:
      CSharp: trtc.TXLiteAVWarning
      VB: trtc.TXLiteAVWarning
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TXLiteAVWarning
      path: ''
      startLine: 179
    summary: "\nError codes (warning)\n"
    example: []
    syntax:
      content:
        CSharp: public enum TXLiteAVWarning
        VB: Public Enum TXLiteAVWarning
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TXLiteAVWarning.WARNING_HW_ENCODER_START_FAIL
      commentId: F:trtc.TXLiteAVWarning.WARNING_HW_ENCODER_START_FAIL
      language: CSharp
      name:
        CSharp: WARNING_HW_ENCODER_START_FAIL
        VB: WARNING_HW_ENCODER_START_FAIL
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_HW_ENCODER_START_FAIL
        VB: TXLiteAVWarning.WARNING_HW_ENCODER_START_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_HW_ENCODER_START_FAIL
        VB: trtc.TXLiteAVWarning.WARNING_HW_ENCODER_START_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_HW_ENCODER_START_FAIL
        path: ''
        startLine: 184
      summary: "\nFailed to start the hardware encoder. The software encoder is used instead.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_HW_ENCODER_START_FAIL = 1103
          VB: WARNING_HW_ENCODER_START_FAIL = 1103
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_VIDEO_ENCODER_SW_TO_HW
      commentId: F:trtc.TXLiteAVWarning.WARNING_VIDEO_ENCODER_SW_TO_HW
      language: CSharp
      name:
        CSharp: WARNING_VIDEO_ENCODER_SW_TO_HW
        VB: WARNING_VIDEO_ENCODER_SW_TO_HW
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_VIDEO_ENCODER_SW_TO_HW
        VB: TXLiteAVWarning.WARNING_VIDEO_ENCODER_SW_TO_HW
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_VIDEO_ENCODER_SW_TO_HW
        VB: trtc.TXLiteAVWarning.WARNING_VIDEO_ENCODER_SW_TO_HW
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_VIDEO_ENCODER_SW_TO_HW
        path: ''
        startLine: 188
      summary: "\nThe video encoder is automatically switched from software encoder to hardware encoder. This is usually triggered by high CPU usage.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_VIDEO_ENCODER_SW_TO_HW = 1107
          VB: WARNING_VIDEO_ENCODER_SW_TO_HW = 1107
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_INSUFFICIENT_CAPTURE_FPS
      commentId: F:trtc.TXLiteAVWarning.WARNING_INSUFFICIENT_CAPTURE_FPS
      language: CSharp
      name:
        CSharp: WARNING_INSUFFICIENT_CAPTURE_FPS
        VB: WARNING_INSUFFICIENT_CAPTURE_FPS
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_INSUFFICIENT_CAPTURE_FPS
        VB: TXLiteAVWarning.WARNING_INSUFFICIENT_CAPTURE_FPS
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_INSUFFICIENT_CAPTURE_FPS
        VB: trtc.TXLiteAVWarning.WARNING_INSUFFICIENT_CAPTURE_FPS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_INSUFFICIENT_CAPTURE_FPS
        path: ''
        startLine: 192
      summary: "\nThe capturing frame rate of the camera is insufficient. This error occurs on some Android phones with built-in beauty filters.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_INSUFFICIENT_CAPTURE_FPS = 1108
          VB: WARNING_INSUFFICIENT_CAPTURE_FPS = 1108
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_SW_ENCODER_START_FAIL
      commentId: F:trtc.TXLiteAVWarning.WARNING_SW_ENCODER_START_FAIL
      language: CSharp
      name:
        CSharp: WARNING_SW_ENCODER_START_FAIL
        VB: WARNING_SW_ENCODER_START_FAIL
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_SW_ENCODER_START_FAIL
        VB: TXLiteAVWarning.WARNING_SW_ENCODER_START_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_SW_ENCODER_START_FAIL
        VB: trtc.TXLiteAVWarning.WARNING_SW_ENCODER_START_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_SW_ENCODER_START_FAIL
        path: ''
        startLine: 196
      summary: "\nFailed to start the software encoder.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_SW_ENCODER_START_FAIL = 1109
          VB: WARNING_SW_ENCODER_START_FAIL = 1109
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_REDUCE_CAPTURE_RESOLUTION
      commentId: F:trtc.TXLiteAVWarning.WARNING_REDUCE_CAPTURE_RESOLUTION
      language: CSharp
      name:
        CSharp: WARNING_REDUCE_CAPTURE_RESOLUTION
        VB: WARNING_REDUCE_CAPTURE_RESOLUTION
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_REDUCE_CAPTURE_RESOLUTION
        VB: TXLiteAVWarning.WARNING_REDUCE_CAPTURE_RESOLUTION
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_REDUCE_CAPTURE_RESOLUTION
        VB: trtc.TXLiteAVWarning.WARNING_REDUCE_CAPTURE_RESOLUTION
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_REDUCE_CAPTURE_RESOLUTION
        path: ''
        startLine: 200
      summary: "\nThe capturing frame rate of the camera was reduced for balance between frame rate and performance.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_REDUCE_CAPTURE_RESOLUTION = 1110
          VB: WARNING_REDUCE_CAPTURE_RESOLUTION = 1110
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_CAMERA_DEVICE_EMPTY
      commentId: F:trtc.TXLiteAVWarning.WARNING_CAMERA_DEVICE_EMPTY
      language: CSharp
      name:
        CSharp: WARNING_CAMERA_DEVICE_EMPTY
        VB: WARNING_CAMERA_DEVICE_EMPTY
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_CAMERA_DEVICE_EMPTY
        VB: TXLiteAVWarning.WARNING_CAMERA_DEVICE_EMPTY
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_CAMERA_DEVICE_EMPTY
        VB: trtc.TXLiteAVWarning.WARNING_CAMERA_DEVICE_EMPTY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_CAMERA_DEVICE_EMPTY
        path: ''
        startLine: 204
      summary: "\nNo available camera detected.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_CAMERA_DEVICE_EMPTY = 1111
          VB: WARNING_CAMERA_DEVICE_EMPTY = 1111
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_CAMERA_NOT_AUTHORIZED
      commentId: F:trtc.TXLiteAVWarning.WARNING_CAMERA_NOT_AUTHORIZED
      language: CSharp
      name:
        CSharp: WARNING_CAMERA_NOT_AUTHORIZED
        VB: WARNING_CAMERA_NOT_AUTHORIZED
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_CAMERA_NOT_AUTHORIZED
        VB: TXLiteAVWarning.WARNING_CAMERA_NOT_AUTHORIZED
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_CAMERA_NOT_AUTHORIZED
        VB: trtc.TXLiteAVWarning.WARNING_CAMERA_NOT_AUTHORIZED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_CAMERA_NOT_AUTHORIZED
        path: ''
        startLine: 208
      summary: "\nThe user didn’t grant the application camera access.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_CAMERA_NOT_AUTHORIZED = 1112
          VB: WARNING_CAMERA_NOT_AUTHORIZED = 1112
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_EMPTY
      commentId: F:trtc.TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_EMPTY
      language: CSharp
      name:
        CSharp: WARNING_MICROPHONE_DEVICE_EMPTY
        VB: WARNING_MICROPHONE_DEVICE_EMPTY
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_EMPTY
        VB: TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_EMPTY
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_EMPTY
        VB: trtc.TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_EMPTY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_MICROPHONE_DEVICE_EMPTY
        path: ''
        startLine: 212
      summary: "\nNo available mic detected.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_MICROPHONE_DEVICE_EMPTY = 1201
          VB: WARNING_MICROPHONE_DEVICE_EMPTY = 1201
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_SPEAKER_DEVICE_EMPTY
      commentId: F:trtc.TXLiteAVWarning.WARNING_SPEAKER_DEVICE_EMPTY
      language: CSharp
      name:
        CSharp: WARNING_SPEAKER_DEVICE_EMPTY
        VB: WARNING_SPEAKER_DEVICE_EMPTY
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_SPEAKER_DEVICE_EMPTY
        VB: TXLiteAVWarning.WARNING_SPEAKER_DEVICE_EMPTY
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_SPEAKER_DEVICE_EMPTY
        VB: trtc.TXLiteAVWarning.WARNING_SPEAKER_DEVICE_EMPTY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_SPEAKER_DEVICE_EMPTY
        path: ''
        startLine: 216
      summary: "\nNo available speaker detected.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_SPEAKER_DEVICE_EMPTY = 1202
          VB: WARNING_SPEAKER_DEVICE_EMPTY = 1202
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_MICROPHONE_NOT_AUTHORIZED
      commentId: F:trtc.TXLiteAVWarning.WARNING_MICROPHONE_NOT_AUTHORIZED
      language: CSharp
      name:
        CSharp: WARNING_MICROPHONE_NOT_AUTHORIZED
        VB: WARNING_MICROPHONE_NOT_AUTHORIZED
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_MICROPHONE_NOT_AUTHORIZED
        VB: TXLiteAVWarning.WARNING_MICROPHONE_NOT_AUTHORIZED
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_MICROPHONE_NOT_AUTHORIZED
        VB: trtc.TXLiteAVWarning.WARNING_MICROPHONE_NOT_AUTHORIZED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_MICROPHONE_NOT_AUTHORIZED
        path: ''
        startLine: 220
      summary: "\nThe user didn’t grant the application mic access.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_MICROPHONE_NOT_AUTHORIZED = 1203
          VB: WARNING_MICROPHONE_NOT_AUTHORIZED = 1203
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_ABNORMAL
      commentId: F:trtc.TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_ABNORMAL
      language: CSharp
      name:
        CSharp: WARNING_MICROPHONE_DEVICE_ABNORMAL
        VB: WARNING_MICROPHONE_DEVICE_ABNORMAL
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_ABNORMAL
        VB: TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_ABNORMAL
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_ABNORMAL
        VB: trtc.TXLiteAVWarning.WARNING_MICROPHONE_DEVICE_ABNORMAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_MICROPHONE_DEVICE_ABNORMAL
        path: ''
        startLine: 224
      summary: "\nThe audio capturing device is unavailable. This error occurs if, for example, the device is occupied.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_MICROPHONE_DEVICE_ABNORMAL = 1204
          VB: WARNING_MICROPHONE_DEVICE_ABNORMAL = 1204
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_SPEAKER_DEVICE_ABNORMAL
      commentId: F:trtc.TXLiteAVWarning.WARNING_SPEAKER_DEVICE_ABNORMAL
      language: CSharp
      name:
        CSharp: WARNING_SPEAKER_DEVICE_ABNORMAL
        VB: WARNING_SPEAKER_DEVICE_ABNORMAL
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_SPEAKER_DEVICE_ABNORMAL
        VB: TXLiteAVWarning.WARNING_SPEAKER_DEVICE_ABNORMAL
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_SPEAKER_DEVICE_ABNORMAL
        VB: trtc.TXLiteAVWarning.WARNING_SPEAKER_DEVICE_ABNORMAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_SPEAKER_DEVICE_ABNORMAL
        path: ''
        startLine: 228
      summary: "\nThe audio playback device is unavailable. This error occurs if, for example, the device is occupied.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_SPEAKER_DEVICE_ABNORMAL = 1205
          VB: WARNING_SPEAKER_DEVICE_ABNORMAL = 1205
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_VIDEO_FRAME_DECODE_FAIL
      commentId: F:trtc.TXLiteAVWarning.WARNING_VIDEO_FRAME_DECODE_FAIL
      language: CSharp
      name:
        CSharp: WARNING_VIDEO_FRAME_DECODE_FAIL
        VB: WARNING_VIDEO_FRAME_DECODE_FAIL
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_VIDEO_FRAME_DECODE_FAIL
        VB: TXLiteAVWarning.WARNING_VIDEO_FRAME_DECODE_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_VIDEO_FRAME_DECODE_FAIL
        VB: trtc.TXLiteAVWarning.WARNING_VIDEO_FRAME_DECODE_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_VIDEO_FRAME_DECODE_FAIL
        path: ''
        startLine: 233
      summary: "\nFailed to decode the current video frame.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_VIDEO_FRAME_DECODE_FAIL = 2101
          VB: WARNING_VIDEO_FRAME_DECODE_FAIL = 2101
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_AUDIO_FRAME_DECODE_FAIL
      commentId: F:trtc.TXLiteAVWarning.WARNING_AUDIO_FRAME_DECODE_FAIL
      language: CSharp
      name:
        CSharp: WARNING_AUDIO_FRAME_DECODE_FAIL
        VB: WARNING_AUDIO_FRAME_DECODE_FAIL
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_AUDIO_FRAME_DECODE_FAIL
        VB: TXLiteAVWarning.WARNING_AUDIO_FRAME_DECODE_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_AUDIO_FRAME_DECODE_FAIL
        VB: trtc.TXLiteAVWarning.WARNING_AUDIO_FRAME_DECODE_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_AUDIO_FRAME_DECODE_FAIL
        path: ''
        startLine: 237
      summary: "\nFailed to decode the current audio frame.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_AUDIO_FRAME_DECODE_FAIL = 2102
          VB: WARNING_AUDIO_FRAME_DECODE_FAIL = 2102
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_VIDEO_PLAY_LAG
      commentId: F:trtc.TXLiteAVWarning.WARNING_VIDEO_PLAY_LAG
      language: CSharp
      name:
        CSharp: WARNING_VIDEO_PLAY_LAG
        VB: WARNING_VIDEO_PLAY_LAG
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_VIDEO_PLAY_LAG
        VB: TXLiteAVWarning.WARNING_VIDEO_PLAY_LAG
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_VIDEO_PLAY_LAG
        VB: trtc.TXLiteAVWarning.WARNING_VIDEO_PLAY_LAG
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_VIDEO_PLAY_LAG
        path: ''
        startLine: 241
      summary: "\nVideo playback stutter (user experience).\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_VIDEO_PLAY_LAG = 2105
          VB: WARNING_VIDEO_PLAY_LAG = 2105
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_HW_DECODER_START_FAIL
      commentId: F:trtc.TXLiteAVWarning.WARNING_HW_DECODER_START_FAIL
      language: CSharp
      name:
        CSharp: WARNING_HW_DECODER_START_FAIL
        VB: WARNING_HW_DECODER_START_FAIL
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_HW_DECODER_START_FAIL
        VB: TXLiteAVWarning.WARNING_HW_DECODER_START_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_HW_DECODER_START_FAIL
        VB: trtc.TXLiteAVWarning.WARNING_HW_DECODER_START_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_HW_DECODER_START_FAIL
        path: ''
        startLine: 245
      summary: "\nFailed to start the hardware decoder. The software decoder is used instead.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_HW_DECODER_START_FAIL = 2106
          VB: WARNING_HW_DECODER_START_FAIL = 2106
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_VIDEO_DECODER_HW_TO_SW
      commentId: F:trtc.TXLiteAVWarning.WARNING_VIDEO_DECODER_HW_TO_SW
      language: CSharp
      name:
        CSharp: WARNING_VIDEO_DECODER_HW_TO_SW
        VB: WARNING_VIDEO_DECODER_HW_TO_SW
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_VIDEO_DECODER_HW_TO_SW
        VB: TXLiteAVWarning.WARNING_VIDEO_DECODER_HW_TO_SW
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_VIDEO_DECODER_HW_TO_SW
        VB: trtc.TXLiteAVWarning.WARNING_VIDEO_DECODER_HW_TO_SW
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_VIDEO_DECODER_HW_TO_SW
        path: ''
        startLine: 249
      summary: "\nThe hardware decoder failed to decode the first I-frame of the current stream. The SDK automatically switched to the software decoder.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_VIDEO_DECODER_HW_TO_SW = 2108
          VB: WARNING_VIDEO_DECODER_HW_TO_SW = 2108
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_SW_DECODER_START_FAIL
      commentId: F:trtc.TXLiteAVWarning.WARNING_SW_DECODER_START_FAIL
      language: CSharp
      name:
        CSharp: WARNING_SW_DECODER_START_FAIL
        VB: WARNING_SW_DECODER_START_FAIL
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_SW_DECODER_START_FAIL
        VB: TXLiteAVWarning.WARNING_SW_DECODER_START_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_SW_DECODER_START_FAIL
        VB: trtc.TXLiteAVWarning.WARNING_SW_DECODER_START_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_SW_DECODER_START_FAIL
        path: ''
        startLine: 253
      summary: "\nFailed to start the software decoder.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_SW_DECODER_START_FAIL = 2109
          VB: WARNING_SW_DECODER_START_FAIL = 2109
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_VIDEO_RENDER_FAIL
      commentId: F:trtc.TXLiteAVWarning.WARNING_VIDEO_RENDER_FAIL
      language: CSharp
      name:
        CSharp: WARNING_VIDEO_RENDER_FAIL
        VB: WARNING_VIDEO_RENDER_FAIL
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_VIDEO_RENDER_FAIL
        VB: TXLiteAVWarning.WARNING_VIDEO_RENDER_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_VIDEO_RENDER_FAIL
        VB: trtc.TXLiteAVWarning.WARNING_VIDEO_RENDER_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_VIDEO_RENDER_FAIL
        path: ''
        startLine: 257
      summary: "\nFailed to render the video.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_VIDEO_RENDER_FAIL = 2110
          VB: WARNING_VIDEO_RENDER_FAIL = 2110
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_START_CAPTURE_IGNORED
      commentId: F:trtc.TXLiteAVWarning.WARNING_START_CAPTURE_IGNORED
      language: CSharp
      name:
        CSharp: WARNING_START_CAPTURE_IGNORED
        VB: WARNING_START_CAPTURE_IGNORED
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_START_CAPTURE_IGNORED
        VB: TXLiteAVWarning.WARNING_START_CAPTURE_IGNORED
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_START_CAPTURE_IGNORED
        VB: trtc.TXLiteAVWarning.WARNING_START_CAPTURE_IGNORED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_START_CAPTURE_IGNORED
        path: ''
        startLine: 261
      summary: "\nVideo capturing started.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_START_CAPTURE_IGNORED = 4000
          VB: WARNING_START_CAPTURE_IGNORED = 4000
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_AUDIO_RECORDING_WRITE_FAIL
      commentId: F:trtc.TXLiteAVWarning.WARNING_AUDIO_RECORDING_WRITE_FAIL
      language: CSharp
      name:
        CSharp: WARNING_AUDIO_RECORDING_WRITE_FAIL
        VB: WARNING_AUDIO_RECORDING_WRITE_FAIL
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_AUDIO_RECORDING_WRITE_FAIL
        VB: TXLiteAVWarning.WARNING_AUDIO_RECORDING_WRITE_FAIL
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_AUDIO_RECORDING_WRITE_FAIL
        VB: trtc.TXLiteAVWarning.WARNING_AUDIO_RECORDING_WRITE_FAIL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_AUDIO_RECORDING_WRITE_FAIL
        path: ''
        startLine: 265
      summary: "\nFailed to write recorded audio into the file.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_AUDIO_RECORDING_WRITE_FAIL = 7001
          VB: WARNING_AUDIO_RECORDING_WRITE_FAIL = 7001
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_ROOM_DISCONNECT
      commentId: F:trtc.TXLiteAVWarning.WARNING_ROOM_DISCONNECT
      language: CSharp
      name:
        CSharp: WARNING_ROOM_DISCONNECT
        VB: WARNING_ROOM_DISCONNECT
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_ROOM_DISCONNECT
        VB: TXLiteAVWarning.WARNING_ROOM_DISCONNECT
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_ROOM_DISCONNECT
        VB: trtc.TXLiteAVWarning.WARNING_ROOM_DISCONNECT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_ROOM_DISCONNECT
        path: ''
        startLine: 269
      summary: "\nThe network was disconnected.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_ROOM_DISCONNECT = 5101
          VB: WARNING_ROOM_DISCONNECT = 5101
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXLiteAVWarning.WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE
      commentId: F:trtc.TXLiteAVWarning.WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE
      language: CSharp
      name:
        CSharp: WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE
        VB: WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE
      nameWithType:
        CSharp: TXLiteAVWarning.WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE
        VB: TXLiteAVWarning.WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE
      qualifiedName:
        CSharp: trtc.TXLiteAVWarning.WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE
        VB: trtc.TXLiteAVWarning.WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE
        path: ''
        startLine: 273
      summary: "\nThe user is in the role of “audience”. Upstream audio and video are ignored.\n"
      example: []
      syntax:
        content:
          CSharp: WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE = 6001
          VB: WARNING_IGNORE_UPSTREAM_FOR_AUDIENCE = 6001
        return:
          type: trtc.TXLiteAVWarning
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCVideoResolution
    commentId: T:trtc.TRTCVideoResolution
    language: CSharp
    name:
      CSharp: TRTCVideoResolution
      VB: TRTCVideoResolution
    nameWithType:
      CSharp: TRTCVideoResolution
      VB: TRTCVideoResolution
    qualifiedName:
      CSharp: trtc.TRTCVideoResolution
      VB: trtc.TRTCVideoResolution
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVideoResolution
      path: ''
      startLine: 293
    summary: "\n1.1 Video resolution\n"
    remarks: "\nOnly landscape resolutions are defined below. To use portrait resolutions (e.g., 360 × 640), set `TRTCVideoResolutionMode` to `Portrait`.\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCVideoResolution
        VB: Public Enum TRTCVideoResolution
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_120_120
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_120_120
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_120_120
        VB: TRTCVideoResolution_120_120
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_120_120
        VB: TRTCVideoResolution.TRTCVideoResolution_120_120
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_120_120
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_120_120
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_120_120
        path: ''
        startLine: 299
      summary: "\nRecommended bitrate: 80 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_120_120 = 1
          VB: TRTCVideoResolution_120_120 = 1
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_160_160
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_160_160
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_160_160
        VB: TRTCVideoResolution_160_160
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_160_160
        VB: TRTCVideoResolution.TRTCVideoResolution_160_160
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_160_160
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_160_160
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_160_160
        path: ''
        startLine: 303
      summary: "\nRecommended bitrate: 100 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_160_160 = 3
          VB: TRTCVideoResolution_160_160 = 3
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_270_270
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_270_270
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_270_270
        VB: TRTCVideoResolution_270_270
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_270_270
        VB: TRTCVideoResolution.TRTCVideoResolution_270_270
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_270_270
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_270_270
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_270_270
        path: ''
        startLine: 307
      summary: "\nRecommended bitrate: 200 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_270_270 = 5
          VB: TRTCVideoResolution_270_270 = 5
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_480_480
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_480_480
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_480_480
        VB: TRTCVideoResolution_480_480
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_480_480
        VB: TRTCVideoResolution.TRTCVideoResolution_480_480
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_480_480
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_480_480
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_480_480
        path: ''
        startLine: 311
      summary: "\nRecommended bitrate: 350 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_480_480 = 7
          VB: TRTCVideoResolution_480_480 = 7
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_160_120
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_160_120
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_160_120
        VB: TRTCVideoResolution_160_120
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_160_120
        VB: TRTCVideoResolution.TRTCVideoResolution_160_120
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_160_120
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_160_120
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_160_120
        path: ''
        startLine: 317
      summary: "\nRecommended bitrate: 100 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_160_120 = 50
          VB: TRTCVideoResolution_160_120 = 50
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_240_180
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_240_180
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_240_180
        VB: TRTCVideoResolution_240_180
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_240_180
        VB: TRTCVideoResolution.TRTCVideoResolution_240_180
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_240_180
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_240_180
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_240_180
        path: ''
        startLine: 321
      summary: "\nRecommended bitrate: 150 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_240_180 = 52
          VB: TRTCVideoResolution_240_180 = 52
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_280_210
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_280_210
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_280_210
        VB: TRTCVideoResolution_280_210
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_280_210
        VB: TRTCVideoResolution.TRTCVideoResolution_280_210
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_280_210
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_280_210
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_280_210
        path: ''
        startLine: 325
      summary: "\nRecommended bitrate: 200 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_280_210 = 54
          VB: TRTCVideoResolution_280_210 = 54
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_320_240
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_320_240
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_320_240
        VB: TRTCVideoResolution_320_240
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_320_240
        VB: TRTCVideoResolution.TRTCVideoResolution_320_240
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_320_240
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_320_240
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_320_240
        path: ''
        startLine: 329
      summary: "\nRecommended bitrate: 250 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_320_240 = 56
          VB: TRTCVideoResolution_320_240 = 56
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_400_300
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_400_300
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_400_300
        VB: TRTCVideoResolution_400_300
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_400_300
        VB: TRTCVideoResolution.TRTCVideoResolution_400_300
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_400_300
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_400_300
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_400_300
        path: ''
        startLine: 333
      summary: "\nRecommended bitrate: 300 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_400_300 = 58
          VB: TRTCVideoResolution_400_300 = 58
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_480_360
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_480_360
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_480_360
        VB: TRTCVideoResolution_480_360
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_480_360
        VB: TRTCVideoResolution.TRTCVideoResolution_480_360
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_480_360
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_480_360
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_480_360
        path: ''
        startLine: 337
      summary: "\nRecommended bitrate: 400 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_480_360 = 60
          VB: TRTCVideoResolution_480_360 = 60
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_640_480
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_640_480
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_640_480
        VB: TRTCVideoResolution_640_480
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_640_480
        VB: TRTCVideoResolution.TRTCVideoResolution_640_480
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_640_480
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_640_480
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_640_480
        path: ''
        startLine: 341
      summary: "\nRecommended bitrate: 600 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_640_480 = 62
          VB: TRTCVideoResolution_640_480 = 62
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_960_720
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_960_720
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_960_720
        VB: TRTCVideoResolution_960_720
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_960_720
        VB: TRTCVideoResolution.TRTCVideoResolution_960_720
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_960_720
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_960_720
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_960_720
        path: ''
        startLine: 345
      summary: "\nRecommended bitrate: 1000 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_960_720 = 64
          VB: TRTCVideoResolution_960_720 = 64
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_160_90
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_160_90
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_160_90
        VB: TRTCVideoResolution_160_90
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_160_90
        VB: TRTCVideoResolution.TRTCVideoResolution_160_90
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_160_90
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_160_90
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_160_90
        path: ''
        startLine: 352
      summary: "\nRecommended bitrate: 150 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_160_90 = 100
          VB: TRTCVideoResolution_160_90 = 100
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_256_144
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_256_144
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_256_144
        VB: TRTCVideoResolution_256_144
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_256_144
        VB: TRTCVideoResolution.TRTCVideoResolution_256_144
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_256_144
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_256_144
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_256_144
        path: ''
        startLine: 356
      summary: "\nRecommended bitrate: 200 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_256_144 = 102
          VB: TRTCVideoResolution_256_144 = 102
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_320_180
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_320_180
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_320_180
        VB: TRTCVideoResolution_320_180
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_320_180
        VB: TRTCVideoResolution.TRTCVideoResolution_320_180
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_320_180
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_320_180
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_320_180
        path: ''
        startLine: 360
      summary: "\nRecommended bitrate: 250 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_320_180 = 104
          VB: TRTCVideoResolution_320_180 = 104
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_480_270
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_480_270
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_480_270
        VB: TRTCVideoResolution_480_270
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_480_270
        VB: TRTCVideoResolution.TRTCVideoResolution_480_270
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_480_270
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_480_270
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_480_270
        path: ''
        startLine: 364
      summary: "\nRecommended bitrate: 350 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_480_270 = 106
          VB: TRTCVideoResolution_480_270 = 106
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_640_360
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_640_360
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_640_360
        VB: TRTCVideoResolution_640_360
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_640_360
        VB: TRTCVideoResolution.TRTCVideoResolution_640_360
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_640_360
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_640_360
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_640_360
        path: ''
        startLine: 368
      summary: "\nRecommended bitrate: 550 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_640_360 = 108
          VB: TRTCVideoResolution_640_360 = 108
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_960_540
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_960_540
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_960_540
        VB: TRTCVideoResolution_960_540
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_960_540
        VB: TRTCVideoResolution.TRTCVideoResolution_960_540
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_960_540
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_960_540
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_960_540
        path: ''
        startLine: 372
      summary: "\nRecommended bitrate: 850 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_960_540 = 110
          VB: TRTCVideoResolution_960_540 = 110
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_1280_720
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_1280_720
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_1280_720
        VB: TRTCVideoResolution_1280_720
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_1280_720
        VB: TRTCVideoResolution.TRTCVideoResolution_1280_720
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_1280_720
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_1280_720
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_1280_720
        path: ''
        startLine: 377
      summary: "\nCamera capturing. Recommended bitrate: 1200 Kbps\n<p>Screen sharing. Recommended bitrate: 1000 Kbps for smooth quality and 1600 Kbps for HD quality</p>\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_1280_720 = 112
          VB: TRTCVideoResolution_1280_720 = 112
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolution.TRTCVideoResolution_1920_1080
      commentId: F:trtc.TRTCVideoResolution.TRTCVideoResolution_1920_1080
      language: CSharp
      name:
        CSharp: TRTCVideoResolution_1920_1080
        VB: TRTCVideoResolution_1920_1080
      nameWithType:
        CSharp: TRTCVideoResolution.TRTCVideoResolution_1920_1080
        VB: TRTCVideoResolution.TRTCVideoResolution_1920_1080
      qualifiedName:
        CSharp: trtc.TRTCVideoResolution.TRTCVideoResolution_1920_1080
        VB: trtc.TRTCVideoResolution.TRTCVideoResolution_1920_1080
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolution_1920_1080
        path: ''
        startLine: 381
      summary: "\nScreen sharing. Recommended bitrate: 2000 Kbps\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolution_1920_1080 = 114
          VB: TRTCVideoResolution_1920_1080 = 114
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCVideoResolutionMode
    commentId: T:trtc.TRTCVideoResolutionMode
    language: CSharp
    name:
      CSharp: TRTCVideoResolutionMode
      VB: TRTCVideoResolutionMode
    nameWithType:
      CSharp: TRTCVideoResolutionMode
      VB: TRTCVideoResolutionMode
    qualifiedName:
      CSharp: trtc.TRTCVideoResolutionMode
      VB: trtc.TRTCVideoResolutionMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVideoResolutionMode
      path: ''
      startLine: 390
    summary: "\n1.2 Resolution mode\n\n<p>- Landscape resolution: TRTCVideoResolution_640_360 + TRTCVideoResolutionModeLandscape = 640 × 360</p>\n<p>- Portrait resolution: TRTCVideoResolution_640_360 + TRTCVideoResolutionModePortrait = 360 × 640</p>\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCVideoResolutionMode
        VB: Public Enum TRTCVideoResolutionMode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCVideoResolutionMode.TRTCVideoResolutionModeLandscape
      commentId: F:trtc.TRTCVideoResolutionMode.TRTCVideoResolutionModeLandscape
      language: CSharp
      name:
        CSharp: TRTCVideoResolutionModeLandscape
        VB: TRTCVideoResolutionModeLandscape
      nameWithType:
        CSharp: TRTCVideoResolutionMode.TRTCVideoResolutionModeLandscape
        VB: TRTCVideoResolutionMode.TRTCVideoResolutionModeLandscape
      qualifiedName:
        CSharp: trtc.TRTCVideoResolutionMode.TRTCVideoResolutionModeLandscape
        VB: trtc.TRTCVideoResolutionMode.TRTCVideoResolutionModeLandscape
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolutionModeLandscape
        path: ''
        startLine: 395
      summary: "\nLandscape resolution\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolutionModeLandscape = 0
          VB: TRTCVideoResolutionModeLandscape = 0
        return:
          type: trtc.TRTCVideoResolutionMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoResolutionMode.TRTCVideoResolutionModePortrait
      commentId: F:trtc.TRTCVideoResolutionMode.TRTCVideoResolutionModePortrait
      language: CSharp
      name:
        CSharp: TRTCVideoResolutionModePortrait
        VB: TRTCVideoResolutionModePortrait
      nameWithType:
        CSharp: TRTCVideoResolutionMode.TRTCVideoResolutionModePortrait
        VB: TRTCVideoResolutionMode.TRTCVideoResolutionModePortrait
      qualifiedName:
        CSharp: trtc.TRTCVideoResolutionMode.TRTCVideoResolutionModePortrait
        VB: trtc.TRTCVideoResolutionMode.TRTCVideoResolutionModePortrait
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoResolutionModePortrait
        path: ''
        startLine: 399
      summary: "\nPortrait resolution\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoResolutionModePortrait = 1
          VB: TRTCVideoResolutionModePortrait = 1
        return:
          type: trtc.TRTCVideoResolutionMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCVideoStreamType
    commentId: T:trtc.TRTCVideoStreamType
    language: CSharp
    name:
      CSharp: TRTCVideoStreamType
      VB: TRTCVideoStreamType
    nameWithType:
      CSharp: TRTCVideoStreamType
      VB: TRTCVideoStreamType
    qualifiedName:
      CSharp: trtc.TRTCVideoStreamType
      VB: trtc.TRTCVideoStreamType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVideoStreamType
      path: ''
      startLine: 413
    summary: "\n1.3 Video stream type\n\n<p>There are three types of streams in TRTC, namely:</p>\n<p>-Big-image stream: It is the most used stream type, which usually transfers video data captured by the camera.</p>\n<p>-Small-image stream: It transfers the same data as the big-image stream, but at lower resolution and bitrate.</p>\n"
    remarks: "\n- In case of good upstream network conditions, an anchor can send both the big and small images.\n<p>- The small image depends on the big image. You cannot enable only the small image.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCVideoStreamType
        VB: Public Enum TRTCVideoStreamType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCVideoStreamType.TRTCVideoStreamTypeBig
      commentId: F:trtc.TRTCVideoStreamType.TRTCVideoStreamTypeBig
      language: CSharp
      name:
        CSharp: TRTCVideoStreamTypeBig
        VB: TRTCVideoStreamTypeBig
      nameWithType:
        CSharp: TRTCVideoStreamType.TRTCVideoStreamTypeBig
        VB: TRTCVideoStreamType.TRTCVideoStreamTypeBig
      qualifiedName:
        CSharp: trtc.TRTCVideoStreamType.TRTCVideoStreamTypeBig
        VB: trtc.TRTCVideoStreamType.TRTCVideoStreamTypeBig
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoStreamTypeBig
        path: ''
        startLine: 418
      syntax:
        content:
          CSharp: TRTCVideoStreamTypeBig = 0
          VB: TRTCVideoStreamTypeBig = 0
        return:
          type: trtc.TRTCVideoStreamType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoStreamType.TRTCVideoStreamTypeSmall
      commentId: F:trtc.TRTCVideoStreamType.TRTCVideoStreamTypeSmall
      language: CSharp
      name:
        CSharp: TRTCVideoStreamTypeSmall
        VB: TRTCVideoStreamTypeSmall
      nameWithType:
        CSharp: TRTCVideoStreamType.TRTCVideoStreamTypeSmall
        VB: TRTCVideoStreamType.TRTCVideoStreamTypeSmall
      qualifiedName:
        CSharp: trtc.TRTCVideoStreamType.TRTCVideoStreamTypeSmall
        VB: trtc.TRTCVideoStreamType.TRTCVideoStreamTypeSmall
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoStreamTypeSmall
        path: ''
        startLine: 422
      summary: "\nSmall-image stream\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoStreamTypeSmall = 1
          VB: TRTCVideoStreamTypeSmall = 1
        return:
          type: trtc.TRTCVideoStreamType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoStreamType.TRTCVideoStreamTypeSub
      commentId: F:trtc.TRTCVideoStreamType.TRTCVideoStreamTypeSub
      language: CSharp
      name:
        CSharp: TRTCVideoStreamTypeSub
        VB: TRTCVideoStreamTypeSub
      nameWithType:
        CSharp: TRTCVideoStreamType.TRTCVideoStreamTypeSub
        VB: TRTCVideoStreamType.TRTCVideoStreamTypeSub
      qualifiedName:
        CSharp: trtc.TRTCVideoStreamType.TRTCVideoStreamTypeSub
        VB: trtc.TRTCVideoStreamType.TRTCVideoStreamTypeSub
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoStreamTypeSub
        path: ''
        startLine: 426
      summary: "\nSubstream (screen sharing)\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoStreamTypeSub = 2
          VB: TRTCVideoStreamTypeSub = 2
        return:
          type: trtc.TRTCVideoStreamType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCQuality
    commentId: T:trtc.TRTCQuality
    language: CSharp
    name:
      CSharp: TRTCQuality
      VB: TRTCQuality
    nameWithType:
      CSharp: TRTCQuality
      VB: TRTCQuality
    qualifiedName:
      CSharp: trtc.TRTCQuality
      VB: trtc.TRTCQuality
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCQuality
      path: ''
      startLine: 434
    summary: "\n1.4 Video quality\n\n<p>The TRTC SDK has defined 6 video quality standards. `Excellent` indicates the highest quality standard, and `Down` means the video is unavailable.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCQuality
        VB: Public Enum TRTCQuality
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCQuality.TRTCQuality_Unknown
      commentId: F:trtc.TRTCQuality.TRTCQuality_Unknown
      language: CSharp
      name:
        CSharp: TRTCQuality_Unknown
        VB: TRTCQuality_Unknown
      nameWithType:
        CSharp: TRTCQuality.TRTCQuality_Unknown
        VB: TRTCQuality.TRTCQuality_Unknown
      qualifiedName:
        CSharp: trtc.TRTCQuality.TRTCQuality_Unknown
        VB: trtc.TRTCQuality.TRTCQuality_Unknown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCQuality_Unknown
        path: ''
        startLine: 439
      summary: "\nUnknown\n"
      example: []
      syntax:
        content:
          CSharp: TRTCQuality_Unknown = 0
          VB: TRTCQuality_Unknown = 0
        return:
          type: trtc.TRTCQuality
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCQuality.TRTCQuality_Excellent
      commentId: F:trtc.TRTCQuality.TRTCQuality_Excellent
      language: CSharp
      name:
        CSharp: TRTCQuality_Excellent
        VB: TRTCQuality_Excellent
      nameWithType:
        CSharp: TRTCQuality.TRTCQuality_Excellent
        VB: TRTCQuality.TRTCQuality_Excellent
      qualifiedName:
        CSharp: trtc.TRTCQuality.TRTCQuality_Excellent
        VB: trtc.TRTCQuality.TRTCQuality_Excellent
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCQuality_Excellent
        path: ''
        startLine: 443
      summary: "\nExcellent\n"
      example: []
      syntax:
        content:
          CSharp: TRTCQuality_Excellent = 1
          VB: TRTCQuality_Excellent = 1
        return:
          type: trtc.TRTCQuality
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCQuality.TRTCQuality_Good
      commentId: F:trtc.TRTCQuality.TRTCQuality_Good
      language: CSharp
      name:
        CSharp: TRTCQuality_Good
        VB: TRTCQuality_Good
      nameWithType:
        CSharp: TRTCQuality.TRTCQuality_Good
        VB: TRTCQuality.TRTCQuality_Good
      qualifiedName:
        CSharp: trtc.TRTCQuality.TRTCQuality_Good
        VB: trtc.TRTCQuality.TRTCQuality_Good
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCQuality_Good
        path: ''
        startLine: 447
      summary: "\nGood\n"
      example: []
      syntax:
        content:
          CSharp: TRTCQuality_Good = 2
          VB: TRTCQuality_Good = 2
        return:
          type: trtc.TRTCQuality
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCQuality.TRTCQuality_Poor
      commentId: F:trtc.TRTCQuality.TRTCQuality_Poor
      language: CSharp
      name:
        CSharp: TRTCQuality_Poor
        VB: TRTCQuality_Poor
      nameWithType:
        CSharp: TRTCQuality.TRTCQuality_Poor
        VB: TRTCQuality.TRTCQuality_Poor
      qualifiedName:
        CSharp: trtc.TRTCQuality.TRTCQuality_Poor
        VB: trtc.TRTCQuality.TRTCQuality_Poor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCQuality_Poor
        path: ''
        startLine: 451
      summary: "\nAverage\n"
      example: []
      syntax:
        content:
          CSharp: TRTCQuality_Poor = 3
          VB: TRTCQuality_Poor = 3
        return:
          type: trtc.TRTCQuality
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCQuality.TRTCQuality_Bad
      commentId: F:trtc.TRTCQuality.TRTCQuality_Bad
      language: CSharp
      name:
        CSharp: TRTCQuality_Bad
        VB: TRTCQuality_Bad
      nameWithType:
        CSharp: TRTCQuality.TRTCQuality_Bad
        VB: TRTCQuality.TRTCQuality_Bad
      qualifiedName:
        CSharp: trtc.TRTCQuality.TRTCQuality_Bad
        VB: trtc.TRTCQuality.TRTCQuality_Bad
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCQuality_Bad
        path: ''
        startLine: 455
      summary: "\nBad\n"
      example: []
      syntax:
        content:
          CSharp: TRTCQuality_Bad = 4
          VB: TRTCQuality_Bad = 4
        return:
          type: trtc.TRTCQuality
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCQuality.TRTCQuality_Vbad
      commentId: F:trtc.TRTCQuality.TRTCQuality_Vbad
      language: CSharp
      name:
        CSharp: TRTCQuality_Vbad
        VB: TRTCQuality_Vbad
      nameWithType:
        CSharp: TRTCQuality.TRTCQuality_Vbad
        VB: TRTCQuality.TRTCQuality_Vbad
      qualifiedName:
        CSharp: trtc.TRTCQuality.TRTCQuality_Vbad
        VB: trtc.TRTCQuality.TRTCQuality_Vbad
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCQuality_Vbad
        path: ''
        startLine: 459
      summary: "\nVery bad\n"
      example: []
      syntax:
        content:
          CSharp: TRTCQuality_Vbad = 5
          VB: TRTCQuality_Vbad = 5
        return:
          type: trtc.TRTCQuality
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCQuality.TRTCQuality_Down
      commentId: F:trtc.TRTCQuality.TRTCQuality_Down
      language: CSharp
      name:
        CSharp: TRTCQuality_Down
        VB: TRTCQuality_Down
      nameWithType:
        CSharp: TRTCQuality.TRTCQuality_Down
        VB: TRTCQuality.TRTCQuality_Down
      qualifiedName:
        CSharp: trtc.TRTCQuality.TRTCQuality_Down
        VB: trtc.TRTCQuality.TRTCQuality_Down
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCQuality_Down
        path: ''
        startLine: 463
      summary: "\nUnavailable\n"
      example: []
      syntax:
        content:
          CSharp: TRTCQuality_Down = 6
          VB: TRTCQuality_Down = 6
        return:
          type: trtc.TRTCQuality
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCVideoFillMode
    commentId: T:trtc.TRTCVideoFillMode
    language: CSharp
    name:
      CSharp: TRTCVideoFillMode
      VB: TRTCVideoFillMode
    nameWithType:
      CSharp: TRTCVideoFillMode
      VB: TRTCVideoFillMode
    qualifiedName:
      CSharp: trtc.TRTCVideoFillMode
      VB: trtc.TRTCVideoFillMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVideoFillMode
      path: ''
      startLine: 473
    summary: "\n1.5 Image fill mode\n\n<p>If the target resolution does not match the original resolution of a video, you need to specify the image fill mode.</p>\n<p>- TRTCVideoFillMode_Fill: The excess parts are cropped, and the image may not be displayed in whole.</p>\n<p>- TRTCVideoFillMode_Fit: The long side of the image is stretched to fit the screen, and the blank area is filled with black bars. The image is displayed in whole.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCVideoFillMode
        VB: Public Enum TRTCVideoFillMode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCVideoFillMode.TRTCVideoFillMode_Fill
      commentId: F:trtc.TRTCVideoFillMode.TRTCVideoFillMode_Fill
      language: CSharp
      name:
        CSharp: TRTCVideoFillMode_Fill
        VB: TRTCVideoFillMode_Fill
      nameWithType:
        CSharp: TRTCVideoFillMode.TRTCVideoFillMode_Fill
        VB: TRTCVideoFillMode.TRTCVideoFillMode_Fill
      qualifiedName:
        CSharp: trtc.TRTCVideoFillMode.TRTCVideoFillMode_Fill
        VB: trtc.TRTCVideoFillMode.TRTCVideoFillMode_Fill
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoFillMode_Fill
        path: ''
        startLine: 478
      summary: "\nThe image is scaled to fill the entire screen, and the excess parts are cropped.\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoFillMode_Fill = 0
          VB: TRTCVideoFillMode_Fill = 0
        return:
          type: trtc.TRTCVideoFillMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoFillMode.TRTCVideoFillMode_Fit
      commentId: F:trtc.TRTCVideoFillMode.TRTCVideoFillMode_Fit
      language: CSharp
      name:
        CSharp: TRTCVideoFillMode_Fit
        VB: TRTCVideoFillMode_Fit
      nameWithType:
        CSharp: TRTCVideoFillMode.TRTCVideoFillMode_Fit
        VB: TRTCVideoFillMode.TRTCVideoFillMode_Fit
      qualifiedName:
        CSharp: trtc.TRTCVideoFillMode.TRTCVideoFillMode_Fit
        VB: trtc.TRTCVideoFillMode.TRTCVideoFillMode_Fit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoFillMode_Fit
        path: ''
        startLine: 482
      summary: "\nThe long side of the image is stretched to fit the screen, and the blank area is filled with black bars.\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoFillMode_Fit = 1
          VB: TRTCVideoFillMode_Fit = 1
        return:
          type: trtc.TRTCVideoFillMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCVideoRotation
    commentId: T:trtc.TRTCVideoRotation
    language: CSharp
    name:
      CSharp: TRTCVideoRotation
      VB: TRTCVideoRotation
    nameWithType:
      CSharp: TRTCVideoRotation
      VB: TRTCVideoRotation
    qualifiedName:
      CSharp: trtc.TRTCVideoRotation
      VB: trtc.TRTCVideoRotation
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVideoRotation
      path: ''
      startLine: 490
    summary: "\n1.6 Image rotation\n\n<p>The TRTC SDK provides APIs for setting the rotation of local and remote videos.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCVideoRotation
        VB: Public Enum TRTCVideoRotation
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCVideoRotation.TRTCVideoRotation0
      commentId: F:trtc.TRTCVideoRotation.TRTCVideoRotation0
      language: CSharp
      name:
        CSharp: TRTCVideoRotation0
        VB: TRTCVideoRotation0
      nameWithType:
        CSharp: TRTCVideoRotation.TRTCVideoRotation0
        VB: TRTCVideoRotation.TRTCVideoRotation0
      qualifiedName:
        CSharp: trtc.TRTCVideoRotation.TRTCVideoRotation0
        VB: trtc.TRTCVideoRotation.TRTCVideoRotation0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoRotation0
        path: ''
        startLine: 495
      summary: "\nDo not rotate\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoRotation0 = 0
          VB: TRTCVideoRotation0 = 0
        return:
          type: trtc.TRTCVideoRotation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoRotation.TRTCVideoRotation90
      commentId: F:trtc.TRTCVideoRotation.TRTCVideoRotation90
      language: CSharp
      name:
        CSharp: TRTCVideoRotation90
        VB: TRTCVideoRotation90
      nameWithType:
        CSharp: TRTCVideoRotation.TRTCVideoRotation90
        VB: TRTCVideoRotation.TRTCVideoRotation90
      qualifiedName:
        CSharp: trtc.TRTCVideoRotation.TRTCVideoRotation90
        VB: trtc.TRTCVideoRotation.TRTCVideoRotation90
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoRotation90
        path: ''
        startLine: 499
      summary: "\nRotate 90 degrees clockwise\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoRotation90 = 1
          VB: TRTCVideoRotation90 = 1
        return:
          type: trtc.TRTCVideoRotation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoRotation.TRTCVideoRotation180
      commentId: F:trtc.TRTCVideoRotation.TRTCVideoRotation180
      language: CSharp
      name:
        CSharp: TRTCVideoRotation180
        VB: TRTCVideoRotation180
      nameWithType:
        CSharp: TRTCVideoRotation.TRTCVideoRotation180
        VB: TRTCVideoRotation.TRTCVideoRotation180
      qualifiedName:
        CSharp: trtc.TRTCVideoRotation.TRTCVideoRotation180
        VB: trtc.TRTCVideoRotation.TRTCVideoRotation180
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoRotation180
        path: ''
        startLine: 503
      summary: "\nRotate 180 degrees clockwise\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoRotation180 = 2
          VB: TRTCVideoRotation180 = 2
        return:
          type: trtc.TRTCVideoRotation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoRotation.TRTCVideoRotation270
      commentId: F:trtc.TRTCVideoRotation.TRTCVideoRotation270
      language: CSharp
      name:
        CSharp: TRTCVideoRotation270
        VB: TRTCVideoRotation270
      nameWithType:
        CSharp: TRTCVideoRotation.TRTCVideoRotation270
        VB: TRTCVideoRotation.TRTCVideoRotation270
      qualifiedName:
        CSharp: trtc.TRTCVideoRotation.TRTCVideoRotation270
        VB: trtc.TRTCVideoRotation.TRTCVideoRotation270
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoRotation270
        path: ''
        startLine: 507
      summary: "\nRotate 270 degrees clockwise\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoRotation270 = 3
          VB: TRTCVideoRotation270 = 3
        return:
          type: trtc.TRTCVideoRotation
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCBeautyStyle
    commentId: T:trtc.TRTCBeautyStyle
    language: CSharp
    name:
      CSharp: TRTCBeautyStyle
      VB: TRTCBeautyStyle
    nameWithType:
      CSharp: TRTCBeautyStyle
      VB: TRTCBeautyStyle
    qualifiedName:
      CSharp: trtc.TRTCBeautyStyle
      VB: trtc.TRTCBeautyStyle
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCBeautyStyle
      path: ''
      startLine: 516
    summary: "\n1.6 Beauty filter (skin smoothing) algorithm\n"
    remarks: "\nThe TRTC SDK has two built-in skin smoothing algorithms. Choose the one that best fits your product positioning.\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCBeautyStyle
        VB: Public Enum TRTCBeautyStyle
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCBeautyStyle.TRTCBeautyStyleSmooth
      commentId: F:trtc.TRTCBeautyStyle.TRTCBeautyStyleSmooth
      language: CSharp
      name:
        CSharp: TRTCBeautyStyleSmooth
        VB: TRTCBeautyStyleSmooth
      nameWithType:
        CSharp: TRTCBeautyStyle.TRTCBeautyStyleSmooth
        VB: TRTCBeautyStyle.TRTCBeautyStyleSmooth
      qualifiedName:
        CSharp: trtc.TRTCBeautyStyle.TRTCBeautyStyleSmooth
        VB: trtc.TRTCBeautyStyle.TRTCBeautyStyleSmooth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCBeautyStyleSmooth
        path: ''
        startLine: 521
      summary: "\nSmooth, which features more obvious skin smoothing effect and is suitable for showrooms\n"
      example: []
      syntax:
        content:
          CSharp: TRTCBeautyStyleSmooth = 0
          VB: TRTCBeautyStyleSmooth = 0
        return:
          type: trtc.TRTCBeautyStyle
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCBeautyStyle.TRTCBeautyStyleNature
      commentId: F:trtc.TRTCBeautyStyle.TRTCBeautyStyleNature
      language: CSharp
      name:
        CSharp: TRTCBeautyStyleNature
        VB: TRTCBeautyStyleNature
      nameWithType:
        CSharp: TRTCBeautyStyle.TRTCBeautyStyleNature
        VB: TRTCBeautyStyle.TRTCBeautyStyleNature
      qualifiedName:
        CSharp: trtc.TRTCBeautyStyle.TRTCBeautyStyleNature
        VB: trtc.TRTCBeautyStyle.TRTCBeautyStyleNature
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCBeautyStyleNature
        path: ''
        startLine: 526
      summary: "\nNatural, which retains more facial details and is more natural\n"
      example: []
      syntax:
        content:
          CSharp: TRTCBeautyStyleNature = 1
          VB: TRTCBeautyStyleNature = 1
        return:
          type: trtc.TRTCBeautyStyle
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCWaterMarkSrcType
    commentId: T:trtc.TRTCWaterMarkSrcType
    language: CSharp
    name:
      CSharp: TRTCWaterMarkSrcType
      VB: TRTCWaterMarkSrcType
    nameWithType:
      CSharp: TRTCWaterMarkSrcType
      VB: TRTCWaterMarkSrcType
    qualifiedName:
      CSharp: trtc.TRTCWaterMarkSrcType
      VB: trtc.TRTCWaterMarkSrcType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCWaterMarkSrcType
      path: ''
      startLine: 532
    syntax:
      content:
        CSharp: public enum TRTCWaterMarkSrcType
        VB: Public Enum TRTCWaterMarkSrcType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeFile
      commentId: F:trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeFile
      language: CSharp
      name:
        CSharp: TRTCWaterMarkSrcTypeFile
        VB: TRTCWaterMarkSrcTypeFile
      nameWithType:
        CSharp: TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeFile
        VB: TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeFile
      qualifiedName:
        CSharp: trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeFile
        VB: trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeFile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCWaterMarkSrcTypeFile
        path: ''
        startLine: 537
      summary: "\nPath to the image file, which can be in BMP, GIF, JPEG, PNG, TIFF, Exif, WMF, or EMF format\n"
      example: []
      syntax:
        content:
          CSharp: TRTCWaterMarkSrcTypeFile = 0
          VB: TRTCWaterMarkSrcTypeFile = 0
        return:
          type: trtc.TRTCWaterMarkSrcType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeBGRA32
      commentId: F:trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeBGRA32
      language: CSharp
      name:
        CSharp: TRTCWaterMarkSrcTypeBGRA32
        VB: TRTCWaterMarkSrcTypeBGRA32
      nameWithType:
        CSharp: TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeBGRA32
        VB: TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeBGRA32
      qualifiedName:
        CSharp: trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeBGRA32
        VB: trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeBGRA32
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCWaterMarkSrcTypeBGRA32
        path: ''
        startLine: 541
      summary: "\nMemory block in BGRA32 format\n"
      example: []
      syntax:
        content:
          CSharp: TRTCWaterMarkSrcTypeBGRA32 = 1
          VB: TRTCWaterMarkSrcTypeBGRA32 = 1
        return:
          type: trtc.TRTCWaterMarkSrcType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeRGBA32
      commentId: F:trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeRGBA32
      language: CSharp
      name:
        CSharp: TRTCWaterMarkSrcTypeRGBA32
        VB: TRTCWaterMarkSrcTypeRGBA32
      nameWithType:
        CSharp: TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeRGBA32
        VB: TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeRGBA32
      qualifiedName:
        CSharp: trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeRGBA32
        VB: trtc.TRTCWaterMarkSrcType.TRTCWaterMarkSrcTypeRGBA32
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCWaterMarkSrcTypeRGBA32
        path: ''
        startLine: 545
      summary: "\nMemory block in RGBA32 format\n"
      example: []
      syntax:
        content:
          CSharp: TRTCWaterMarkSrcTypeRGBA32 = 2
          VB: TRTCWaterMarkSrcTypeRGBA32 = 2
        return:
          type: trtc.TRTCWaterMarkSrcType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCVideoPixelFormat
    commentId: T:trtc.TRTCVideoPixelFormat
    language: CSharp
    name:
      CSharp: TRTCVideoPixelFormat
      VB: TRTCVideoPixelFormat
    nameWithType:
      CSharp: TRTCVideoPixelFormat
      VB: TRTCVideoPixelFormat
    qualifiedName:
      CSharp: trtc.TRTCVideoPixelFormat
      VB: trtc.TRTCVideoPixelFormat
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVideoPixelFormat
      path: ''
      startLine: 554
    summary: "\n1.8 Video pixel format\n\n<p>The TRTC SDK allows custom video capturing and rendering. In custom video capturing, you can use the enumerated values below to specify the pixel format of the video you capture.</p>\n<p>In custom video rendering, you can specify the pixel format of video data returned via the custom rendering callback.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCVideoPixelFormat
        VB: Public Enum TRTCVideoPixelFormat
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_Unknown
      commentId: F:trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_Unknown
      language: CSharp
      name:
        CSharp: TRTCVideoPixelFormat_Unknown
        VB: TRTCVideoPixelFormat_Unknown
      nameWithType:
        CSharp: TRTCVideoPixelFormat.TRTCVideoPixelFormat_Unknown
        VB: TRTCVideoPixelFormat.TRTCVideoPixelFormat_Unknown
      qualifiedName:
        CSharp: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_Unknown
        VB: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_Unknown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoPixelFormat_Unknown
        path: ''
        startLine: 556
      syntax:
        content:
          CSharp: TRTCVideoPixelFormat_Unknown = 0
          VB: TRTCVideoPixelFormat_Unknown = 0
        return:
          type: trtc.TRTCVideoPixelFormat
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_I420
      commentId: F:trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_I420
      language: CSharp
      name:
        CSharp: TRTCVideoPixelFormat_I420
        VB: TRTCVideoPixelFormat_I420
      nameWithType:
        CSharp: TRTCVideoPixelFormat.TRTCVideoPixelFormat_I420
        VB: TRTCVideoPixelFormat.TRTCVideoPixelFormat_I420
      qualifiedName:
        CSharp: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_I420
        VB: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_I420
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoPixelFormat_I420
        path: ''
        startLine: 557
      syntax:
        content:
          CSharp: TRTCVideoPixelFormat_I420 = 1
          VB: TRTCVideoPixelFormat_I420 = 1
        return:
          type: trtc.TRTCVideoPixelFormat
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_Texture_2D
      commentId: F:trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_Texture_2D
      language: CSharp
      name:
        CSharp: TRTCVideoPixelFormat_Texture_2D
        VB: TRTCVideoPixelFormat_Texture_2D
      nameWithType:
        CSharp: TRTCVideoPixelFormat.TRTCVideoPixelFormat_Texture_2D
        VB: TRTCVideoPixelFormat.TRTCVideoPixelFormat_Texture_2D
      qualifiedName:
        CSharp: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_Texture_2D
        VB: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_Texture_2D
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoPixelFormat_Texture_2D
        path: ''
        startLine: 558
      summary: I420
      example: []
      syntax:
        content:
          CSharp: TRTCVideoPixelFormat_Texture_2D = 2
          VB: TRTCVideoPixelFormat_Texture_2D = 2
        return:
          type: trtc.TRTCVideoPixelFormat
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_BGRA32
      commentId: F:trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_BGRA32
      language: CSharp
      name:
        CSharp: TRTCVideoPixelFormat_BGRA32
        VB: TRTCVideoPixelFormat_BGRA32
      nameWithType:
        CSharp: TRTCVideoPixelFormat.TRTCVideoPixelFormat_BGRA32
        VB: TRTCVideoPixelFormat.TRTCVideoPixelFormat_BGRA32
      qualifiedName:
        CSharp: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_BGRA32
        VB: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_BGRA32
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoPixelFormat_BGRA32
        path: ''
        startLine: 559
      summary: OpenGL 2D texture
      example: []
      syntax:
        content:
          CSharp: TRTCVideoPixelFormat_BGRA32 = 3
          VB: TRTCVideoPixelFormat_BGRA32 = 3
        return:
          type: trtc.TRTCVideoPixelFormat
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_RGBA32
      commentId: F:trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_RGBA32
      language: CSharp
      name:
        CSharp: TRTCVideoPixelFormat_RGBA32
        VB: TRTCVideoPixelFormat_RGBA32
      nameWithType:
        CSharp: TRTCVideoPixelFormat.TRTCVideoPixelFormat_RGBA32
        VB: TRTCVideoPixelFormat.TRTCVideoPixelFormat_RGBA32
      qualifiedName:
        CSharp: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_RGBA32
        VB: trtc.TRTCVideoPixelFormat.TRTCVideoPixelFormat_RGBA32
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoPixelFormat_RGBA32
        path: ''
        startLine: 560
      summary: BGRA32
      example: []
      syntax:
        content:
          CSharp: TRTCVideoPixelFormat_RGBA32 = 5
          VB: TRTCVideoPixelFormat_RGBA32 = 5
        return:
          type: trtc.TRTCVideoPixelFormat
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCVideoBufferType
    commentId: T:trtc.TRTCVideoBufferType
    language: CSharp
    name:
      CSharp: TRTCVideoBufferType
      VB: TRTCVideoBufferType
    nameWithType:
      CSharp: TRTCVideoBufferType
      VB: TRTCVideoBufferType
    qualifiedName:
      CSharp: trtc.TRTCVideoBufferType
      VB: trtc.TRTCVideoBufferType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVideoBufferType
      path: ''
      startLine: 566
    summary: "\n1.9 Video data container format\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCVideoBufferType
        VB: Public Enum TRTCVideoBufferType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCVideoBufferType.TRTCVideoBufferType_Unknown
      commentId: F:trtc.TRTCVideoBufferType.TRTCVideoBufferType_Unknown
      language: CSharp
      name:
        CSharp: TRTCVideoBufferType_Unknown
        VB: TRTCVideoBufferType_Unknown
      nameWithType:
        CSharp: TRTCVideoBufferType.TRTCVideoBufferType_Unknown
        VB: TRTCVideoBufferType.TRTCVideoBufferType_Unknown
      qualifiedName:
        CSharp: trtc.TRTCVideoBufferType.TRTCVideoBufferType_Unknown
        VB: trtc.TRTCVideoBufferType.TRTCVideoBufferType_Unknown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoBufferType_Unknown
        path: ''
        startLine: 568
      syntax:
        content:
          CSharp: TRTCVideoBufferType_Unknown = 0
          VB: TRTCVideoBufferType_Unknown = 0
        return:
          type: trtc.TRTCVideoBufferType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoBufferType.TRTCVideoBufferType_Buffer
      commentId: F:trtc.TRTCVideoBufferType.TRTCVideoBufferType_Buffer
      language: CSharp
      name:
        CSharp: TRTCVideoBufferType_Buffer
        VB: TRTCVideoBufferType_Buffer
      nameWithType:
        CSharp: TRTCVideoBufferType.TRTCVideoBufferType_Buffer
        VB: TRTCVideoBufferType.TRTCVideoBufferType_Buffer
      qualifiedName:
        CSharp: trtc.TRTCVideoBufferType.TRTCVideoBufferType_Buffer
        VB: trtc.TRTCVideoBufferType.TRTCVideoBufferType_Buffer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoBufferType_Buffer
        path: ''
        startLine: 572
      summary: "\nBinary buffer\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoBufferType_Buffer = 1
          VB: TRTCVideoBufferType_Buffer = 1
        return:
          type: trtc.TRTCVideoBufferType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoBufferType.TRTCVideoBufferType_Texture
      commentId: F:trtc.TRTCVideoBufferType.TRTCVideoBufferType_Texture
      language: CSharp
      name:
        CSharp: TRTCVideoBufferType_Texture
        VB: TRTCVideoBufferType_Texture
      nameWithType:
        CSharp: TRTCVideoBufferType.TRTCVideoBufferType_Texture
        VB: TRTCVideoBufferType.TRTCVideoBufferType_Texture
      qualifiedName:
        CSharp: trtc.TRTCVideoBufferType.TRTCVideoBufferType_Texture
        VB: trtc.TRTCVideoBufferType.TRTCVideoBufferType_Texture
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoBufferType_Texture
        path: ''
        startLine: 576
      summary: "\nTexture\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoBufferType_Texture = 3
          VB: TRTCVideoBufferType_Texture = 3
        return:
          type: trtc.TRTCVideoBufferType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCAppScene
    commentId: T:trtc.TRTCAppScene
    language: CSharp
    name:
      CSharp: TRTCAppScene
      VB: TRTCAppScene
    nameWithType:
      CSharp: TRTCAppScene
      VB: TRTCAppScene
    qualifiedName:
      CSharp: trtc.TRTCAppScene
      VB: trtc.TRTCAppScene
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCAppScene
      path: ''
      startLine: 594
    syntax:
      content:
        CSharp: public enum TRTCAppScene
        VB: Public Enum TRTCAppScene
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCAppScene.TRTCAppSceneVideoCall
      commentId: F:trtc.TRTCAppScene.TRTCAppSceneVideoCall
      language: CSharp
      name:
        CSharp: TRTCAppSceneVideoCall
        VB: TRTCAppSceneVideoCall
      nameWithType:
        CSharp: TRTCAppScene.TRTCAppSceneVideoCall
        VB: TRTCAppScene.TRTCAppSceneVideoCall
      qualifiedName:
        CSharp: trtc.TRTCAppScene.TRTCAppSceneVideoCall
        VB: trtc.TRTCAppScene.TRTCAppSceneVideoCall
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCAppSceneVideoCall
        path: ''
        startLine: 600
      summary: "\nVideo calls support 720p and 1080p HD video. Each room allows up to 300 concurrent users, and up to 50 of them can speak simultaneously.\n<p>Use cases: [one-to-one video call], [video conferencing with up to 300 participants], [online medical consultation], [video chat], [video interview], etc.</p>\n"
      example: []
      syntax:
        content:
          CSharp: TRTCAppSceneVideoCall = 0
          VB: TRTCAppSceneVideoCall = 0
        return:
          type: trtc.TRTCAppScene
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCAppScene.TRTCAppSceneLIVE
      commentId: F:trtc.TRTCAppScene.TRTCAppSceneLIVE
      language: CSharp
      name:
        CSharp: TRTCAppSceneLIVE
        VB: TRTCAppSceneLIVE
      nameWithType:
        CSharp: TRTCAppScene.TRTCAppSceneLIVE
        VB: TRTCAppScene.TRTCAppSceneLIVE
      qualifiedName:
        CSharp: trtc.TRTCAppScene.TRTCAppSceneLIVE
        VB: trtc.TRTCAppScene.TRTCAppSceneLIVE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCAppSceneLIVE
        path: ''
        startLine: 606
      syntax:
        content:
          CSharp: TRTCAppSceneLIVE = 1
          VB: TRTCAppSceneLIVE = 1
        return:
          type: trtc.TRTCAppScene
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCAppScene.TRTCAppSceneAudioCall
      commentId: F:trtc.TRTCAppScene.TRTCAppSceneAudioCall
      language: CSharp
      name:
        CSharp: TRTCAppSceneAudioCall
        VB: TRTCAppSceneAudioCall
      nameWithType:
        CSharp: TRTCAppScene.TRTCAppSceneAudioCall
        VB: TRTCAppScene.TRTCAppSceneAudioCall
      qualifiedName:
        CSharp: trtc.TRTCAppScene.TRTCAppSceneAudioCall
        VB: trtc.TRTCAppScene.TRTCAppSceneAudioCall
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCAppSceneAudioCall
        path: ''
        startLine: 611
      summary: "\nAudio calls support 48 kHz stereo audio. Each room allows up to 300 concurrent users, and up to 50 of them can speak simultaneously.\n<p>Use cases: [one-to-one audio call], [audio conferencing with up to 300 participants], [audio chat], [online Werewolf playing], etc.</p>\n"
      example: []
      syntax:
        content:
          CSharp: TRTCAppSceneAudioCall = 2
          VB: TRTCAppSceneAudioCall = 2
        return:
          type: trtc.TRTCAppScene
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCAppScene.TRTCAppSceneVoiceChatRoom
      commentId: F:trtc.TRTCAppScene.TRTCAppSceneVoiceChatRoom
      language: CSharp
      name:
        CSharp: TRTCAppSceneVoiceChatRoom
        VB: TRTCAppSceneVoiceChatRoom
      nameWithType:
        CSharp: TRTCAppScene.TRTCAppSceneVoiceChatRoom
        VB: TRTCAppScene.TRTCAppSceneVoiceChatRoom
      qualifiedName:
        CSharp: trtc.TRTCAppScene.TRTCAppSceneVoiceChatRoom
        VB: trtc.TRTCAppScene.TRTCAppSceneVoiceChatRoom
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCAppSceneVoiceChatRoom
        path: ''
        startLine: 617
      syntax:
        content:
          CSharp: TRTCAppSceneVoiceChatRoom = 3
          VB: TRTCAppSceneVoiceChatRoom = 3
        return:
          type: trtc.TRTCAppScene
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCRoleType
    commentId: T:trtc.TRTCRoleType
    language: CSharp
    name:
      CSharp: TRTCRoleType
      VB: TRTCRoleType
    nameWithType:
      CSharp: TRTCRoleType
      VB: TRTCRoleType
    qualifiedName:
      CSharp: trtc.TRTCRoleType
      VB: trtc.TRTCRoleType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCRoleType
      path: ''
      startLine: 628
    summary: "\n2.2 Role (available only if `TRTCAppScene` is set to `TRTCAppSceneLIVE` or `TRTCAppSceneVoiceChatRoom`)\n\n<p>ln live streaming scenarios, the majority of users are audience and only a small number publish streams. Distinguishing them by giving each user a role allows TRTC to better optimize its features based on different roles.</p>\n\n<p>- Anchor: Anchors can publish audio and video. Up to 50 users in a room can publish audio and video at the same time.</p>\n<p>- Audience: Audience can play but cannot publish audio or video. There is no upper limit on the audience size in a room.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCRoleType
        VB: Public Enum TRTCRoleType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCRoleType.TRTCRoleAnchor
      commentId: F:trtc.TRTCRoleType.TRTCRoleAnchor
      language: CSharp
      name:
        CSharp: TRTCRoleAnchor
        VB: TRTCRoleAnchor
      nameWithType:
        CSharp: TRTCRoleType.TRTCRoleAnchor
        VB: TRTCRoleType.TRTCRoleAnchor
      qualifiedName:
        CSharp: trtc.TRTCRoleType.TRTCRoleAnchor
        VB: trtc.TRTCRoleType.TRTCRoleAnchor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCRoleAnchor
        path: ''
        startLine: 633
      summary: "\nAnchor\n"
      example: []
      syntax:
        content:
          CSharp: TRTCRoleAnchor = 20
          VB: TRTCRoleAnchor = 20
        return:
          type: trtc.TRTCRoleType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCRoleType.TRTCRoleAudience
      commentId: F:trtc.TRTCRoleType.TRTCRoleAudience
      language: CSharp
      name:
        CSharp: TRTCRoleAudience
        VB: TRTCRoleAudience
      nameWithType:
        CSharp: TRTCRoleType.TRTCRoleAudience
        VB: TRTCRoleType.TRTCRoleAudience
      qualifiedName:
        CSharp: trtc.TRTCRoleType.TRTCRoleAudience
        VB: trtc.TRTCRoleType.TRTCRoleAudience
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCRoleAudience
        path: ''
        startLine: 637
      summary: "\nAudience\n"
      example: []
      syntax:
        content:
          CSharp: TRTCRoleAudience = 21
          VB: TRTCRoleAudience = 21
        return:
          type: trtc.TRTCRoleType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCQosControlMode
    commentId: T:trtc.TRTCQosControlMode
    language: CSharp
    name:
      CSharp: TRTCQosControlMode
      VB: TRTCQosControlMode
    nameWithType:
      CSharp: TRTCQosControlMode
      VB: TRTCQosControlMode
    qualifiedName:
      CSharp: trtc.TRTCQosControlMode
      VB: trtc.TRTCQosControlMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCQosControlMode
      path: ''
      startLine: 651
    summary: "\n2.3 QoS control mode\n\n<p>The TRTC SDK adjusts the codec and network module constantly to adapt to changing network conditions.</p>\n<p>To support quick algorithm upgrade, the SDK provides two QoS control modes:</p>\n<p>- ModeServer: cloud control, which is the default and recommended mode</p>\n<p>- ModeClient: local control, which is for internal debugging of the SDK and is not recommended</p>\n"
    remarks: "\nYou are advised to use the cloud control mode so that when we upgrade the QoS algorithm, you don’t need to update the SDK to get better QoS control results.\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCQosControlMode
        VB: Public Enum TRTCQosControlMode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCQosControlMode.TRTCQosControlModeClient
      commentId: F:trtc.TRTCQosControlMode.TRTCQosControlModeClient
      language: CSharp
      name:
        CSharp: TRTCQosControlModeClient
        VB: TRTCQosControlModeClient
      nameWithType:
        CSharp: TRTCQosControlMode.TRTCQosControlModeClient
        VB: TRTCQosControlMode.TRTCQosControlModeClient
      qualifiedName:
        CSharp: trtc.TRTCQosControlMode.TRTCQosControlModeClient
        VB: trtc.TRTCQosControlMode.TRTCQosControlModeClient
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCQosControlModeClient
        path: ''
        startLine: 656
      summary: "\nLocal control, which is for internal debugging of the SDK and is not recommended\n"
      example: []
      syntax:
        content:
          CSharp: TRTCQosControlModeClient = 0
          VB: TRTCQosControlModeClient = 0
        return:
          type: trtc.TRTCQosControlMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCQosControlMode.TRTCQosControlModeServer
      commentId: F:trtc.TRTCQosControlMode.TRTCQosControlModeServer
      language: CSharp
      name:
        CSharp: TRTCQosControlModeServer
        VB: TRTCQosControlModeServer
      nameWithType:
        CSharp: TRTCQosControlMode.TRTCQosControlModeServer
        VB: TRTCQosControlMode.TRTCQosControlModeServer
      qualifiedName:
        CSharp: trtc.TRTCQosControlMode.TRTCQosControlModeServer
        VB: trtc.TRTCQosControlMode.TRTCQosControlModeServer
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCQosControlModeServer
        path: ''
        startLine: 660
      summary: "\nCloud control (default)\n"
      example: []
      syntax:
        content:
          CSharp: TRTCQosControlModeServer = 1
          VB: TRTCQosControlModeServer = 1
        return:
          type: trtc.TRTCQosControlMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCVideoQosPreference
    commentId: T:trtc.TRTCVideoQosPreference
    language: CSharp
    name:
      CSharp: TRTCVideoQosPreference
      VB: TRTCVideoQosPreference
    nameWithType:
      CSharp: TRTCVideoQosPreference
      VB: TRTCVideoQosPreference
    qualifiedName:
      CSharp: trtc.TRTCVideoQosPreference
      VB: trtc.TRTCVideoQosPreference
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVideoQosPreference
      path: ''
      startLine: 670
    summary: "\n2.4 Video quality preference\n\n<p>You can specify whether to prioritize clarity or smoothness under poor network conditions.</p>\n<p>- Smooth: prioritize smoothness under poor network conditions. The publishing and smooth playback of audio are prioritized. Video may be blurry and pixelated, but does not stutter.</p>\n<p>- Clear: prioritize clarity under poor network conditions. Video is clear, but may stutter.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCVideoQosPreference
        VB: Public Enum TRTCVideoQosPreference
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCVideoQosPreference.TRTCVideoQosPreferenceSmooth
      commentId: F:trtc.TRTCVideoQosPreference.TRTCVideoQosPreferenceSmooth
      language: CSharp
      name:
        CSharp: TRTCVideoQosPreferenceSmooth
        VB: TRTCVideoQosPreferenceSmooth
      nameWithType:
        CSharp: TRTCVideoQosPreference.TRTCVideoQosPreferenceSmooth
        VB: TRTCVideoQosPreference.TRTCVideoQosPreferenceSmooth
      qualifiedName:
        CSharp: trtc.TRTCVideoQosPreference.TRTCVideoQosPreferenceSmooth
        VB: trtc.TRTCVideoQosPreference.TRTCVideoQosPreferenceSmooth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoQosPreferenceSmooth
        path: ''
        startLine: 675
      summary: "\nPrioritize smoothness under poor network conditions\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoQosPreferenceSmooth = 1
          VB: TRTCVideoQosPreferenceSmooth = 1
        return:
          type: trtc.TRTCVideoQosPreference
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoQosPreference.TRTCVideoQosPreferenceClear
      commentId: F:trtc.TRTCVideoQosPreference.TRTCVideoQosPreferenceClear
      language: CSharp
      name:
        CSharp: TRTCVideoQosPreferenceClear
        VB: TRTCVideoQosPreferenceClear
      nameWithType:
        CSharp: TRTCVideoQosPreference.TRTCVideoQosPreferenceClear
        VB: TRTCVideoQosPreference.TRTCVideoQosPreferenceClear
      qualifiedName:
        CSharp: trtc.TRTCVideoQosPreference.TRTCVideoQosPreferenceClear
        VB: trtc.TRTCVideoQosPreference.TRTCVideoQosPreferenceClear
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoQosPreferenceClear
        path: ''
        startLine: 679
      summary: "\nPrioritize clarity under poor network conditions\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoQosPreferenceClear = 2
          VB: TRTCVideoQosPreferenceClear = 2
        return:
          type: trtc.TRTCVideoQosPreference
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCAudioFrameFormat
    commentId: T:trtc.TRTCAudioFrameFormat
    language: CSharp
    name:
      CSharp: TRTCAudioFrameFormat
      VB: TRTCAudioFrameFormat
    nameWithType:
      CSharp: TRTCAudioFrameFormat
      VB: TRTCAudioFrameFormat
    qualifiedName:
      CSharp: trtc.TRTCAudioFrameFormat
      VB: trtc.TRTCAudioFrameFormat
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCAudioFrameFormat
      path: ''
      startLine: 691
    summary: "\n3.1 Audio frame format\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCAudioFrameFormat
        VB: Public Enum TRTCAudioFrameFormat
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCAudioFrameFormat.TRTCAudioFrameFormatNone
      commentId: F:trtc.TRTCAudioFrameFormat.TRTCAudioFrameFormatNone
      language: CSharp
      name:
        CSharp: TRTCAudioFrameFormatNone
        VB: TRTCAudioFrameFormatNone
      nameWithType:
        CSharp: TRTCAudioFrameFormat.TRTCAudioFrameFormatNone
        VB: TRTCAudioFrameFormat.TRTCAudioFrameFormatNone
      qualifiedName:
        CSharp: trtc.TRTCAudioFrameFormat.TRTCAudioFrameFormatNone
        VB: trtc.TRTCAudioFrameFormat.TRTCAudioFrameFormatNone
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCAudioFrameFormatNone
        path: ''
        startLine: 693
      syntax:
        content:
          CSharp: TRTCAudioFrameFormatNone = 0
          VB: TRTCAudioFrameFormatNone = 0
        return:
          type: trtc.TRTCAudioFrameFormat
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCAudioFrameFormat.TRTCAudioFrameFormatPCM
      commentId: F:trtc.TRTCAudioFrameFormat.TRTCAudioFrameFormatPCM
      language: CSharp
      name:
        CSharp: TRTCAudioFrameFormatPCM
        VB: TRTCAudioFrameFormatPCM
      nameWithType:
        CSharp: TRTCAudioFrameFormat.TRTCAudioFrameFormatPCM
        VB: TRTCAudioFrameFormat.TRTCAudioFrameFormatPCM
      qualifiedName:
        CSharp: trtc.TRTCAudioFrameFormat.TRTCAudioFrameFormatPCM
        VB: trtc.TRTCAudioFrameFormat.TRTCAudioFrameFormatPCM
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCAudioFrameFormatPCM
        path: ''
        startLine: 697
      summary: "\nPCM, 16 bits per sample\n"
      example: []
      syntax:
        content:
          CSharp: TRTCAudioFrameFormatPCM = 1
          VB: TRTCAudioFrameFormatPCM = 1
        return:
          type: trtc.TRTCAudioFrameFormat
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCAudioQuality
    commentId: T:trtc.TRTCAudioQuality
    language: CSharp
    name:
      CSharp: TRTCAudioQuality
      VB: TRTCAudioQuality
    nameWithType:
      CSharp: TRTCAudioQuality
      VB: TRTCAudioQuality
    qualifiedName:
      CSharp: trtc.TRTCAudioQuality
      VB: trtc.TRTCAudioQuality
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCAudioQuality
      path: ''
      startLine: 706
    summary: "\n3.2 Audio quality\n"
    remarks: "\nAudio quality is used to indicate the fidelity of audio. `TRTCAudioQualitySpeech` is suitable for calls and `TRTCAudioQualityMusic` for music scenarios with high requirements on audio quality.\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCAudioQuality
        VB: Public Enum TRTCAudioQuality
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCAudioQuality.TRTCAudioQualitySpeech
      commentId: F:trtc.TRTCAudioQuality.TRTCAudioQualitySpeech
      language: CSharp
      name:
        CSharp: TRTCAudioQualitySpeech
        VB: TRTCAudioQualitySpeech
      nameWithType:
        CSharp: TRTCAudioQuality.TRTCAudioQualitySpeech
        VB: TRTCAudioQuality.TRTCAudioQualitySpeech
      qualifiedName:
        CSharp: trtc.TRTCAudioQuality.TRTCAudioQualitySpeech
        VB: trtc.TRTCAudioQuality.TRTCAudioQualitySpeech
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCAudioQualitySpeech
        path: ''
        startLine: 711
      summary: "\nSpeech: mono audio with a sample rate of 16 kHz and a bitrate of 16 Kbps, suitable for online conferencing, audio calls, etc.\n"
      example: []
      syntax:
        content:
          CSharp: TRTCAudioQualitySpeech = 1
          VB: TRTCAudioQualitySpeech = 1
        return:
          type: trtc.TRTCAudioQuality
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCAudioQuality.TRTCAudioQualityDefault
      commentId: F:trtc.TRTCAudioQuality.TRTCAudioQualityDefault
      language: CSharp
      name:
        CSharp: TRTCAudioQualityDefault
        VB: TRTCAudioQualityDefault
      nameWithType:
        CSharp: TRTCAudioQuality.TRTCAudioQualityDefault
        VB: TRTCAudioQuality.TRTCAudioQualityDefault
      qualifiedName:
        CSharp: trtc.TRTCAudioQuality.TRTCAudioQualityDefault
        VB: trtc.TRTCAudioQuality.TRTCAudioQualityDefault
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCAudioQualityDefault
        path: ''
        startLine: 715
      summary: "\nDefault: mono audio with a sample rate of 48 kHz and a bitrate of 50 Kbps. This is the default audio quality used by the SDK and is recommended.\n"
      example: []
      syntax:
        content:
          CSharp: TRTCAudioQualityDefault = 2
          VB: TRTCAudioQualityDefault = 2
        return:
          type: trtc.TRTCAudioQuality
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCAudioQuality.TRTCAudioQualityMusic
      commentId: F:trtc.TRTCAudioQuality.TRTCAudioQualityMusic
      language: CSharp
      name:
        CSharp: TRTCAudioQualityMusic
        VB: TRTCAudioQualityMusic
      nameWithType:
        CSharp: TRTCAudioQuality.TRTCAudioQualityMusic
        VB: TRTCAudioQuality.TRTCAudioQualityMusic
      qualifiedName:
        CSharp: trtc.TRTCAudioQuality.TRTCAudioQualityMusic
        VB: trtc.TRTCAudioQuality.TRTCAudioQualityMusic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCAudioQualityMusic
        path: ''
        startLine: 719
      summary: "\nMusic: stereo and fullband audio with a sample rate of 48 kHz and a bitrate of 128 Kbps, suitable for music scenarios with high requirements on fidelity, such as karaoke and live music streaming\n"
      example: []
      syntax:
        content:
          CSharp: TRTCAudioQualityMusic = 3
          VB: TRTCAudioQualityMusic = 3
        return:
          type: trtc.TRTCAudioQuality
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TXVoiceChangeType
    commentId: T:trtc.TXVoiceChangeType
    language: CSharp
    name:
      CSharp: TXVoiceChangeType
      VB: TXVoiceChangeType
    nameWithType:
      CSharp: TXVoiceChangeType
      VB: TXVoiceChangeType
    qualifiedName:
      CSharp: trtc.TXVoiceChangeType
      VB: trtc.TXVoiceChangeType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TXVoiceChangeType
      path: ''
      startLine: 725
    summary: "\nVoice changing effect\n"
    example: []
    syntax:
      content:
        CSharp: public enum TXVoiceChangeType
        VB: Public Enum TXVoiceChangeType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_0
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_0
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_0
        VB: TXVoiceChangeType_0
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_0
        VB: TXVoiceChangeType.TXVoiceChangeType_0
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_0
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_0
        path: ''
        startLine: 730
      summary: "\nOriginal\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_0 = 0
          VB: TXVoiceChangeType_0 = 0
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_1
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_1
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_1
        VB: TXVoiceChangeType_1
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_1
        VB: TXVoiceChangeType.TXVoiceChangeType_1
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_1
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_1
        path: ''
        startLine: 734
      summary: "\nChild\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_1 = 1
          VB: TXVoiceChangeType_1 = 1
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_2
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_2
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_2
        VB: TXVoiceChangeType_2
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_2
        VB: TXVoiceChangeType.TXVoiceChangeType_2
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_2
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_2
        path: ''
        startLine: 738
      summary: "\nLittle girl\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_2 = 2
          VB: TXVoiceChangeType_2 = 2
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_3
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_3
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_3
        VB: TXVoiceChangeType_3
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_3
        VB: TXVoiceChangeType.TXVoiceChangeType_3
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_3
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_3
        path: ''
        startLine: 742
      summary: "\nMiddle-aged man\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_3 = 3
          VB: TXVoiceChangeType_3 = 3
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_4
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_4
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_4
        VB: TXVoiceChangeType_4
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_4
        VB: TXVoiceChangeType.TXVoiceChangeType_4
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_4
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_4
        path: ''
        startLine: 746
      summary: "\nMetal\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_4 = 4
          VB: TXVoiceChangeType_4 = 4
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_5
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_5
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_5
        VB: TXVoiceChangeType_5
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_5
        VB: TXVoiceChangeType.TXVoiceChangeType_5
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_5
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_5
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_5
        path: ''
        startLine: 750
      summary: "\nNasal\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_5 = 5
          VB: TXVoiceChangeType_5 = 5
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_6
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_6
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_6
        VB: TXVoiceChangeType_6
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_6
        VB: TXVoiceChangeType.TXVoiceChangeType_6
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_6
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_6
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_6
        path: ''
        startLine: 754
      summary: "\nPunk\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_6 = 6
          VB: TXVoiceChangeType_6 = 6
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_7
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_7
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_7
        VB: TXVoiceChangeType_7
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_7
        VB: TXVoiceChangeType.TXVoiceChangeType_7
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_7
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_7
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_7
        path: ''
        startLine: 758
      summary: "\nBeast\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_7 = 7
          VB: TXVoiceChangeType_7 = 7
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_8
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_8
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_8
        VB: TXVoiceChangeType_8
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_8
        VB: TXVoiceChangeType.TXVoiceChangeType_8
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_8
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_8
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_8
        path: ''
        startLine: 762
      summary: "\nFat boy\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_8 = 8
          VB: TXVoiceChangeType_8 = 8
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_9
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_9
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_9
        VB: TXVoiceChangeType_9
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_9
        VB: TXVoiceChangeType.TXVoiceChangeType_9
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_9
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_9
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_9
        path: ''
        startLine: 766
      summary: "\nElectric\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_9 = 9
          VB: TXVoiceChangeType_9 = 9
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_10
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_10
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_10
        VB: TXVoiceChangeType_10
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_10
        VB: TXVoiceChangeType.TXVoiceChangeType_10
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_10
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_10
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_10
        path: ''
        startLine: 770
      summary: "\nRobot\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_10 = 10
          VB: TXVoiceChangeType_10 = 10
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceChangeType.TXVoiceChangeType_11
      commentId: F:trtc.TXVoiceChangeType.TXVoiceChangeType_11
      language: CSharp
      name:
        CSharp: TXVoiceChangeType_11
        VB: TXVoiceChangeType_11
      nameWithType:
        CSharp: TXVoiceChangeType.TXVoiceChangeType_11
        VB: TXVoiceChangeType.TXVoiceChangeType_11
      qualifiedName:
        CSharp: trtc.TXVoiceChangeType.TXVoiceChangeType_11
        VB: trtc.TXVoiceChangeType.TXVoiceChangeType_11
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceChangeType_11
        path: ''
        startLine: 774
      summary: "\nEthereal\n"
      example: []
      syntax:
        content:
          CSharp: TXVoiceChangeType_11 = 11
          VB: TXVoiceChangeType_11 = 11
        return:
          type: trtc.TXVoiceChangeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TXVoiceReverbType
    commentId: T:trtc.TXVoiceReverbType
    language: CSharp
    name:
      CSharp: TXVoiceReverbType
      VB: TXVoiceReverbType
    nameWithType:
      CSharp: TXVoiceReverbType
      VB: TXVoiceReverbType
    qualifiedName:
      CSharp: trtc.TXVoiceReverbType
      VB: trtc.TXVoiceReverbType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TXVoiceReverbType
      path: ''
      startLine: 779
    summary: "\nReverb effect\n"
    example: []
    syntax:
      content:
        CSharp: public enum TXVoiceReverbType
        VB: Public Enum TXVoiceReverbType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TXVoiceReverbType.TXVoiceReverbType_0
      commentId: F:trtc.TXVoiceReverbType.TXVoiceReverbType_0
      language: CSharp
      name:
        CSharp: TXVoiceReverbType_0
        VB: TXVoiceReverbType_0
      nameWithType:
        CSharp: TXVoiceReverbType.TXVoiceReverbType_0
        VB: TXVoiceReverbType.TXVoiceReverbType_0
      qualifiedName:
        CSharp: trtc.TXVoiceReverbType.TXVoiceReverbType_0
        VB: trtc.TXVoiceReverbType.TXVoiceReverbType_0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceReverbType_0
        path: ''
        startLine: 782
      summary: Original
      example: []
      syntax:
        content:
          CSharp: TXVoiceReverbType_0 = 0
          VB: TXVoiceReverbType_0 = 0
        return:
          type: trtc.TXVoiceReverbType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceReverbType.TXVoiceReverbType_1
      commentId: F:trtc.TXVoiceReverbType.TXVoiceReverbType_1
      language: CSharp
      name:
        CSharp: TXVoiceReverbType_1
        VB: TXVoiceReverbType_1
      nameWithType:
        CSharp: TXVoiceReverbType.TXVoiceReverbType_1
        VB: TXVoiceReverbType.TXVoiceReverbType_1
      qualifiedName:
        CSharp: trtc.TXVoiceReverbType.TXVoiceReverbType_1
        VB: trtc.TXVoiceReverbType.TXVoiceReverbType_1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceReverbType_1
        path: ''
        startLine: 784
      summary: Karaoke
      example: []
      syntax:
        content:
          CSharp: TXVoiceReverbType_1 = 1
          VB: TXVoiceReverbType_1 = 1
        return:
          type: trtc.TXVoiceReverbType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceReverbType.TXVoiceReverbType_2
      commentId: F:trtc.TXVoiceReverbType.TXVoiceReverbType_2
      language: CSharp
      name:
        CSharp: TXVoiceReverbType_2
        VB: TXVoiceReverbType_2
      nameWithType:
        CSharp: TXVoiceReverbType.TXVoiceReverbType_2
        VB: TXVoiceReverbType.TXVoiceReverbType_2
      qualifiedName:
        CSharp: trtc.TXVoiceReverbType.TXVoiceReverbType_2
        VB: trtc.TXVoiceReverbType.TXVoiceReverbType_2
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceReverbType_2
        path: ''
        startLine: 786
      summary: Room
      example: []
      syntax:
        content:
          CSharp: TXVoiceReverbType_2 = 2
          VB: TXVoiceReverbType_2 = 2
        return:
          type: trtc.TXVoiceReverbType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceReverbType.TXVoiceReverbType_3
      commentId: F:trtc.TXVoiceReverbType.TXVoiceReverbType_3
      language: CSharp
      name:
        CSharp: TXVoiceReverbType_3
        VB: TXVoiceReverbType_3
      nameWithType:
        CSharp: TXVoiceReverbType.TXVoiceReverbType_3
        VB: TXVoiceReverbType.TXVoiceReverbType_3
      qualifiedName:
        CSharp: trtc.TXVoiceReverbType.TXVoiceReverbType_3
        VB: trtc.TXVoiceReverbType.TXVoiceReverbType_3
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceReverbType_3
        path: ''
        startLine: 788
      summary: Hall
      example: []
      syntax:
        content:
          CSharp: TXVoiceReverbType_3 = 3
          VB: TXVoiceReverbType_3 = 3
        return:
          type: trtc.TXVoiceReverbType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceReverbType.TXVoiceReverbType_4
      commentId: F:trtc.TXVoiceReverbType.TXVoiceReverbType_4
      language: CSharp
      name:
        CSharp: TXVoiceReverbType_4
        VB: TXVoiceReverbType_4
      nameWithType:
        CSharp: TXVoiceReverbType.TXVoiceReverbType_4
        VB: TXVoiceReverbType.TXVoiceReverbType_4
      qualifiedName:
        CSharp: trtc.TXVoiceReverbType.TXVoiceReverbType_4
        VB: trtc.TXVoiceReverbType.TXVoiceReverbType_4
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceReverbType_4
        path: ''
        startLine: 790
      summary: Deep
      example: []
      syntax:
        content:
          CSharp: TXVoiceReverbType_4 = 4
          VB: TXVoiceReverbType_4 = 4
        return:
          type: trtc.TXVoiceReverbType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceReverbType.TXVoiceReverbType_5
      commentId: F:trtc.TXVoiceReverbType.TXVoiceReverbType_5
      language: CSharp
      name:
        CSharp: TXVoiceReverbType_5
        VB: TXVoiceReverbType_5
      nameWithType:
        CSharp: TXVoiceReverbType.TXVoiceReverbType_5
        VB: TXVoiceReverbType.TXVoiceReverbType_5
      qualifiedName:
        CSharp: trtc.TXVoiceReverbType.TXVoiceReverbType_5
        VB: trtc.TXVoiceReverbType.TXVoiceReverbType_5
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceReverbType_5
        path: ''
        startLine: 792
      summary: Resonant
      example: []
      syntax:
        content:
          CSharp: TXVoiceReverbType_5 = 5
          VB: TXVoiceReverbType_5 = 5
        return:
          type: trtc.TXVoiceReverbType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceReverbType.TXVoiceReverbType_6
      commentId: F:trtc.TXVoiceReverbType.TXVoiceReverbType_6
      language: CSharp
      name:
        CSharp: TXVoiceReverbType_6
        VB: TXVoiceReverbType_6
      nameWithType:
        CSharp: TXVoiceReverbType.TXVoiceReverbType_6
        VB: TXVoiceReverbType.TXVoiceReverbType_6
      qualifiedName:
        CSharp: trtc.TXVoiceReverbType.TXVoiceReverbType_6
        VB: trtc.TXVoiceReverbType.TXVoiceReverbType_6
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceReverbType_6
        path: ''
        startLine: 794
      summary: Metal
      example: []
      syntax:
        content:
          CSharp: TXVoiceReverbType_6 = 6
          VB: TXVoiceReverbType_6 = 6
        return:
          type: trtc.TXVoiceReverbType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXVoiceReverbType.TXVoiceReverbType_7
      commentId: F:trtc.TXVoiceReverbType.TXVoiceReverbType_7
      language: CSharp
      name:
        CSharp: TXVoiceReverbType_7
        VB: TXVoiceReverbType_7
      nameWithType:
        CSharp: TXVoiceReverbType.TXVoiceReverbType_7
        VB: TXVoiceReverbType.TXVoiceReverbType_7
      qualifiedName:
        CSharp: trtc.TXVoiceReverbType.TXVoiceReverbType_7
        VB: trtc.TXVoiceReverbType.TXVoiceReverbType_7
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXVoiceReverbType_7
        path: ''
        startLine: 796
      summary: Husky
      example: []
      syntax:
        content:
          CSharp: TXVoiceReverbType_7 = 7
          VB: TXVoiceReverbType_7 = 7
        return:
          type: trtc.TXVoiceReverbType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCSwitchRoomConfig
    commentId: T:trtc.TRTCSwitchRoomConfig
    language: CSharp
    name:
      CSharp: TRTCSwitchRoomConfig
      VB: TRTCSwitchRoomConfig
    nameWithType:
      CSharp: TRTCSwitchRoomConfig
      VB: TRTCSwitchRoomConfig
    qualifiedName:
      CSharp: trtc.TRTCSwitchRoomConfig
      VB: trtc.TRTCSwitchRoomConfig
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCSwitchRoomConfig
      path: ''
      startLine: 802
    summary: "\nRoom switching parameters\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCSwitchRoomConfig
        VB: Public Structure TRTCSwitchRoomConfig
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCSwitchRoomConfig.roomId
      commentId: F:trtc.TRTCSwitchRoomConfig.roomId
      language: CSharp
      name:
        CSharp: roomId
        VB: roomId
      nameWithType:
        CSharp: TRTCSwitchRoomConfig.roomId
        VB: TRTCSwitchRoomConfig.roomId
      qualifiedName:
        CSharp: trtc.TRTCSwitchRoomConfig.roomId
        VB: trtc.TRTCSwitchRoomConfig.roomId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: roomId
        path: ''
        startLine: 808
      summary: "\n**Description:** numeric room ID (required). Users in the same room can see one another and have a video call.\n**Value:** a custom value, which must be unique. You can use the user ID of the room creator – if it is numeric – as the room ID.\n"
      example: []
      syntax:
        content:
          CSharp: public int roomId
          VB: Public roomId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCSwitchRoomConfig.strRoomId
      commentId: F:trtc.TRTCSwitchRoomConfig.strRoomId
      language: CSharp
      name:
        CSharp: strRoomId
        VB: strRoomId
      nameWithType:
        CSharp: TRTCSwitchRoomConfig.strRoomId
        VB: TRTCSwitchRoomConfig.strRoomId
      qualifiedName:
        CSharp: trtc.TRTCSwitchRoomConfig.strRoomId
        VB: trtc.TRTCSwitchRoomConfig.strRoomId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: strRoomId
        path: ''
        startLine: 815
      summary: "\n**Description:** string-type room ID. Users in the same room can see one another and make a video call.\n**Value:** 64 bytes or shorter; support the following character set (89 characters)\n**Note:** You must specify either `roomId` or `strRoomId`. If you use string-type room IDs, set `roomId` to `0`. If both parameters are set, `roomId` will be used.\n"
      example: []
      syntax:
        content:
          CSharp: public string strRoomId
          VB: Public strRoomId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCSwitchRoomConfig.userSig
      commentId: F:trtc.TRTCSwitchRoomConfig.userSig
      language: CSharp
      name:
        CSharp: userSig
        VB: userSig
      nameWithType:
        CSharp: TRTCSwitchRoomConfig.userSig
        VB: TRTCSwitchRoomConfig.userSig
      qualifiedName:
        CSharp: trtc.TRTCSwitchRoomConfig.userSig
        VB: trtc.TRTCSwitchRoomConfig.userSig
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: userSig
        path: ''
        startLine: 821
      summary: "\n**Description:** user signature of the current user (required), which functions as the login password\n**Value:** For how to calculate user signatures, please see [UserSig](https://cloud.tencent.com/document/product/647/17275).\n"
      example: []
      syntax:
        content:
          CSharp: public string userSig
          VB: Public userSig As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCSwitchRoomConfig.privateMapKey
      commentId: F:trtc.TRTCSwitchRoomConfig.privateMapKey
      language: CSharp
      name:
        CSharp: privateMapKey
        VB: privateMapKey
      nameWithType:
        CSharp: TRTCSwitchRoomConfig.privateMapKey
        VB: TRTCSwitchRoomConfig.privateMapKey
      qualifiedName:
        CSharp: trtc.TRTCSwitchRoomConfig.privateMapKey
        VB: trtc.TRTCSwitchRoomConfig.privateMapKey
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: privateMapKey
        path: ''
        startLine: 826
      summary: "\n**Description:** room signature (optional). You can use this parameter to allow only specified users (`userId`) to enter a room.\n**Value:** Use this parameter only if you have high security requirements. For more information, please see [Enabling Advanced Permission Control](https://cloud.tencent.com/document/product/647/32240).\n"
      example: []
      syntax:
        content:
          CSharp: public string privateMapKey
          VB: Public privateMapKey As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.AudioMusicParam
    commentId: T:trtc.AudioMusicParam
    language: CSharp
    name:
      CSharp: AudioMusicParam
      VB: AudioMusicParam
    nameWithType:
      CSharp: AudioMusicParam
      VB: AudioMusicParam
    qualifiedName:
      CSharp: trtc.AudioMusicParam
      VB: trtc.AudioMusicParam
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: AudioMusicParam
      path: ''
      startLine: 832
    summary: "\nMusic and audio effect API parameters\n"
    example: []
    syntax:
      content:
        CSharp: public struct AudioMusicParam
        VB: Public Structure AudioMusicParam
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.AudioMusicParam.id
      commentId: F:trtc.AudioMusicParam.id
      language: CSharp
      name:
        CSharp: id
        VB: id
      nameWithType:
        CSharp: AudioMusicParam.id
        VB: AudioMusicParam.id
      qualifiedName:
        CSharp: trtc.AudioMusicParam.id
        VB: trtc.AudioMusicParam.id
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: id
        path: ''
        startLine: 837
      summary: "\n**Description:** music ID\n**Note:** The SDK allows you to play multiple music tracks. You use music ID to identify a music track and control its playback, volume, etc.\n"
      example: []
      syntax:
        content:
          CSharp: public int id
          VB: Public id As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.AudioMusicParam.path
      commentId: F:trtc.AudioMusicParam.path
      language: CSharp
      name:
        CSharp: path
        VB: path
      nameWithType:
        CSharp: AudioMusicParam.path
        VB: AudioMusicParam.path
      qualifiedName:
        CSharp: trtc.AudioMusicParam.path
        VB: trtc.AudioMusicParam.path
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: path
        path: ''
        startLine: 842
      summary: "\n**Description:** absolute path of a music file\n"
      example: []
      syntax:
        content:
          CSharp: public String path
          VB: Public path As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.AudioMusicParam.loopCount
      commentId: F:trtc.AudioMusicParam.loopCount
      language: CSharp
      name:
        CSharp: loopCount
        VB: loopCount
      nameWithType:
        CSharp: AudioMusicParam.loopCount
        VB: AudioMusicParam.loopCount
      qualifiedName:
        CSharp: trtc.AudioMusicParam.loopCount
        VB: trtc.AudioMusicParam.loopCount
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: loopCount
        path: ''
        startLine: 847
      syntax:
        content:
          CSharp: public int loopCount
          VB: Public loopCount As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.AudioMusicParam.publish
      commentId: F:trtc.AudioMusicParam.publish
      language: CSharp
      name:
        CSharp: publish
        VB: publish
      nameWithType:
        CSharp: AudioMusicParam.publish
        VB: AudioMusicParam.publish
      qualifiedName:
        CSharp: trtc.AudioMusicParam.publish
        VB: trtc.AudioMusicParam.publish
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: publish
        path: ''
        startLine: 853
      summary: "\n**Description:** whether to send the music to remote users\n**Value:** `YES`: publish the music played locally to the cloud so that remote users can hear it; `NO` (default): play the music locally only and do not publish it\n"
      example: []
      syntax:
        content:
          CSharp: public bool publish
          VB: Public publish As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.AudioMusicParam.isShortFile
      commentId: F:trtc.AudioMusicParam.isShortFile
      language: CSharp
      name:
        CSharp: isShortFile
        VB: isShortFile
      nameWithType:
        CSharp: AudioMusicParam.isShortFile
        VB: AudioMusicParam.isShortFile
      qualifiedName:
        CSharp: trtc.AudioMusicParam.isShortFile
        VB: trtc.AudioMusicParam.isShortFile
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: isShortFile
        path: ''
        startLine: 859
      summary: "\n**Description:** whether to play a short music file\n**Value:** `YES`: short music file, which will be looped; `NO` (default): normal-length music file\n"
      example: []
      syntax:
        content:
          CSharp: public bool isShortFile
          VB: Public isShortFile As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.AudioMusicParam.startTimeMS
      commentId: F:trtc.AudioMusicParam.startTimeMS
      language: CSharp
      name:
        CSharp: startTimeMS
        VB: startTimeMS
      nameWithType:
        CSharp: AudioMusicParam.startTimeMS
        VB: AudioMusicParam.startTimeMS
      qualifiedName:
        CSharp: trtc.AudioMusicParam.startTimeMS
        VB: trtc.AudioMusicParam.startTimeMS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: startTimeMS
        path: ''
        startLine: 863
      summary: "\n**Description:** start time (ms) for music playback\n"
      example: []
      syntax:
        content:
          CSharp: public int startTimeMS
          VB: Public startTimeMS As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.AudioMusicParam.endTimeMS
      commentId: F:trtc.AudioMusicParam.endTimeMS
      language: CSharp
      name:
        CSharp: endTimeMS
        VB: endTimeMS
      nameWithType:
        CSharp: AudioMusicParam.endTimeMS
        VB: AudioMusicParam.endTimeMS
      qualifiedName:
        CSharp: trtc.AudioMusicParam.endTimeMS
        VB: trtc.AudioMusicParam.endTimeMS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: endTimeMS
        path: ''
        startLine: 867
      summary: "\n**Description:** end time (ms) for music playback. `0` or `-1` means to play the music to the end.\n"
      example: []
      syntax:
        content:
          CSharp: public int endTimeMS
          VB: Public endTimeMS As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCLogLevel
    commentId: T:trtc.TRTCLogLevel
    language: CSharp
    name:
      CSharp: TRTCLogLevel
      VB: TRTCLogLevel
    nameWithType:
      CSharp: TRTCLogLevel
      VB: TRTCLogLevel
    qualifiedName:
      CSharp: trtc.TRTCLogLevel
      VB: trtc.TRTCLogLevel
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCLogLevel
      path: ''
      startLine: 886
    summary: "\n5.1 Log output level\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCLogLevel
        VB: Public Enum TRTCLogLevel
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCLogLevel.TRTCLogLevelVerbose
      commentId: F:trtc.TRTCLogLevel.TRTCLogLevelVerbose
      language: CSharp
      name:
        CSharp: TRTCLogLevelVerbose
        VB: TRTCLogLevelVerbose
      nameWithType:
        CSharp: TRTCLogLevel.TRTCLogLevelVerbose
        VB: TRTCLogLevel.TRTCLogLevelVerbose
      qualifiedName:
        CSharp: trtc.TRTCLogLevel.TRTCLogLevelVerbose
        VB: trtc.TRTCLogLevel.TRTCLogLevelVerbose
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCLogLevelVerbose
        path: ''
        startLine: 891
      summary: "\nAll\n"
      example: []
      syntax:
        content:
          CSharp: TRTCLogLevelVerbose = 0
          VB: TRTCLogLevelVerbose = 0
        return:
          type: trtc.TRTCLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCLogLevel.TRTCLogLevelDebug
      commentId: F:trtc.TRTCLogLevel.TRTCLogLevelDebug
      language: CSharp
      name:
        CSharp: TRTCLogLevelDebug
        VB: TRTCLogLevelDebug
      nameWithType:
        CSharp: TRTCLogLevel.TRTCLogLevelDebug
        VB: TRTCLogLevel.TRTCLogLevelDebug
      qualifiedName:
        CSharp: trtc.TRTCLogLevel.TRTCLogLevelDebug
        VB: trtc.TRTCLogLevel.TRTCLogLevelDebug
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCLogLevelDebug
        path: ''
        startLine: 895
      summary: "\nDEBUG, INFO, WARNING, ERROR, and FATAL\n"
      example: []
      syntax:
        content:
          CSharp: TRTCLogLevelDebug = 1
          VB: TRTCLogLevelDebug = 1
        return:
          type: trtc.TRTCLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCLogLevel.TRTCLogLevelInfo
      commentId: F:trtc.TRTCLogLevel.TRTCLogLevelInfo
      language: CSharp
      name:
        CSharp: TRTCLogLevelInfo
        VB: TRTCLogLevelInfo
      nameWithType:
        CSharp: TRTCLogLevel.TRTCLogLevelInfo
        VB: TRTCLogLevel.TRTCLogLevelInfo
      qualifiedName:
        CSharp: trtc.TRTCLogLevel.TRTCLogLevelInfo
        VB: trtc.TRTCLogLevel.TRTCLogLevelInfo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCLogLevelInfo
        path: ''
        startLine: 899
      summary: "\nINFO, WARNING, ERROR, and FATAL\n"
      example: []
      syntax:
        content:
          CSharp: TRTCLogLevelInfo = 2
          VB: TRTCLogLevelInfo = 2
        return:
          type: trtc.TRTCLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCLogLevel.TRTCLogLevelWarn
      commentId: F:trtc.TRTCLogLevel.TRTCLogLevelWarn
      language: CSharp
      name:
        CSharp: TRTCLogLevelWarn
        VB: TRTCLogLevelWarn
      nameWithType:
        CSharp: TRTCLogLevel.TRTCLogLevelWarn
        VB: TRTCLogLevel.TRTCLogLevelWarn
      qualifiedName:
        CSharp: trtc.TRTCLogLevel.TRTCLogLevelWarn
        VB: trtc.TRTCLogLevel.TRTCLogLevelWarn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCLogLevelWarn
        path: ''
        startLine: 903
      summary: "\nWARNING, ERROR, and FATAL\n"
      example: []
      syntax:
        content:
          CSharp: TRTCLogLevelWarn = 3
          VB: TRTCLogLevelWarn = 3
        return:
          type: trtc.TRTCLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCLogLevel.TRTCLogLevelError
      commentId: F:trtc.TRTCLogLevel.TRTCLogLevelError
      language: CSharp
      name:
        CSharp: TRTCLogLevelError
        VB: TRTCLogLevelError
      nameWithType:
        CSharp: TRTCLogLevel.TRTCLogLevelError
        VB: TRTCLogLevel.TRTCLogLevelError
      qualifiedName:
        CSharp: trtc.TRTCLogLevel.TRTCLogLevelError
        VB: trtc.TRTCLogLevel.TRTCLogLevelError
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCLogLevelError
        path: ''
        startLine: 907
      summary: "\nERROR and FATAL\n"
      example: []
      syntax:
        content:
          CSharp: TRTCLogLevelError = 4
          VB: TRTCLogLevelError = 4
        return:
          type: trtc.TRTCLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCLogLevel.TRTCLogLevelFatal
      commentId: F:trtc.TRTCLogLevel.TRTCLogLevelFatal
      language: CSharp
      name:
        CSharp: TRTCLogLevelFatal
        VB: TRTCLogLevelFatal
      nameWithType:
        CSharp: TRTCLogLevel.TRTCLogLevelFatal
        VB: TRTCLogLevel.TRTCLogLevelFatal
      qualifiedName:
        CSharp: trtc.TRTCLogLevel.TRTCLogLevelFatal
        VB: trtc.TRTCLogLevel.TRTCLogLevelFatal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCLogLevelFatal
        path: ''
        startLine: 911
      summary: "\nFATAL\n"
      example: []
      syntax:
        content:
          CSharp: TRTCLogLevelFatal = 5
          VB: TRTCLogLevelFatal = 5
        return:
          type: trtc.TRTCLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCLogLevel.TRTCLogLevelNone
      commentId: F:trtc.TRTCLogLevel.TRTCLogLevelNone
      language: CSharp
      name:
        CSharp: TRTCLogLevelNone
        VB: TRTCLogLevelNone
      nameWithType:
        CSharp: TRTCLogLevel.TRTCLogLevelNone
        VB: TRTCLogLevel.TRTCLogLevelNone
      qualifiedName:
        CSharp: trtc.TRTCLogLevel.TRTCLogLevelNone
        VB: trtc.TRTCLogLevel.TRTCLogLevelNone
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCLogLevelNone
        path: ''
        startLine: 915
      summary: "\nOff\n"
      example: []
      syntax:
        content:
          CSharp: TRTCLogLevelNone = 6
          VB: TRTCLogLevelNone = 6
        return:
          type: trtc.TRTCLogLevel
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCDeviceState
    commentId: T:trtc.TRTCDeviceState
    language: CSharp
    name:
      CSharp: TRTCDeviceState
      VB: TRTCDeviceState
    nameWithType:
      CSharp: TRTCDeviceState
      VB: TRTCDeviceState
    qualifiedName:
      CSharp: trtc.TRTCDeviceState
      VB: trtc.TRTCDeviceState
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCDeviceState
      path: ''
      startLine: 921
    summary: "\n5.2 Device operation\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCDeviceState
        VB: Public Enum TRTCDeviceState
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCDeviceState.TRTCDeviceStateAdd
      commentId: F:trtc.TRTCDeviceState.TRTCDeviceStateAdd
      language: CSharp
      name:
        CSharp: TRTCDeviceStateAdd
        VB: TRTCDeviceStateAdd
      nameWithType:
        CSharp: TRTCDeviceState.TRTCDeviceStateAdd
        VB: TRTCDeviceState.TRTCDeviceStateAdd
      qualifiedName:
        CSharp: trtc.TRTCDeviceState.TRTCDeviceStateAdd
        VB: trtc.TRTCDeviceState.TRTCDeviceStateAdd
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCDeviceStateAdd
        path: ''
        startLine: 926
      summary: "\nDevice added\n"
      example: []
      syntax:
        content:
          CSharp: TRTCDeviceStateAdd = 0
          VB: TRTCDeviceStateAdd = 0
        return:
          type: trtc.TRTCDeviceState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCDeviceState.TRTCDeviceStateRemove
      commentId: F:trtc.TRTCDeviceState.TRTCDeviceStateRemove
      language: CSharp
      name:
        CSharp: TRTCDeviceStateRemove
        VB: TRTCDeviceStateRemove
      nameWithType:
        CSharp: TRTCDeviceState.TRTCDeviceStateRemove
        VB: TRTCDeviceState.TRTCDeviceStateRemove
      qualifiedName:
        CSharp: trtc.TRTCDeviceState.TRTCDeviceStateRemove
        VB: trtc.TRTCDeviceState.TRTCDeviceStateRemove
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCDeviceStateRemove
        path: ''
        startLine: 930
      summary: "\nDevice removed\n"
      example: []
      syntax:
        content:
          CSharp: TRTCDeviceStateRemove = 1
          VB: TRTCDeviceStateRemove = 1
        return:
          type: trtc.TRTCDeviceState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCDeviceState.TRTCDeviceStateActive
      commentId: F:trtc.TRTCDeviceState.TRTCDeviceStateActive
      language: CSharp
      name:
        CSharp: TRTCDeviceStateActive
        VB: TRTCDeviceStateActive
      nameWithType:
        CSharp: TRTCDeviceState.TRTCDeviceStateActive
        VB: TRTCDeviceState.TRTCDeviceStateActive
      qualifiedName:
        CSharp: trtc.TRTCDeviceState.TRTCDeviceStateActive
        VB: trtc.TRTCDeviceState.TRTCDeviceStateActive
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCDeviceStateActive
        path: ''
        startLine: 934
      summary: "\nDevice started\n"
      example: []
      syntax:
        content:
          CSharp: TRTCDeviceStateActive = 2
          VB: TRTCDeviceStateActive = 2
        return:
          type: trtc.TRTCDeviceState
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCDeviceType
    commentId: T:trtc.TRTCDeviceType
    language: CSharp
    name:
      CSharp: TRTCDeviceType
      VB: TRTCDeviceType
    nameWithType:
      CSharp: TRTCDeviceType
      VB: TRTCDeviceType
    qualifiedName:
      CSharp: trtc.TRTCDeviceType
      VB: trtc.TRTCDeviceType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCDeviceType
      path: ''
      startLine: 940
    summary: "\n5.3 Device type\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCDeviceType
        VB: Public Enum TRTCDeviceType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCDeviceType.TRTCDeviceTypeUnknow
      commentId: F:trtc.TRTCDeviceType.TRTCDeviceTypeUnknow
      language: CSharp
      name:
        CSharp: TRTCDeviceTypeUnknow
        VB: TRTCDeviceTypeUnknow
      nameWithType:
        CSharp: TRTCDeviceType.TRTCDeviceTypeUnknow
        VB: TRTCDeviceType.TRTCDeviceTypeUnknow
      qualifiedName:
        CSharp: trtc.TRTCDeviceType.TRTCDeviceTypeUnknow
        VB: trtc.TRTCDeviceType.TRTCDeviceTypeUnknow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCDeviceTypeUnknow
        path: ''
        startLine: 945
      summary: "\nUnknown device\n"
      example: []
      syntax:
        content:
          CSharp: TRTCDeviceTypeUnknow = -1
          VB: TRTCDeviceTypeUnknow = -1
        return:
          type: trtc.TRTCDeviceType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCDeviceType.TRTCDeviceTypeMic
      commentId: F:trtc.TRTCDeviceType.TRTCDeviceTypeMic
      language: CSharp
      name:
        CSharp: TRTCDeviceTypeMic
        VB: TRTCDeviceTypeMic
      nameWithType:
        CSharp: TRTCDeviceType.TRTCDeviceTypeMic
        VB: TRTCDeviceType.TRTCDeviceTypeMic
      qualifiedName:
        CSharp: trtc.TRTCDeviceType.TRTCDeviceTypeMic
        VB: trtc.TRTCDeviceType.TRTCDeviceTypeMic
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCDeviceTypeMic
        path: ''
        startLine: 949
      summary: "\nMic\n"
      example: []
      syntax:
        content:
          CSharp: TRTCDeviceTypeMic = 0
          VB: TRTCDeviceTypeMic = 0
        return:
          type: trtc.TRTCDeviceType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCDeviceType.TRTCDeviceTypeSpeaker
      commentId: F:trtc.TRTCDeviceType.TRTCDeviceTypeSpeaker
      language: CSharp
      name:
        CSharp: TRTCDeviceTypeSpeaker
        VB: TRTCDeviceTypeSpeaker
      nameWithType:
        CSharp: TRTCDeviceType.TRTCDeviceTypeSpeaker
        VB: TRTCDeviceType.TRTCDeviceTypeSpeaker
      qualifiedName:
        CSharp: trtc.TRTCDeviceType.TRTCDeviceTypeSpeaker
        VB: trtc.TRTCDeviceType.TRTCDeviceTypeSpeaker
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCDeviceTypeSpeaker
        path: ''
        startLine: 953
      summary: "\nSpeaker\n"
      example: []
      syntax:
        content:
          CSharp: TRTCDeviceTypeSpeaker = 1
          VB: TRTCDeviceTypeSpeaker = 1
        return:
          type: trtc.TRTCDeviceType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCDeviceType.TRTCDeviceTypeCamera
      commentId: F:trtc.TRTCDeviceType.TRTCDeviceTypeCamera
      language: CSharp
      name:
        CSharp: TRTCDeviceTypeCamera
        VB: TRTCDeviceTypeCamera
      nameWithType:
        CSharp: TRTCDeviceType.TRTCDeviceTypeCamera
        VB: TRTCDeviceType.TRTCDeviceTypeCamera
      qualifiedName:
        CSharp: trtc.TRTCDeviceType.TRTCDeviceTypeCamera
        VB: trtc.TRTCDeviceType.TRTCDeviceTypeCamera
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCDeviceTypeCamera
        path: ''
        startLine: 957
      summary: "\nCamera\n"
      example: []
      syntax:
        content:
          CSharp: TRTCDeviceTypeCamera = 2
          VB: TRTCDeviceTypeCamera = 2
        return:
          type: trtc.TRTCDeviceType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TXSystemVolumeType
    commentId: T:trtc.TXSystemVolumeType
    language: CSharp
    name:
      CSharp: TXSystemVolumeType
      VB: TXSystemVolumeType
    nameWithType:
      CSharp: TXSystemVolumeType
      VB: TXSystemVolumeType
    qualifiedName:
      CSharp: trtc.TXSystemVolumeType
      VB: trtc.TXSystemVolumeType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TXSystemVolumeType
      path: ''
      startLine: 981
    summary: "\n5.4 System volume type (for mobile devices only)\n\nMost smartphones have two system volume types: call volume and media volume.\n- Call volume is designed for call scenarios. It uses phones’ built-in acoustic echo cancellation (AEC) technique and delivers lower audio quality than media volume.\n       In the call volume mode, you cannot turn the volume to 0 using the volume buttons, but can use Bluetooth earphones for audio capturing.\n\n- Media volume is designed for music scenarios. It delivers better audio quality than call volume.\n       In the media volume mode, if you enable AEC, the SDK will use its built-in algorithm to process audio.\n       You can only use the phone’s mic, not Bluetooth earphones, for audio capturing.\n\nThe SDK provides three control modes for system volume types, including:\n- Auto: Call volume is used for anchors and co-anchoring users, and media volume for users not co-anchoring. This mode is suitable for live streaming scenarios.\n   If you set the scenario to `TRTCAppSceneLIVE` or `TRTCAppSceneVoiceChatRoom` when calling `enterRoom`, the SDK will use this mode by default.\n\n- VOIP: Call volume is used throughout a call. This is suitable for conferencing scenarios.\n   If you set the scenario to `TRTCAppSceneVideoCall` or `TRTCAppSceneAudioCall` when calling `enterRoom`, the SDK will use this mode by default.\n\n- Media: Media volume is used throughout a call. This mode is not used often, only under special circumstances such as when the anchor uses an external sound card.\n\n"
    example: []
    syntax:
      content:
        CSharp: public enum TXSystemVolumeType
        VB: Public Enum TXSystemVolumeType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TXSystemVolumeType.TXSystemVolumeTypeAuto
      commentId: F:trtc.TXSystemVolumeType.TXSystemVolumeTypeAuto
      language: CSharp
      name:
        CSharp: TXSystemVolumeTypeAuto
        VB: TXSystemVolumeTypeAuto
      nameWithType:
        CSharp: TXSystemVolumeType.TXSystemVolumeTypeAuto
        VB: TXSystemVolumeType.TXSystemVolumeTypeAuto
      qualifiedName:
        CSharp: trtc.TXSystemVolumeType.TXSystemVolumeTypeAuto
        VB: trtc.TXSystemVolumeType.TXSystemVolumeTypeAuto
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXSystemVolumeTypeAuto
        path: ''
        startLine: 987
      summary: "\nCall volume is used for anchors and co-anchoring users, and media volume for users not co-anchoring. This mode is suitable for live streaming scenarios.\nIf you set the scenario to `TRTCAppSceneLIVE` or `TRTCAppSceneVoiceChatRoom` when calling `enterRoom`, the SDK will use this mode by default.\n"
      example: []
      syntax:
        content:
          CSharp: TXSystemVolumeTypeAuto = 0
          VB: TXSystemVolumeTypeAuto = 0
        return:
          type: trtc.TXSystemVolumeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXSystemVolumeType.TXSystemVolumeTypeMedia
      commentId: F:trtc.TXSystemVolumeType.TXSystemVolumeTypeMedia
      language: CSharp
      name:
        CSharp: TXSystemVolumeTypeMedia
        VB: TXSystemVolumeTypeMedia
      nameWithType:
        CSharp: TXSystemVolumeType.TXSystemVolumeTypeMedia
        VB: TXSystemVolumeType.TXSystemVolumeTypeMedia
      qualifiedName:
        CSharp: trtc.TXSystemVolumeType.TXSystemVolumeTypeMedia
        VB: trtc.TXSystemVolumeType.TXSystemVolumeTypeMedia
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXSystemVolumeTypeMedia
        path: ''
        startLine: 991
      summary: "\nMedia volume is used throughout a call. This mode is not used often, only under special circumstances such as when the anchor uses an external sound card.\n"
      example: []
      syntax:
        content:
          CSharp: TXSystemVolumeTypeMedia = 1
          VB: TXSystemVolumeTypeMedia = 1
        return:
          type: trtc.TXSystemVolumeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXSystemVolumeType.TXSystemVolumeTypeVOIP
      commentId: F:trtc.TXSystemVolumeType.TXSystemVolumeTypeVOIP
      language: CSharp
      name:
        CSharp: TXSystemVolumeTypeVOIP
        VB: TXSystemVolumeTypeVOIP
      nameWithType:
        CSharp: TXSystemVolumeType.TXSystemVolumeTypeVOIP
        VB: TXSystemVolumeType.TXSystemVolumeTypeVOIP
      qualifiedName:
        CSharp: trtc.TXSystemVolumeType.TXSystemVolumeTypeVOIP
        VB: trtc.TXSystemVolumeType.TXSystemVolumeTypeVOIP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXSystemVolumeTypeVOIP
        path: ''
        startLine: 996
      summary: "\nCall volume is used throughout a call. This is suitable for conferencing scenarios.\nIf you set the scenario to `TRTCAppSceneVideoCall` or `TRTCAppSceneAudioCall` when calling `enterRoom`, the SDK will use this mode by default.\n"
      example: []
      syntax:
        content:
          CSharp: TXSystemVolumeTypeVOIP = 2
          VB: TXSystemVolumeTypeVOIP = 2
        return:
          type: trtc.TXSystemVolumeType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TXAudioRoute
    commentId: T:trtc.TXAudioRoute
    language: CSharp
    name:
      CSharp: TXAudioRoute
      VB: TXAudioRoute
    nameWithType:
      CSharp: TXAudioRoute
      VB: TXAudioRoute
    qualifiedName:
      CSharp: trtc.TXAudioRoute
      VB: trtc.TXAudioRoute
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TXAudioRoute
      path: ''
      startLine: 1006
    summary: "\nAudio route (for mobile devices only)\n\nA mobile phone usually has two speakers. The audio route determines the speaker via which audio is played.\n- Speakerphone: speaker at the bottom of a phone, which plays audio at high volume and is used to play music out loud\n- Earpiece: receiver at the top of a phone, which plays audio at low volume and is suitable for calls\n"
    example: []
    syntax:
      content:
        CSharp: public enum TXAudioRoute
        VB: Public Enum TXAudioRoute
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TXAudioRoute.TXAudioRouteSpeakerphone
      commentId: F:trtc.TXAudioRoute.TXAudioRouteSpeakerphone
      language: CSharp
      name:
        CSharp: TXAudioRouteSpeakerphone
        VB: TXAudioRouteSpeakerphone
      nameWithType:
        CSharp: TXAudioRoute.TXAudioRouteSpeakerphone
        VB: TXAudioRoute.TXAudioRouteSpeakerphone
      qualifiedName:
        CSharp: trtc.TXAudioRoute.TXAudioRouteSpeakerphone
        VB: trtc.TXAudioRoute.TXAudioRouteSpeakerphone
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXAudioRouteSpeakerphone
        path: ''
        startLine: 1007
      syntax:
        content:
          CSharp: TXAudioRouteSpeakerphone = 0
          VB: TXAudioRouteSpeakerphone = 0
        return:
          type: trtc.TXAudioRoute
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TXAudioRoute.TXAudioRouteEarpiece
      commentId: F:trtc.TXAudioRoute.TXAudioRouteEarpiece
      language: CSharp
      name:
        CSharp: TXAudioRouteEarpiece
        VB: TXAudioRouteEarpiece
      nameWithType:
        CSharp: TXAudioRoute.TXAudioRouteEarpiece
        VB: TXAudioRoute.TXAudioRouteEarpiece
      qualifiedName:
        CSharp: trtc.TXAudioRoute.TXAudioRouteEarpiece
        VB: trtc.TXAudioRoute.TXAudioRouteEarpiece
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TXAudioRouteEarpiece
        path: ''
        startLine: 1008
      summary: Speaker
      example: []
      syntax:
        content:
          CSharp: TXAudioRouteEarpiece = 1
          VB: TXAudioRouteEarpiece = 1
        return:
          type: trtc.TXAudioRoute
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCParams
    commentId: T:trtc.TRTCParams
    language: CSharp
    name:
      CSharp: TRTCParams
      VB: TRTCParams
    nameWithType:
      CSharp: TRTCParams
      VB: TRTCParams
    qualifiedName:
      CSharp: trtc.TRTCParams
      VB: trtc.TRTCParams
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCParams
      path: ''
      startLine: 1023
    summary: "\n6.1. Room entry parameters\n\n<p>You can call `enterRoom` to enter the specified room successfully only if you set the parameters as required.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCParams
        VB: Public Structure TRTCParams
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCParams.sdkAppId
      commentId: F:trtc.TRTCParams.sdkAppId
      language: CSharp
      name:
        CSharp: sdkAppId
        VB: sdkAppId
      nameWithType:
        CSharp: TRTCParams.sdkAppId
        VB: TRTCParams.sdkAppId
      qualifiedName:
        CSharp: trtc.TRTCParams.sdkAppId
        VB: trtc.TRTCParams.sdkAppId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: sdkAppId
        path: ''
        startLine: 1029
      summary: "\n**Description:** application ID (required). Tencent Video Cloud bills by `sdkAppId`.\n<p> After creating an application, you can view its `sdkAppId` on the **Application Info** page of the [TRTC console](https://console.cloud.tencent.com/trtc/).</p>\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 sdkAppId
          VB: Public sdkAppId As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCParams.userId
      commentId: F:trtc.TRTCParams.userId
      language: CSharp
      name:
        CSharp: userId
        VB: userId
      nameWithType:
        CSharp: TRTCParams.userId
        VB: TRTCParams.userId
      qualifiedName:
        CSharp: trtc.TRTCParams.userId
        VB: trtc.TRTCParams.userId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: userId
        path: ''
        startLine: 1034
      summary: "\n**Description**: UTF-8-encoded user ID (required)\n<p>**Value:** If a user’s ID in your account system is `abc`, you can set `userId` to `abc`.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public String userId
          VB: Public userId As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCParams.userSig
      commentId: F:trtc.TRTCParams.userSig
      language: CSharp
      name:
        CSharp: userSig
        VB: userSig
      nameWithType:
        CSharp: TRTCParams.userSig
        VB: TRTCParams.userSig
      qualifiedName:
        CSharp: trtc.TRTCParams.userSig
        VB: trtc.TRTCParams.userSig
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: userSig
        path: ''
        startLine: 1039
      summary: "\n**Description:** user signature of the current user (required), which functions as the login password\n<p>**Value:** For how to calculate user signatures, please see [UserSig](https://cloud.tencent.com/document/product/647/17275).</p>\n"
      example: []
      syntax:
        content:
          CSharp: public String userSig
          VB: Public userSig As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCParams.roomId
      commentId: F:trtc.TRTCParams.roomId
      language: CSharp
      name:
        CSharp: roomId
        VB: roomId
      nameWithType:
        CSharp: TRTCParams.roomId
        VB: TRTCParams.roomId
      qualifiedName:
        CSharp: trtc.TRTCParams.roomId
        VB: trtc.TRTCParams.roomId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: roomId
        path: ''
        startLine: 1044
      summary: "\n**Description:** numeric room ID (required). Users in the same room can see one another and have a video call.\n<p>**Value:** a custom value, which must be unique. You can use the user ID of the room creator – if it is numeric – as the room ID.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 roomId
          VB: Public roomId As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCParams.strRoomId
      commentId: F:trtc.TRTCParams.strRoomId
      language: CSharp
      name:
        CSharp: strRoomId
        VB: strRoomId
      nameWithType:
        CSharp: TRTCParams.strRoomId
        VB: TRTCParams.strRoomId
      qualifiedName:
        CSharp: trtc.TRTCParams.strRoomId
        VB: trtc.TRTCParams.strRoomId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: strRoomId
        path: ''
        startLine: 1053
      syntax:
        content:
          CSharp: public String strRoomId
          VB: Public strRoomId As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCParams.role
      commentId: F:trtc.TRTCParams.role
      language: CSharp
      name:
        CSharp: role
        VB: role
      nameWithType:
        CSharp: TRTCParams.role
        VB: TRTCParams.role
      qualifiedName:
        CSharp: trtc.TRTCParams.role
        VB: trtc.TRTCParams.role
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: role
        path: ''
        startLine: 1058
      summary: "\n**Description**: role in live streaming scenarios (`TRTCAppSceneLIVE`). This parameter is not available in call scenarios.\n<p>**Value:** default value: `TRTCRoleAnchor` (anchor)</p>\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCRoleType role
          VB: Public role As TRTCRoleType
        return:
          type: trtc.TRTCRoleType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCParams.streamId
      commentId: F:trtc.TRTCParams.streamId
      language: CSharp
      name:
        CSharp: streamId
        VB: streamId
      nameWithType:
        CSharp: TRTCParams.streamId
        VB: TRTCParams.streamId
      qualifiedName:
        CSharp: trtc.TRTCParams.streamId
        VB: trtc.TRTCParams.streamId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: streamId
        path: ''
        startLine: 1065
      summary: "\n**Description:** stream ID bound to Tencent Cloud’s live streaming CDN (optional). If this parameter is specified, audience will be able to play the user’s stream via Tencent Cloud’s CDN using a standard streaming protocol (FLV or HLS).\n<p>**Value:** 64 bytes or shorter (optional). To make it easier to distinguish between different stream IDs and avoid application conflicts, we recommend that you set this parameter to `sdkappid_roomid_userid_main`.</p>\n<p>**Note:** To use Tencent Cloud’s live streaming CDN, you need to enable relayed push on the **Function Configuration** page of the [console](https://console.cloud.tencent.com/trtc/).</p>\n<p>**Reference:** [CDN Relayed Live Streaming](https://cloud.tencent.com/document/product/647/16826)</p>\n"
      example: []
      syntax:
        content:
          CSharp: public String streamId
          VB: Public streamId As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCParams.userDefineRecordId
      commentId: F:trtc.TRTCParams.userDefineRecordId
      language: CSharp
      name:
        CSharp: userDefineRecordId
        VB: userDefineRecordId
      nameWithType:
        CSharp: TRTCParams.userDefineRecordId
        VB: TRTCParams.userDefineRecordId
      qualifiedName:
        CSharp: trtc.TRTCParams.userDefineRecordId
        VB: trtc.TRTCParams.userDefineRecordId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: userDefineRecordId
        path: ''
        startLine: 1071
      summary: "\n**Description:** recording ID in the callback for on-cloud recording\n<p>**Value:** 64 bytes or shorter; support letters (a-z and A-Z), digits (0-9), underscores, and hyphens</p>\n<p>**Reference:** [On-Cloud Recording and Playback](https://cloud.tencent.com/document/product/647/16823)</p>\n"
      example: []
      syntax:
        content:
          CSharp: public String userDefineRecordId
          VB: Public userDefineRecordId As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCParams.privateMapKey
      commentId: F:trtc.TRTCParams.privateMapKey
      language: CSharp
      name:
        CSharp: privateMapKey
        VB: privateMapKey
      nameWithType:
        CSharp: TRTCParams.privateMapKey
        VB: TRTCParams.privateMapKey
      qualifiedName:
        CSharp: trtc.TRTCParams.privateMapKey
        VB: trtc.TRTCParams.privateMapKey
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: privateMapKey
        path: ''
        startLine: 1076
      syntax:
        content:
          CSharp: public String privateMapKey
          VB: Public privateMapKey As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCParams.businessInfo
      commentId: F:trtc.TRTCParams.businessInfo
      language: CSharp
      name:
        CSharp: businessInfo
        VB: businessInfo
      nameWithType:
        CSharp: TRTCParams.businessInfo
        VB: TRTCParams.businessInfo
      qualifiedName:
        CSharp: trtc.TRTCParams.businessInfo
        VB: trtc.TRTCParams.businessInfo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: businessInfo
        path: ''
        startLine: 1081
      summary: "\n**Description:** business information (optional). This parameter is needed only for some advanced features.\n<p>**Value:** This parameter is not recommended.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public String businessInfo
          VB: Public businessInfo As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCVideoEncParam
    commentId: T:trtc.TRTCVideoEncParam
    language: CSharp
    name:
      CSharp: TRTCVideoEncParam
      VB: TRTCVideoEncParam
    nameWithType:
      CSharp: TRTCVideoEncParam
      VB: TRTCVideoEncParam
    qualifiedName:
      CSharp: trtc.TRTCVideoEncParam
      VB: trtc.TRTCVideoEncParam
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVideoEncParam
      path: ''
      startLine: 1089
    summary: "\n6.2 Video encoding parameters\n\n<p>Encoding parameters determine the quality of video watched by remote users and recorded in the cloud.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCVideoEncParam
        VB: Public Structure TRTCVideoEncParam
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCVideoEncParam.videoResolution
      commentId: F:trtc.TRTCVideoEncParam.videoResolution
      language: CSharp
      name:
        CSharp: videoResolution
        VB: videoResolution
      nameWithType:
        CSharp: TRTCVideoEncParam.videoResolution
        VB: TRTCVideoEncParam.videoResolution
      qualifiedName:
        CSharp: trtc.TRTCVideoEncParam.videoResolution
        VB: trtc.TRTCVideoEncParam.videoResolution
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: videoResolution
        path: ''
        startLine: 1100
      summary: "\n**Description:** video resolution\n<p>**Value:**</p>\n<p>  - For video calls, we recommend a resolution of 360 × 640 or lower and `Portrait` for `resMode`.</p>\n<p>  - For mobile live streaming, we recommend a resolution of 540 × 960 and `Portrait` for `resMode`.</p>\n<p>  - On Windows and macOS, we recommend a resolution of 640 × 360 or above and `Landscape` for `resMode`.</p>\n<p>**Note:** `TRTCVideoResolution` supports only landscape resolutions by default, such as 640 × 360.</p>\n<p>            To use portrait resolutions, set `resMode` to `Portrait`. For example, if `videoResolution` is `640 × 360` and `resMode` is set to `Portrait`, the resolution 360 × 640 will be used.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCVideoResolution videoResolution
          VB: Public videoResolution As TRTCVideoResolution
        return:
          type: trtc.TRTCVideoResolution
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoEncParam.resMode
      commentId: F:trtc.TRTCVideoEncParam.resMode
      language: CSharp
      name:
        CSharp: resMode
        VB: resMode
      nameWithType:
        CSharp: TRTCVideoEncParam.resMode
        VB: TRTCVideoEncParam.resMode
      qualifiedName:
        CSharp: trtc.TRTCVideoEncParam.resMode
        VB: trtc.TRTCVideoEncParam.resMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: resMode
        path: ''
        startLine: 1106
      syntax:
        content:
          CSharp: public TRTCVideoResolutionMode resMode
          VB: Public resMode As TRTCVideoResolutionMode
        return:
          type: trtc.TRTCVideoResolutionMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoEncParam.videoFps
      commentId: F:trtc.TRTCVideoEncParam.videoFps
      language: CSharp
      name:
        CSharp: videoFps
        VB: videoFps
      nameWithType:
        CSharp: TRTCVideoEncParam.videoFps
        VB: TRTCVideoEncParam.videoFps
      qualifiedName:
        CSharp: trtc.TRTCVideoEncParam.videoFps
        VB: trtc.TRTCVideoEncParam.videoFps
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: videoFps
        path: ''
        startLine: 1112
      summary: "\n**Description:** video capturing frame rate\n<p>**Value:** 15 or 20 fps. Video will stutter severely if the frame rate is lower than 5 fps and slightly if it is lower than 10 fps. Setting the frame rate to higher than 20 fps would be a waste of resources (the frame rate of films is 24 fps).</p>\n<p>**Note:** On many Android phones, the front camera does not support a capturing frame rate of higher than 15 fps. For some that emphasize beauty filters, the frame rate may be lower than 10 fps.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 videoFps
          VB: Public videoFps As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoEncParam.videoBitrate
      commentId: F:trtc.TRTCVideoEncParam.videoBitrate
      language: CSharp
      name:
        CSharp: videoBitrate
        VB: videoBitrate
      nameWithType:
        CSharp: TRTCVideoEncParam.videoBitrate
        VB: TRTCVideoEncParam.videoBitrate
      qualifiedName:
        CSharp: trtc.TRTCVideoEncParam.videoBitrate
        VB: trtc.TRTCVideoEncParam.videoBitrate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: videoBitrate
        path: ''
        startLine: 1122
      summary: "\n**Description:** target video bitrate. The SDK encodes streams at the target video bitrate, but will reduce the bitrate under poor network conditions.\n<p>**Value:** Please refer to the recommended bitrates for different `TRTCVideoResolution` values. You may increase the value moderately.</p>\n<p>            For example, the recommended bitrate for `TRTCVideoResolution_1280_720` is 1200 Kbps, but you can set the target bitrate to 1500 Kbps for higher video quality.</p>\n<p>**Note:** Normally, the SDK encodes streams at the bitrate specified by `videoBitrate`, but under poor network conditions, it will reduce the bitrate, whose minimum allowed value is determined by `minVideoBitrate`.</p>\n<p>            If you are tolerant of stutter but have high requirements on clarity, you can set `minVideoBitrate` to 60% of `videoBitrate`.</p>\n<p>            If you prioritize smoothness over clarity, you can set `minVideoBitrate` to 200 Kbps.</p>\n<p>            Setting `videoBitrate` and `minVideoBitrate` to the same value will disable the SDK’s automatic bitrate control feature.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 videoBitrate
          VB: Public videoBitrate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoEncParam.minVideoBitrate
      commentId: F:trtc.TRTCVideoEncParam.minVideoBitrate
      language: CSharp
      name:
        CSharp: minVideoBitrate
        VB: minVideoBitrate
      nameWithType:
        CSharp: TRTCVideoEncParam.minVideoBitrate
        VB: TRTCVideoEncParam.minVideoBitrate
      qualifiedName:
        CSharp: trtc.TRTCVideoEncParam.minVideoBitrate
        VB: trtc.TRTCVideoEncParam.minVideoBitrate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: minVideoBitrate
        path: ''
        startLine: 1134
      summary: "\n**Description:** the minimum value the SDK is allowed to reduce the bitrate to under poor network conditions\n<p>**Value:**</p>\n<p>     - If you are tolerant of stutter but have high requirements on clarity, you can set `minVideoBitrate` to 60% of `videoBitrate`.</p>\n<p>     - If you prioritize smoothness over clarity, you can set `minVideoBitrate` to 200 Kbps.</p>\n<p>     - Setting `videoBitrate` and `minVideoBitrate` to the same value will disable the SDK’s automatic bitrate control feature.</p>\n<p>     - If this parameter is `0` (default value), the SDK will determine the lowest bitrate according to the resolution.</p>\n<p>**Note:**</p>\n<p>     - To avoid blurry or pixelated video, you are not advised to set `minVideoBitrate` too low if the target resolution is high.</p>\n<p>      For example, if the resolution is set to 720p and the bitrate to 200 Kbps, the encoded video will be heavily pixelated.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 minVideoBitrate
          VB: Public minVideoBitrate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoEncParam.enableAdjustRes
      commentId: F:trtc.TRTCVideoEncParam.enableAdjustRes
      language: CSharp
      name:
        CSharp: enableAdjustRes
        VB: enableAdjustRes
      nameWithType:
        CSharp: TRTCVideoEncParam.enableAdjustRes
        VB: TRTCVideoEncParam.enableAdjustRes
      qualifiedName:
        CSharp: trtc.TRTCVideoEncParam.enableAdjustRes
        VB: trtc.TRTCVideoEncParam.enableAdjustRes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: enableAdjustRes
        path: ''
        startLine: 1143
      syntax:
        content:
          CSharp: public bool enableAdjustRes
          VB: Public enableAdjustRes As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCAudioRecordingParams
    commentId: T:trtc.TRTCAudioRecordingParams
    language: CSharp
    name:
      CSharp: TRTCAudioRecordingParams
      VB: TRTCAudioRecordingParams
    nameWithType:
      CSharp: TRTCAudioRecordingParams
      VB: TRTCAudioRecordingParams
    qualifiedName:
      CSharp: trtc.TRTCAudioRecordingParams
      VB: trtc.TRTCAudioRecordingParams
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCAudioRecordingParams
      path: ''
      startLine: 1152
    summary: "\nAudio recording parameters\n\n**Description:** the path you want to store the recording file in (required). You need to specify this parameter yourself and make sure that the path exits and is writable.\n\n**Note:** The path must contain the filename and extension. The extension determines the format of the recording file. Supported formats include PCM, WAV, and AAC. For example, if you set this parameter to `path/to/audio.aac`, the recording file will be in AAC format. Please use a valid path that is readable and writable so that the recording file can be generated successfully.\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCAudioRecordingParams
        VB: Public Structure TRTCAudioRecordingParams
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCAudioRecordingParams.filePath
      commentId: F:trtc.TRTCAudioRecordingParams.filePath
      language: CSharp
      name:
        CSharp: filePath
        VB: filePath
      nameWithType:
        CSharp: TRTCAudioRecordingParams.filePath
        VB: TRTCAudioRecordingParams.filePath
      qualifiedName:
        CSharp: trtc.TRTCAudioRecordingParams.filePath
        VB: trtc.TRTCAudioRecordingParams.filePath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: filePath
        path: ''
        startLine: 1158
      summary: "\n**Description:** the path to store the recording file in (required). You need to specify this parameter yourself and make sure that the path exits and is writable.\n**Note:** The path must contain the filename and extension. The extension determines the format of the recording file. Supported formats include PCM, WAV, and AAC. For example, if you set this parameter to `path/to/audio.aac`, the recording file will be in AAC format. Please use a valid path that is readable and writable so that the recording file can be generated successfully.\n"
      example: []
      syntax:
        content:
          CSharp: public String filePath
          VB: Public filePath As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCLocalRecordType
    commentId: T:trtc.TRTCLocalRecordType
    language: CSharp
    name:
      CSharp: TRTCLocalRecordType
      VB: TRTCLocalRecordType
    nameWithType:
      CSharp: TRTCLocalRecordType
      VB: TRTCLocalRecordType
    qualifiedName:
      CSharp: trtc.TRTCLocalRecordType
      VB: trtc.TRTCLocalRecordType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCLocalRecordType
      path: ''
      startLine: 1164
    summary: "\nLocal recording parameters\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCLocalRecordType
        VB: Public Enum TRTCLocalRecordType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCLocalRecordType.TRTCLocalRecordType_Audio
      commentId: F:trtc.TRTCLocalRecordType.TRTCLocalRecordType_Audio
      language: CSharp
      name:
        CSharp: TRTCLocalRecordType_Audio
        VB: TRTCLocalRecordType_Audio
      nameWithType:
        CSharp: TRTCLocalRecordType.TRTCLocalRecordType_Audio
        VB: TRTCLocalRecordType.TRTCLocalRecordType_Audio
      qualifiedName:
        CSharp: trtc.TRTCLocalRecordType.TRTCLocalRecordType_Audio
        VB: trtc.TRTCLocalRecordType.TRTCLocalRecordType_Audio
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCLocalRecordType_Audio
        path: ''
        startLine: 1169
      syntax:
        content:
          CSharp: TRTCLocalRecordType_Audio = 0
          VB: TRTCLocalRecordType_Audio = 0
        return:
          type: trtc.TRTCLocalRecordType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCLocalRecordType.TRTCLocalRecordType_Video
      commentId: F:trtc.TRTCLocalRecordType.TRTCLocalRecordType_Video
      language: CSharp
      name:
        CSharp: TRTCLocalRecordType_Video
        VB: TRTCLocalRecordType_Video
      nameWithType:
        CSharp: TRTCLocalRecordType.TRTCLocalRecordType_Video
        VB: TRTCLocalRecordType.TRTCLocalRecordType_Video
      qualifiedName:
        CSharp: trtc.TRTCLocalRecordType.TRTCLocalRecordType_Video
        VB: trtc.TRTCLocalRecordType.TRTCLocalRecordType_Video
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCLocalRecordType_Video
        path: ''
        startLine: 1174
      summary: "\nRecord video only\n"
      example: []
      syntax:
        content:
          CSharp: TRTCLocalRecordType_Video = 1
          VB: TRTCLocalRecordType_Video = 1
        return:
          type: trtc.TRTCLocalRecordType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCLocalRecordType.TRTCLocalRecordType_Both
      commentId: F:trtc.TRTCLocalRecordType.TRTCLocalRecordType_Both
      language: CSharp
      name:
        CSharp: TRTCLocalRecordType_Both
        VB: TRTCLocalRecordType_Both
      nameWithType:
        CSharp: TRTCLocalRecordType.TRTCLocalRecordType_Both
        VB: TRTCLocalRecordType.TRTCLocalRecordType_Both
      qualifiedName:
        CSharp: trtc.TRTCLocalRecordType.TRTCLocalRecordType_Both
        VB: trtc.TRTCLocalRecordType.TRTCLocalRecordType_Both
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCLocalRecordType_Both
        path: ''
        startLine: 1179
      summary: "\nRecord audio and video\n"
      example: []
      syntax:
        content:
          CSharp: TRTCLocalRecordType_Both = 2
          VB: TRTCLocalRecordType_Both = 2
        return:
          type: trtc.TRTCLocalRecordType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCLocalRecordingParams
    commentId: T:trtc.TRTCLocalRecordingParams
    language: CSharp
    name:
      CSharp: TRTCLocalRecordingParams
      VB: TRTCLocalRecordingParams
    nameWithType:
      CSharp: TRTCLocalRecordingParams
      VB: TRTCLocalRecordingParams
    qualifiedName:
      CSharp: trtc.TRTCLocalRecordingParams
      VB: trtc.TRTCLocalRecordingParams
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCLocalRecordingParams
      path: ''
      startLine: 1185
    summary: "\nRecording parameters\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCLocalRecordingParams
        VB: Public Structure TRTCLocalRecordingParams
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCLocalRecordingParams.filePath
      commentId: F:trtc.TRTCLocalRecordingParams.filePath
      language: CSharp
      name:
        CSharp: filePath
        VB: filePath
      nameWithType:
        CSharp: TRTCLocalRecordingParams.filePath
        VB: TRTCLocalRecordingParams.filePath
      qualifiedName:
        CSharp: trtc.TRTCLocalRecordingParams.filePath
        VB: trtc.TRTCLocalRecordingParams.filePath
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: filePath
        path: ''
        startLine: 1192
      summary: "\n**Description:** the path to store recording files in (required). Please specify this parameter yourself and make sure that the path is valid, readable, and writable; otherwise, the SDK will fail to generate recording files.\n**Note:** The path must contain the filename and extension. The extension determines the format of recording files. Currently, only MP4 is supported. On Windows, we recommend that you use a path in your application’s private data directory.\n**Sample code:** Recording data into a file named `example.mp4` in `appdata%\\test`: std::string filePath; std::wstring path; wchar_t fullPath[MAX_PATH] = { 0 }; SHGetFolderPathW(NULL, CSIDL_APPDATA, NULL, 0, fullPath); path=fullPath; path += L&quot;\\\\test\\\\example.mp4&quot;; filePath = txf_wstr2utf8(path);\n"
      example: []
      syntax:
        content:
          CSharp: public String filePath
          VB: Public filePath As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCLocalRecordingParams.recordType
      commentId: F:trtc.TRTCLocalRecordingParams.recordType
      language: CSharp
      name:
        CSharp: recordType
        VB: recordType
      nameWithType:
        CSharp: TRTCLocalRecordingParams.recordType
        VB: TRTCLocalRecordingParams.recordType
      qualifiedName:
        CSharp: trtc.TRTCLocalRecordingParams.recordType
        VB: trtc.TRTCLocalRecordingParams.recordType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: recordType
        path: ''
        startLine: 1197
      summary: "\n**Description:** type of media to record. Both audio and video are recorded by default.\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCLocalRecordType recordType
          VB: Public recordType As TRTCLocalRecordType
        return:
          type: trtc.TRTCLocalRecordType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCLocalRecordingParams.interval
      commentId: F:trtc.TRTCLocalRecordingParams.interval
      language: CSharp
      name:
        CSharp: interval
        VB: interval
      nameWithType:
        CSharp: TRTCLocalRecordingParams.interval
        VB: TRTCLocalRecordingParams.interval
      qualifiedName:
        CSharp: trtc.TRTCLocalRecordingParams.interval
        VB: trtc.TRTCLocalRecordingParams.interval
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: interval
        path: ''
        startLine: 1202
      summary: "\nThe interval (ms) for triggering the recording callback `onLocalRecordDoing`. Value range: 1000-10000. Default value: `-1`, which means to disable the callback\n"
      example: []
      syntax:
        content:
          CSharp: public int interval
          VB: Public interval As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCNetworkQosParam
    commentId: T:trtc.TRTCNetworkQosParam
    language: CSharp
    name:
      CSharp: TRTCNetworkQosParam
      VB: TRTCNetworkQosParam
    nameWithType:
      CSharp: TRTCNetworkQosParam
      VB: TRTCNetworkQosParam
    qualifiedName:
      CSharp: trtc.TRTCNetworkQosParam
      VB: trtc.TRTCNetworkQosParam
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCNetworkQosParam
      path: ''
      startLine: 1210
    summary: "\n6.3 QoS control parameters\n\n<p>QoS control parameters, which determine the SDK’s QoS policy under different network conditions, for example, whether to prioritize smoothness or clarity under poor network conditions</p>\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCNetworkQosParam
        VB: Public Structure TRTCNetworkQosParam
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCNetworkQosParam.preference
      commentId: F:trtc.TRTCNetworkQosParam.preference
      language: CSharp
      name:
        CSharp: preference
        VB: preference
      nameWithType:
        CSharp: TRTCNetworkQosParam.preference
        VB: TRTCNetworkQosParam.preference
      qualifiedName:
        CSharp: trtc.TRTCNetworkQosParam.preference
        VB: trtc.TRTCNetworkQosParam.preference
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: preference
        path: ''
        startLine: 1218
      summary: "\n**Description:** whether to prioritize clarity or smoothness under poor network conditions\n<p>**Note:**</p>\n<p>   - Prioritize smoothness under poor network conditions. The video may be blurry and pixelated, but playback is smooth without stutter.</p>\n<p>   - Prioritize clarity under poor network conditions. The video is clear, but playback may stutter.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCVideoQosPreference preference
          VB: Public preference As TRTCVideoQosPreference
        return:
          type: trtc.TRTCVideoQosPreference
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCNetworkQosParam.controlMode
      commentId: F:trtc.TRTCNetworkQosParam.controlMode
      language: CSharp
      name:
        CSharp: controlMode
        VB: controlMode
      nameWithType:
        CSharp: TRTCNetworkQosParam.controlMode
        VB: TRTCNetworkQosParam.controlMode
      qualifiedName:
        CSharp: trtc.TRTCNetworkQosParam.controlMode
        VB: trtc.TRTCNetworkQosParam.controlMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: controlMode
        path: ''
        startLine: 1226
      summary: "\n**Description:** QoS control mode (cloud control/local control)\n<p>**Value:** Cloud control is recommended.</p>\n<p>**Note:**</p>\n<p>   - Server mode (default): cloud control, which is the recommended mode</p>\n<p>   - Client mode: local control, which is for internal debugging of the SDK and is not recommended</p>\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCQosControlMode controlMode
          VB: Public controlMode As TRTCQosControlMode
        return:
          type: trtc.TRTCQosControlMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCRenderParams
    commentId: T:trtc.TRTCRenderParams
    language: CSharp
    name:
      CSharp: TRTCRenderParams
      VB: TRTCRenderParams
    nameWithType:
      CSharp: TRTCRenderParams
      VB: TRTCRenderParams
    qualifiedName:
      CSharp: trtc.TRTCRenderParams
      VB: trtc.TRTCRenderParams
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCRenderParams
      path: ''
      startLine: 1235
    summary: "\n5.3 Video rendering parameters\n"
    remarks: "\nYou can use these parameters to set the rotation, fill mode, and mirror mode of video images.\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCRenderParams
        VB: Public Structure TRTCRenderParams
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCRenderParams.rotation
      commentId: F:trtc.TRTCRenderParams.rotation
      language: CSharp
      name:
        CSharp: rotation
        VB: rotation
      nameWithType:
        CSharp: TRTCRenderParams.rotation
        VB: TRTCRenderParams.rotation
      qualifiedName:
        CSharp: trtc.TRTCRenderParams.rotation
        VB: trtc.TRTCRenderParams.rotation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: rotation
        path: ''
        startLine: 1240
      summary: "\nRotation. Default value: `TRTCVideoRotation0`\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCVideoRotation rotation
          VB: Public rotation As TRTCVideoRotation
        return:
          type: trtc.TRTCVideoRotation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCRenderParams.fillMode
      commentId: F:trtc.TRTCRenderParams.fillMode
      language: CSharp
      name:
        CSharp: fillMode
        VB: fillMode
      nameWithType:
        CSharp: TRTCRenderParams.fillMode
        VB: TRTCRenderParams.fillMode
      qualifiedName:
        CSharp: trtc.TRTCRenderParams.fillMode
        VB: trtc.TRTCRenderParams.fillMode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: fillMode
        path: ''
        startLine: 1244
      summary: "\nFill mode. Default value: `TRTCVideoFillMode_Fit`\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCVideoFillMode fillMode
          VB: Public fillMode As TRTCVideoFillMode
        return:
          type: trtc.TRTCVideoFillMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCRenderParams.mirrorType
      commentId: F:trtc.TRTCRenderParams.mirrorType
      language: CSharp
      name:
        CSharp: mirrorType
        VB: mirrorType
      nameWithType:
        CSharp: TRTCRenderParams.mirrorType
        VB: TRTCRenderParams.mirrorType
      qualifiedName:
        CSharp: trtc.TRTCRenderParams.mirrorType
        VB: trtc.TRTCRenderParams.mirrorType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: mirrorType
        path: ''
        startLine: 1248
      summary: "\nMirror mode. Default value: `TRTCVideoMirrorType_Disable`\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCVideoMirrorType mirrorType
          VB: Public mirrorType As TRTCVideoMirrorType
        return:
          type: trtc.TRTCVideoMirrorType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCVideoMirrorType
    commentId: T:trtc.TRTCVideoMirrorType
    language: CSharp
    name:
      CSharp: TRTCVideoMirrorType
      VB: TRTCVideoMirrorType
    nameWithType:
      CSharp: TRTCVideoMirrorType
      VB: TRTCVideoMirrorType
    qualifiedName:
      CSharp: trtc.TRTCVideoMirrorType
      VB: trtc.TRTCVideoMirrorType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVideoMirrorType
      path: ''
      startLine: 1255
    summary: "\n1.9 Video mirror types\n"
    remarks: TRTC supports the following mirror modes.
    example: []
    syntax:
      content:
        CSharp: public enum TRTCVideoMirrorType
        VB: Public Enum TRTCVideoMirrorType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Auto
      commentId: F:trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Auto
      language: CSharp
      name:
        CSharp: TRTCVideoMirrorType_Auto
        VB: TRTCVideoMirrorType_Auto
      nameWithType:
        CSharp: TRTCVideoMirrorType.TRTCVideoMirrorType_Auto
        VB: TRTCVideoMirrorType.TRTCVideoMirrorType_Auto
      qualifiedName:
        CSharp: trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Auto
        VB: trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Auto
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoMirrorType_Auto
        path: ''
        startLine: 1260
      summary: "\nMirror only the front camera for local preview (on mobile devices only)\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoMirrorType_Auto = 0
          VB: TRTCVideoMirrorType_Auto = 0
        return:
          type: trtc.TRTCVideoMirrorType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Enable
      commentId: F:trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Enable
      language: CSharp
      name:
        CSharp: TRTCVideoMirrorType_Enable
        VB: TRTCVideoMirrorType_Enable
      nameWithType:
        CSharp: TRTCVideoMirrorType.TRTCVideoMirrorType_Enable
        VB: TRTCVideoMirrorType.TRTCVideoMirrorType_Enable
      qualifiedName:
        CSharp: trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Enable
        VB: trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Enable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoMirrorType_Enable
        path: ''
        startLine: 1264
      summary: "\nMirror all images\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoMirrorType_Enable = 1
          VB: TRTCVideoMirrorType_Enable = 1
        return:
          type: trtc.TRTCVideoMirrorType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Disable
      commentId: F:trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Disable
      language: CSharp
      name:
        CSharp: TRTCVideoMirrorType_Disable
        VB: TRTCVideoMirrorType_Disable
      nameWithType:
        CSharp: TRTCVideoMirrorType.TRTCVideoMirrorType_Disable
        VB: TRTCVideoMirrorType.TRTCVideoMirrorType_Disable
      qualifiedName:
        CSharp: trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Disable
        VB: trtc.TRTCVideoMirrorType.TRTCVideoMirrorType_Disable
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCVideoMirrorType_Disable
        path: ''
        startLine: 1268
      summary: "\nMirror none\n"
      example: []
      syntax:
        content:
          CSharp: TRTCVideoMirrorType_Disable = 2
          VB: TRTCVideoMirrorType_Disable = 2
        return:
          type: trtc.TRTCVideoMirrorType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCSnapshotSourceType
    commentId: T:trtc.TRTCSnapshotSourceType
    language: CSharp
    name:
      CSharp: TRTCSnapshotSourceType
      VB: TRTCSnapshotSourceType
    nameWithType:
      CSharp: TRTCSnapshotSourceType
      VB: TRTCSnapshotSourceType
    qualifiedName:
      CSharp: trtc.TRTCSnapshotSourceType
      VB: trtc.TRTCSnapshotSourceType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCSnapshotSourceType
      path: ''
      startLine: 1274
    summary: "\n1.10 Video screenshot source\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCSnapshotSourceType
        VB: Public Enum TRTCSnapshotSourceType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCSnapshotSourceType.TRTCSnapshotSourceTypeStream
      commentId: F:trtc.TRTCSnapshotSourceType.TRTCSnapshotSourceTypeStream
      language: CSharp
      name:
        CSharp: TRTCSnapshotSourceTypeStream
        VB: TRTCSnapshotSourceTypeStream
      nameWithType:
        CSharp: TRTCSnapshotSourceType.TRTCSnapshotSourceTypeStream
        VB: TRTCSnapshotSourceType.TRTCSnapshotSourceTypeStream
      qualifiedName:
        CSharp: trtc.TRTCSnapshotSourceType.TRTCSnapshotSourceTypeStream
        VB: trtc.TRTCSnapshotSourceType.TRTCSnapshotSourceTypeStream
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCSnapshotSourceTypeStream
        path: ''
        startLine: 1279
      summary: "\nTake a screenshot from the video stream\n"
      example: []
      syntax:
        content:
          CSharp: TRTCSnapshotSourceTypeStream = 0
          VB: TRTCSnapshotSourceTypeStream = 0
        return:
          type: trtc.TRTCSnapshotSourceType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCSnapshotSourceType.TRTCSnapshotSourceTypeView
      commentId: F:trtc.TRTCSnapshotSourceType.TRTCSnapshotSourceTypeView
      language: CSharp
      name:
        CSharp: TRTCSnapshotSourceTypeView
        VB: TRTCSnapshotSourceTypeView
      nameWithType:
        CSharp: TRTCSnapshotSourceType.TRTCSnapshotSourceTypeView
        VB: TRTCSnapshotSourceType.TRTCSnapshotSourceTypeView
      qualifiedName:
        CSharp: trtc.TRTCSnapshotSourceType.TRTCSnapshotSourceTypeView
        VB: trtc.TRTCSnapshotSourceType.TRTCSnapshotSourceTypeView
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCSnapshotSourceTypeView
        path: ''
        startLine: 1283
      summary: "\nTake a screenshot from the rendering view\n"
      example: []
      syntax:
        content:
          CSharp: TRTCSnapshotSourceTypeView = 1
          VB: TRTCSnapshotSourceTypeView = 1
        return:
          type: trtc.TRTCSnapshotSourceType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCQualityInfo
    commentId: T:trtc.TRTCQualityInfo
    language: CSharp
    name:
      CSharp: TRTCQualityInfo
      VB: TRTCQualityInfo
    nameWithType:
      CSharp: TRTCQualityInfo
      VB: TRTCQualityInfo
    qualifiedName:
      CSharp: trtc.TRTCQualityInfo
      VB: trtc.TRTCQualityInfo
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCQualityInfo
      path: ''
      startLine: 1291
    summary: "\n6.4 Video quality\n\n<p>You can use this parameter to display an icon on the UI that indicates the line quality of a user in a call.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCQualityInfo
        VB: Public Structure TRTCQualityInfo
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCQualityInfo.userId
      commentId: F:trtc.TRTCQualityInfo.userId
      language: CSharp
      name:
        CSharp: userId
        VB: userId
      nameWithType:
        CSharp: TRTCQualityInfo.userId
        VB: TRTCQualityInfo.userId
      qualifiedName:
        CSharp: trtc.TRTCQualityInfo.userId
        VB: trtc.TRTCQualityInfo.userId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: userId
        path: ''
        startLine: 1297
      summary: "\nUser ID\n"
      example: []
      syntax:
        content:
          CSharp: public String userId
          VB: Public userId As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCQualityInfo.quality
      commentId: F:trtc.TRTCQualityInfo.quality
      language: CSharp
      name:
        CSharp: quality
        VB: quality
      nameWithType:
        CSharp: TRTCQualityInfo.quality
        VB: TRTCQualityInfo.quality
      qualifiedName:
        CSharp: trtc.TRTCQualityInfo.quality
        VB: trtc.TRTCQualityInfo.quality
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: quality
        path: ''
        startLine: 1301
      summary: "\nVideo quality\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCQuality quality
          VB: Public quality As TRTCQuality
        return:
          type: trtc.TRTCQuality
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCVolumeInfo
    commentId: T:trtc.TRTCVolumeInfo
    language: CSharp
    name:
      CSharp: TRTCVolumeInfo
      VB: TRTCVolumeInfo
    nameWithType:
      CSharp: TRTCVolumeInfo
      VB: TRTCVolumeInfo
    qualifiedName:
      CSharp: trtc.TRTCVolumeInfo
      VB: trtc.TRTCVolumeInfo
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVolumeInfo
      path: ''
      startLine: 1309
    summary: "\n6.5 Volume\n\n<p>You can use this parameter to display an icon on the UI that indicates whether a user is speaking.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCVolumeInfo
        VB: Public Structure TRTCVolumeInfo
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCVolumeInfo.userId
      commentId: F:trtc.TRTCVolumeInfo.userId
      language: CSharp
      name:
        CSharp: userId
        VB: userId
      nameWithType:
        CSharp: TRTCVolumeInfo.userId
        VB: TRTCVolumeInfo.userId
      qualifiedName:
        CSharp: trtc.TRTCVolumeInfo.userId
        VB: trtc.TRTCVolumeInfo.userId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: userId
        path: ''
        startLine: 1315
      summary: "\nUTF-8-encoded user ID of the speaker\n"
      example: []
      syntax:
        content:
          CSharp: public String userId
          VB: Public userId As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVolumeInfo.volume
      commentId: F:trtc.TRTCVolumeInfo.volume
      language: CSharp
      name:
        CSharp: volume
        VB: volume
      nameWithType:
        CSharp: TRTCVolumeInfo.volume
        VB: TRTCVolumeInfo.volume
      qualifiedName:
        CSharp: trtc.TRTCVolumeInfo.volume
        VB: trtc.TRTCVolumeInfo.volume
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: volume
        path: ''
        startLine: 1319
      summary: "\nVolume of the speaker. Value range: 0-100              \n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 volume
          VB: Public volume As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCVideoFrame
    commentId: T:trtc.TRTCVideoFrame
    language: CSharp
    name:
      CSharp: TRTCVideoFrame
      VB: TRTCVideoFrame
    nameWithType:
      CSharp: TRTCVideoFrame
      VB: TRTCVideoFrame
    qualifiedName:
      CSharp: trtc.TRTCVideoFrame
      VB: trtc.TRTCVideoFrame
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCVideoFrame
      path: ''
      startLine: 1325
    summary: "\n6.6 Video frame data\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCVideoFrame
        VB: Public Structure TRTCVideoFrame
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCVideoFrame.videoFormat
      commentId: F:trtc.TRTCVideoFrame.videoFormat
      language: CSharp
      name:
        CSharp: videoFormat
        VB: videoFormat
      nameWithType:
        CSharp: TRTCVideoFrame.videoFormat
        VB: TRTCVideoFrame.videoFormat
      qualifiedName:
        CSharp: trtc.TRTCVideoFrame.videoFormat
        VB: trtc.TRTCVideoFrame.videoFormat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: videoFormat
        path: ''
        startLine: 1330
      summary: "\nFormat of video frames\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCVideoPixelFormat videoFormat
          VB: Public videoFormat As TRTCVideoPixelFormat
        return:
          type: trtc.TRTCVideoPixelFormat
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoFrame.bufferType
      commentId: F:trtc.TRTCVideoFrame.bufferType
      language: CSharp
      name:
        CSharp: bufferType
        VB: bufferType
      nameWithType:
        CSharp: TRTCVideoFrame.bufferType
        VB: TRTCVideoFrame.bufferType
      qualifiedName:
        CSharp: trtc.TRTCVideoFrame.bufferType
        VB: trtc.TRTCVideoFrame.bufferType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: bufferType
        path: ''
        startLine: 1334
      summary: "\nBuffer type of video data\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCVideoBufferType bufferType
          VB: Public bufferType As TRTCVideoBufferType
        return:
          type: trtc.TRTCVideoBufferType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoFrame.data
      commentId: F:trtc.TRTCVideoFrame.data
      language: CSharp
      name:
        CSharp: data
        VB: data
      nameWithType:
        CSharp: TRTCVideoFrame.data
        VB: TRTCVideoFrame.data
      qualifiedName:
        CSharp: trtc.TRTCVideoFrame.data
        VB: trtc.TRTCVideoFrame.data
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: data
        path: ''
        startLine: 1338
      summary: "\nVideo data. This parameter is valid if `bufferType` is set to `LiteAVVideoBufferType_Buffer`.\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] data
          VB: Public data As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoFrame.textureId
      commentId: F:trtc.TRTCVideoFrame.textureId
      language: CSharp
      name:
        CSharp: textureId
        VB: textureId
      nameWithType:
        CSharp: TRTCVideoFrame.textureId
        VB: TRTCVideoFrame.textureId
      qualifiedName:
        CSharp: trtc.TRTCVideoFrame.textureId
        VB: trtc.TRTCVideoFrame.textureId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: textureId
        path: ''
        startLine: 1342
      summary: "\nVideo texture ID. This parameter is valid if `bufferType` is set to `LiteAVVideoBufferType_Texture`.\n"
      example: []
      syntax:
        content:
          CSharp: public int textureId
          VB: Public textureId As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoFrame.length
      commentId: F:trtc.TRTCVideoFrame.length
      language: CSharp
      name:
        CSharp: length
        VB: length
      nameWithType:
        CSharp: TRTCVideoFrame.length
        VB: TRTCVideoFrame.length
      qualifiedName:
        CSharp: trtc.TRTCVideoFrame.length
        VB: trtc.TRTCVideoFrame.length
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: length
        path: ''
        startLine: 1346
      summary: "\nVideo frame size, whose value is `width × height × 3/2` in I420 format and `width × height × 4` in BGRA32 format\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 length
          VB: Public length As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoFrame.width
      commentId: F:trtc.TRTCVideoFrame.width
      language: CSharp
      name:
        CSharp: width
        VB: width
      nameWithType:
        CSharp: TRTCVideoFrame.width
        VB: TRTCVideoFrame.width
      qualifiedName:
        CSharp: trtc.TRTCVideoFrame.width
        VB: trtc.TRTCVideoFrame.width
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: width
        path: ''
        startLine: 1350
      summary: "\nVideo width\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 width
          VB: Public width As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoFrame.height
      commentId: F:trtc.TRTCVideoFrame.height
      language: CSharp
      name:
        CSharp: height
        VB: height
      nameWithType:
        CSharp: TRTCVideoFrame.height
        VB: TRTCVideoFrame.height
      qualifiedName:
        CSharp: trtc.TRTCVideoFrame.height
        VB: trtc.TRTCVideoFrame.height
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: height
        path: ''
        startLine: 1354
      summary: "\nVideo height\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 height
          VB: Public height As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoFrame.timestamp
      commentId: F:trtc.TRTCVideoFrame.timestamp
      language: CSharp
      name:
        CSharp: timestamp
        VB: timestamp
      nameWithType:
        CSharp: TRTCVideoFrame.timestamp
        VB: TRTCVideoFrame.timestamp
      qualifiedName:
        CSharp: trtc.TRTCVideoFrame.timestamp
        VB: trtc.TRTCVideoFrame.timestamp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: timestamp
        path: ''
        startLine: 1358
      summary: "\nTimestamp (ms)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt64 timestamp
          VB: Public timestamp As UInt64
        return:
          type: UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCVideoFrame.rotation
      commentId: F:trtc.TRTCVideoFrame.rotation
      language: CSharp
      name:
        CSharp: rotation
        VB: rotation
      nameWithType:
        CSharp: TRTCVideoFrame.rotation
        VB: TRTCVideoFrame.rotation
      qualifiedName:
        CSharp: trtc.TRTCVideoFrame.rotation
        VB: trtc.TRTCVideoFrame.rotation
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: rotation
        path: ''
        startLine: 1362
      summary: "\nRotation\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCVideoRotation rotation
          VB: Public rotation As TRTCVideoRotation
        return:
          type: trtc.TRTCVideoRotation
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCAudioFrame
    commentId: T:trtc.TRTCAudioFrame
    language: CSharp
    name:
      CSharp: TRTCAudioFrame
      VB: TRTCAudioFrame
    nameWithType:
      CSharp: TRTCAudioFrame
      VB: TRTCAudioFrame
    qualifiedName:
      CSharp: trtc.TRTCAudioFrame
      VB: trtc.TRTCAudioFrame
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCAudioFrame
      path: ''
      startLine: 1368
    summary: "\n6.7 Audio frame data\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCAudioFrame
        VB: Public Structure TRTCAudioFrame
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCAudioFrame.audioFormat
      commentId: F:trtc.TRTCAudioFrame.audioFormat
      language: CSharp
      name:
        CSharp: audioFormat
        VB: audioFormat
      nameWithType:
        CSharp: TRTCAudioFrame.audioFormat
        VB: TRTCAudioFrame.audioFormat
      qualifiedName:
        CSharp: trtc.TRTCAudioFrame.audioFormat
        VB: trtc.TRTCAudioFrame.audioFormat
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: audioFormat
        path: ''
        startLine: 1373
      summary: "\nFormat of audio frames\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCAudioFrameFormat audioFormat
          VB: Public audioFormat As TRTCAudioFrameFormat
        return:
          type: trtc.TRTCAudioFrameFormat
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCAudioFrame.data
      commentId: F:trtc.TRTCAudioFrame.data
      language: CSharp
      name:
        CSharp: data
        VB: data
      nameWithType:
        CSharp: TRTCAudioFrame.data
        VB: TRTCAudioFrame.data
      qualifiedName:
        CSharp: trtc.TRTCAudioFrame.data
        VB: trtc.TRTCAudioFrame.data
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: data
        path: ''
        startLine: 1377
      summary: "\nAudio data\n"
      example: []
      syntax:
        content:
          CSharp: public byte[] data
          VB: Public data As Byte()
        return:
          type: System.Byte[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCAudioFrame.length
      commentId: F:trtc.TRTCAudioFrame.length
      language: CSharp
      name:
        CSharp: length
        VB: length
      nameWithType:
        CSharp: TRTCAudioFrame.length
        VB: TRTCAudioFrame.length
      qualifiedName:
        CSharp: trtc.TRTCAudioFrame.length
        VB: trtc.TRTCAudioFrame.length
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: length
        path: ''
        startLine: 1381
      summary: "\nAudio frame size\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 length
          VB: Public length As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCAudioFrame.sampleRate
      commentId: F:trtc.TRTCAudioFrame.sampleRate
      language: CSharp
      name:
        CSharp: sampleRate
        VB: sampleRate
      nameWithType:
        CSharp: TRTCAudioFrame.sampleRate
        VB: TRTCAudioFrame.sampleRate
      qualifiedName:
        CSharp: trtc.TRTCAudioFrame.sampleRate
        VB: trtc.TRTCAudioFrame.sampleRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: sampleRate
        path: ''
        startLine: 1385
      summary: "\nSample rate\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 sampleRate
          VB: Public sampleRate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCAudioFrame.channel
      commentId: F:trtc.TRTCAudioFrame.channel
      language: CSharp
      name:
        CSharp: channel
        VB: channel
      nameWithType:
        CSharp: TRTCAudioFrame.channel
        VB: TRTCAudioFrame.channel
      qualifiedName:
        CSharp: trtc.TRTCAudioFrame.channel
        VB: trtc.TRTCAudioFrame.channel
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: channel
        path: ''
        startLine: 1389
      summary: "\nNumber of sound channels\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 channel
          VB: Public channel As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCAudioFrame.timestamp
      commentId: F:trtc.TRTCAudioFrame.timestamp
      language: CSharp
      name:
        CSharp: timestamp
        VB: timestamp
      nameWithType:
        CSharp: TRTCAudioFrame.timestamp
        VB: TRTCAudioFrame.timestamp
      qualifiedName:
        CSharp: trtc.TRTCAudioFrame.timestamp
        VB: trtc.TRTCAudioFrame.timestamp
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: timestamp
        path: ''
        startLine: 1393
      summary: "\nTimestamp (ms)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt64 timestamp
          VB: Public timestamp As UInt64
        return:
          type: UInt64
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCSpeedTestResult
    commentId: T:trtc.TRTCSpeedTestResult
    language: CSharp
    name:
      CSharp: TRTCSpeedTestResult
      VB: TRTCSpeedTestResult
    nameWithType:
      CSharp: TRTCSpeedTestResult
      VB: TRTCSpeedTestResult
    qualifiedName:
      CSharp: trtc.TRTCSpeedTestResult
      VB: trtc.TRTCSpeedTestResult
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCSpeedTestResult
      path: ''
      startLine: 1409
    summary: "\n6.8 Network speed testing result\n<p>\nBefore room entry, you can use the `startSpeedTest` of `TRTCCloud` to test the network speed (do not call the API during a call).\nThe result will be returned every 2-3 seconds, for one IP address at a time.\n</p>\n"
    remarks: "\n`quality` is the network quality measured by the SDK. Lower packet loss and shorter RTT mean higher network quality.\n<p>- `upLostRate` is the upstream packet loss rate. For example, `0.3` indicates that for every 10 data packets sent to the server, 3 may be lost.</p>\n<p>- `downLostRate` is the downstream packet loss rate. For example, `0.2` indicates that for every 10 data packets received from the server, 2 may be lost.</p>\n<p>- `rtt` is the time it takes for data to travel from the current device to the Tencent Cloud server and back again. The normal range of RTT is 10-100 ms. The shorter, the better.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCSpeedTestResult
        VB: Public Structure TRTCSpeedTestResult
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCSpeedTestResult.ip
      commentId: F:trtc.TRTCSpeedTestResult.ip
      language: CSharp
      name:
        CSharp: ip
        VB: ip
      nameWithType:
        CSharp: TRTCSpeedTestResult.ip
        VB: TRTCSpeedTestResult.ip
      qualifiedName:
        CSharp: trtc.TRTCSpeedTestResult.ip
        VB: trtc.TRTCSpeedTestResult.ip
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: ip
        path: ''
        startLine: 1414
      summary: "\nServer IP address\n"
      example: []
      syntax:
        content:
          CSharp: public String ip
          VB: Public ip As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCSpeedTestResult.quality
      commentId: F:trtc.TRTCSpeedTestResult.quality
      language: CSharp
      name:
        CSharp: quality
        VB: quality
      nameWithType:
        CSharp: TRTCSpeedTestResult.quality
        VB: TRTCSpeedTestResult.quality
      qualifiedName:
        CSharp: trtc.TRTCSpeedTestResult.quality
        VB: trtc.TRTCSpeedTestResult.quality
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: quality
        path: ''
        startLine: 1418
      summary: "\nNetwork quality measured by the SDK. Lower packet loss and shorter RTT mean higher network quality.\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCQuality quality
          VB: Public quality As TRTCQuality
        return:
          type: trtc.TRTCQuality
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCSpeedTestResult.upLostRate
      commentId: F:trtc.TRTCSpeedTestResult.upLostRate
      language: CSharp
      name:
        CSharp: upLostRate
        VB: upLostRate
      nameWithType:
        CSharp: TRTCSpeedTestResult.upLostRate
        VB: TRTCSpeedTestResult.upLostRate
      qualifiedName:
        CSharp: trtc.TRTCSpeedTestResult.upLostRate
        VB: trtc.TRTCSpeedTestResult.upLostRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: upLostRate
        path: ''
        startLine: 1422
      summary: "\nUpstream packet loss rate. Value range: 0-1.0. For example, `0.3` indicates that for every 10 data packets sent to the server, 3 may be lost.\n"
      example: []
      syntax:
        content:
          CSharp: public float upLostRate
          VB: Public upLostRate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCSpeedTestResult.downLostRate
      commentId: F:trtc.TRTCSpeedTestResult.downLostRate
      language: CSharp
      name:
        CSharp: downLostRate
        VB: downLostRate
      nameWithType:
        CSharp: TRTCSpeedTestResult.downLostRate
        VB: TRTCSpeedTestResult.downLostRate
      qualifiedName:
        CSharp: trtc.TRTCSpeedTestResult.downLostRate
        VB: trtc.TRTCSpeedTestResult.downLostRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: downLostRate
        path: ''
        startLine: 1426
      summary: "\nDownstream packet loss rate. Value range: 0-1.0. For example, `0.2` indicates that for every 10 data packets received from the server, 2 may be lost.\n"
      example: []
      syntax:
        content:
          CSharp: public float downLostRate
          VB: Public downLostRate As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCSpeedTestResult.rtt
      commentId: F:trtc.TRTCSpeedTestResult.rtt
      language: CSharp
      name:
        CSharp: rtt
        VB: rtt
      nameWithType:
        CSharp: TRTCSpeedTestResult.rtt
        VB: TRTCSpeedTestResult.rtt
      qualifiedName:
        CSharp: trtc.TRTCSpeedTestResult.rtt
        VB: trtc.TRTCSpeedTestResult.rtt
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: rtt
        path: ''
        startLine: 1430
      summary: "\nThe time (ms) it takes for data to travel from the current device to the Tencent Cloud server and back again. The normal range of RTT is 10-100 ms. The shorter, the better.\n"
      example: []
      syntax:
        content:
          CSharp: public int rtt
          VB: Public rtt As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCPublishCDNParam
    commentId: T:trtc.TRTCPublishCDNParam
    language: CSharp
    name:
      CSharp: TRTCPublishCDNParam
      VB: TRTCPublishCDNParam
    nameWithType:
      CSharp: TRTCPublishCDNParam
      VB: TRTCPublishCDNParam
    qualifiedName:
      CSharp: trtc.TRTCPublishCDNParam
      VB: trtc.TRTCPublishCDNParam
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCPublishCDNParam
      path: ''
      startLine: 1436
    summary: "\n5.13 CDN relayed push parameters\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCPublishCDNParam
        VB: Public Structure TRTCPublishCDNParam
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCPublishCDNParam.appId
      commentId: F:trtc.TRTCPublishCDNParam.appId
      language: CSharp
      name:
        CSharp: appId
        VB: appId
      nameWithType:
        CSharp: TRTCPublishCDNParam.appId
        VB: TRTCPublishCDNParam.appId
      qualifiedName:
        CSharp: trtc.TRTCPublishCDNParam.appId
        VB: trtc.TRTCPublishCDNParam.appId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: appId
        path: ''
        startLine: 1441
      summary: "\nTencent Cloud `AppID`. In the TRTC console, select **Application Management**, find the application created, and click **Application Info** to view the `AppID` in the **Relayed Live Streaming Info** section.\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 appId
          VB: Public appId As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCPublishCDNParam.bizId
      commentId: F:trtc.TRTCPublishCDNParam.bizId
      language: CSharp
      name:
        CSharp: bizId
        VB: bizId
      nameWithType:
        CSharp: TRTCPublishCDNParam.bizId
        VB: TRTCPublishCDNParam.bizId
      qualifiedName:
        CSharp: trtc.TRTCPublishCDNParam.bizId
        VB: trtc.TRTCPublishCDNParam.bizId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: bizId
        path: ''
        startLine: 1446
      summary: "\nTencent Cloud `bizid`. In the TRTC console, select **Application Management**, find the application created, and click **Application Info** to view the `bizid` in the **Relayed Live Streaming Info** section.\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 bizId
          VB: Public bizId As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCPublishCDNParam.url
      commentId: F:trtc.TRTCPublishCDNParam.url
      language: CSharp
      name:
        CSharp: url
        VB: url
      nameWithType:
        CSharp: TRTCPublishCDNParam.url
        VB: TRTCPublishCDNParam.url
      qualifiedName:
        CSharp: trtc.TRTCPublishCDNParam.url
        VB: trtc.TRTCPublishCDNParam.url
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: url
        path: ''
        startLine: 1451
      summary: "\nRelayed push URL\n"
      example: []
      syntax:
        content:
          CSharp: public String url
          VB: Public url As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCTranscodingConfigMode
    commentId: T:trtc.TRTCTranscodingConfigMode
    language: CSharp
    name:
      CSharp: TRTCTranscodingConfigMode
      VB: TRTCTranscodingConfigMode
    nameWithType:
      CSharp: TRTCTranscodingConfigMode
      VB: TRTCTranscodingConfigMode
    qualifiedName:
      CSharp: trtc.TRTCTranscodingConfigMode
      VB: trtc.TRTCTranscodingConfigMode
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCTranscodingConfigMode
      path: ''
      startLine: 1458
    summary: "\n5.11 Mixtranscoding configuration mode\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCTranscodingConfigMode
        VB: Public Enum TRTCTranscodingConfigMode
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Unknown
      commentId: F:trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Unknown
      language: CSharp
      name:
        CSharp: TRTCTranscodingConfigMode_Unknown
        VB: TRTCTranscodingConfigMode_Unknown
      nameWithType:
        CSharp: TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Unknown
        VB: TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Unknown
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Unknown
        VB: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Unknown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCTranscodingConfigMode_Unknown
        path: ''
        startLine: 1463
      summary: "\nInvalid value\n"
      example: []
      syntax:
        content:
          CSharp: TRTCTranscodingConfigMode_Unknown = 0
          VB: TRTCTranscodingConfigMode_Unknown = 0
        return:
          type: trtc.TRTCTranscodingConfigMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Manual
      commentId: F:trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Manual
      language: CSharp
      name:
        CSharp: TRTCTranscodingConfigMode_Manual
        VB: TRTCTranscodingConfigMode_Manual
      nameWithType:
        CSharp: TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Manual
        VB: TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Manual
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Manual
        VB: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Manual
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCTranscodingConfigMode_Manual
        path: ''
        startLine: 1470
      summary: "\nManual mode. This mode is the most flexible, allowing you to mix streams as needed, but it is the most difficult to use.\nIn this mode, you need to specify all the parameters in `TRTCTranscodingConfig` and listen for the `onUserVideoAvailable()` and `onUserAudioAvailable()` callbacks in `TRTCCloudDelegate`.\nThe callbacks keep you up to date about the users who are sending audio and video in the room so that you can modify the `mixUsers` parameter accordingly. Otherwise, mixtranscoding will fail.\n"
      example: []
      syntax:
        content:
          CSharp: TRTCTranscodingConfigMode_Manual = 1
          VB: TRTCTranscodingConfigMode_Manual = 1
        return:
          type: trtc.TRTCTranscodingConfigMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PureAudio
      commentId: F:trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PureAudio
      language: CSharp
      name:
        CSharp: TRTCTranscodingConfigMode_Template_PureAudio
        VB: TRTCTranscodingConfigMode_Template_PureAudio
      nameWithType:
        CSharp: TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PureAudio
        VB: TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PureAudio
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PureAudio
        VB: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PureAudio
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCTranscodingConfigMode_Template_PureAudio
        path: ''
        startLine: 1477
      summary: "\nAudio-only mode, which is suitable for audio-only scenarios such as audio call (`AudioCall`) and audio chat room (`VoiceChatRoom`)\nYou only need to set the mode once through the `setMixTranscodingConfig()` API after room entry, and the SDK will automatically mix the audios of all mic-on users in the room into the current user&apos;s stream.\nIn this mode, you only need to set `audioSampleRate`, `audioBitrate`, and `audioChannels` in `TRTCTranscodingConfig`, not `mixUsers`.\n"
      example: []
      syntax:
        content:
          CSharp: TRTCTranscodingConfigMode_Template_PureAudio = 2
          VB: TRTCTranscodingConfigMode_Template_PureAudio = 2
        return:
          type: trtc.TRTCTranscodingConfigMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PresetLayout
      commentId: F:trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PresetLayout
      language: CSharp
      name:
        CSharp: TRTCTranscodingConfigMode_Template_PresetLayout
        VB: TRTCTranscodingConfigMode_Template_PresetLayout
      nameWithType:
        CSharp: TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PresetLayout
        VB: TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PresetLayout
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PresetLayout
        VB: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_PresetLayout
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCTranscodingConfigMode_Template_PresetLayout
        path: ''
        startLine: 1488
      summary: "\nPreset layout mode, which determines the layout of images in advance through placeholders\nIn this mode, you need to set the `mixUsers` parameter, but can use the following placeholders for `userId`.\n- `$PLACE_HOLDER_REMOTE$`: the image of a remote user. You can set multiple `userId` to this value.\n- `$PLACE_HOLDER_LOCAL_MAIN$`: the local camera image. You can set only one `userId` to this value.\n- `$PLACE_HOLDER_LOCAL_SUB$`: the local screen sharing image. You can set only one `userId` to this value.\nYou don&apos;t need to listen for the `onUserVideoAvailable()` or `onUserAudioAvailable()` callback in `TRTCCloudDelegate`.\nJust call `setMixTranscodingConfig()` once after successful room entry, and the SDK will automatically replace the placeholders with actual `userId` values.\n"
      example: []
      syntax:
        content:
          CSharp: TRTCTranscodingConfigMode_Template_PresetLayout = 3
          VB: TRTCTranscodingConfigMode_Template_PresetLayout = 3
        return:
          type: trtc.TRTCTranscodingConfigMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_ScreenSharing
      commentId: F:trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_ScreenSharing
      language: CSharp
      name:
        CSharp: TRTCTranscodingConfigMode_Template_ScreenSharing
        VB: TRTCTranscodingConfigMode_Template_ScreenSharing
      nameWithType:
        CSharp: TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_ScreenSharing
        VB: TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_ScreenSharing
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_ScreenSharing
        VB: trtc.TRTCTranscodingConfigMode.TRTCTranscodingConfigMode_Template_ScreenSharing
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCTranscodingConfigMode_Template_ScreenSharing
        path: ''
        startLine: 1502
      summary: "\nScreen sharing mode, which is suitable for scenarios such as online education. This mode is supported only by the SDK for Windows and macOS.\nThe SDK will first build a canvas according to the target resolution you set (through the `videoWidth` and `videoHeight` parameters).\nWhen the teacher is not sharing his or her screen, the SDK stretches the teacher’s camera image to fit the canvas. After the teacher enables screen sharing, the SDK does the same to the screen sharing image.\nThis ensures consistency in the resolution of mixed streams and prevents screen corruption during replay and live playback (webpage players cannot play videos with changing resolution).\nGiven that screen sharing images are the main content in education scenarios, publishing both the camera and screen sharing images would be a waste of bandwidth.\nWe recommend that you use `setLocalVideoRenderCallback()` to draw the camera image onto the shared screen.\nIn this mode, you don&apos;t need to set the `mixUsers` parameter in `TRTCTranscodingConfig`, and the SDK will not mix students&apos; images so as not to interfere with the screen sharing effect.\nYou can set both `width` and `height` in `TRTCTranscodingConfig` to `0`, and the SDK will work out an appropriate resolution based on the user’s screen size.\n- If the teacher&apos;s current screen width is less than or equal to 1920 px, the SDK will use the actual resolution of the teacher&apos;s current screen.\n- If the teacher&apos;s screen width is greater than 1920 px, the SDK will use the resolution 1920 × 1080 (16:9), 1920 × 1200 (16:10), or 1920 × 1440 (4:3).\n"
      example: []
      syntax:
        content:
          CSharp: TRTCTranscodingConfigMode_Template_ScreenSharing = 4
          VB: TRTCTranscodingConfigMode_Template_ScreenSharing = 4
        return:
          type: trtc.TRTCTranscodingConfigMode
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.RECT
    commentId: T:trtc.RECT
    language: CSharp
    name:
      CSharp: RECT
      VB: RECT
    nameWithType:
      CSharp: RECT
      VB: RECT
    qualifiedName:
      CSharp: trtc.RECT
      VB: trtc.RECT
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: RECT
      path: ''
      startLine: 1508
    summary: "\nCoordinates and size of the image. The coordinates (absolute pixel value) of the image’s top-left corner is (0,0).\n"
    example: []
    syntax:
      content:
        CSharp: public struct RECT
        VB: Public Structure RECT
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.RECT.left
      commentId: F:trtc.RECT.left
      language: CSharp
      name:
        CSharp: left
        VB: left
      nameWithType:
        CSharp: RECT.left
        VB: RECT.left
      qualifiedName:
        CSharp: trtc.RECT.left
        VB: trtc.RECT.left
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: left
        path: ''
        startLine: 1513
      summary: "\nLeft margin\n"
      example: []
      syntax:
        content:
          CSharp: public int left
          VB: Public left As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.RECT.top
      commentId: F:trtc.RECT.top
      language: CSharp
      name:
        CSharp: top
        VB: top
      nameWithType:
        CSharp: RECT.top
        VB: RECT.top
      qualifiedName:
        CSharp: trtc.RECT.top
        VB: trtc.RECT.top
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: top
        path: ''
        startLine: 1517
      summary: "\nTop margin\n"
      example: []
      syntax:
        content:
          CSharp: public int top
          VB: Public top As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.RECT.right
      commentId: F:trtc.RECT.right
      language: CSharp
      name:
        CSharp: right
        VB: right
      nameWithType:
        CSharp: RECT.right
        VB: RECT.right
      qualifiedName:
        CSharp: trtc.RECT.right
        VB: trtc.RECT.right
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: right
        path: ''
        startLine: 1521
      summary: "\nRight margin\n"
      example: []
      syntax:
        content:
          CSharp: public int right
          VB: Public right As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.RECT.bottom
      commentId: F:trtc.RECT.bottom
      language: CSharp
      name:
        CSharp: bottom
        VB: bottom
      nameWithType:
        CSharp: RECT.bottom
        VB: RECT.bottom
      qualifiedName:
        CSharp: trtc.RECT.bottom
        VB: trtc.RECT.bottom
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: bottom
        path: ''
        startLine: 1525
      summary: "\nBottom margin\n"
      example: []
      syntax:
        content:
          CSharp: public int bottom
          VB: Public bottom As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCMixInputType
    commentId: T:trtc.TRTCMixInputType
    language: CSharp
    name:
      CSharp: TRTCMixInputType
      VB: TRTCMixInputType
    nameWithType:
      CSharp: TRTCMixInputType
      VB: TRTCMixInputType
    qualifiedName:
      CSharp: trtc.TRTCMixInputType
      VB: trtc.TRTCMixInputType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCMixInputType
      path: ''
      startLine: 1531
    summary: "\n2.6 Type of streams to mix\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCMixInputType
        VB: Public Enum TRTCMixInputType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCMixInputType.TRTCMixInputTypeUndefined
      commentId: F:trtc.TRTCMixInputType.TRTCMixInputTypeUndefined
      language: CSharp
      name:
        CSharp: TRTCMixInputTypeUndefined
        VB: TRTCMixInputTypeUndefined
      nameWithType:
        CSharp: TRTCMixInputType.TRTCMixInputTypeUndefined
        VB: TRTCMixInputType.TRTCMixInputTypeUndefined
      qualifiedName:
        CSharp: trtc.TRTCMixInputType.TRTCMixInputTypeUndefined
        VB: trtc.TRTCMixInputType.TRTCMixInputTypeUndefined
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCMixInputTypeUndefined
        path: ''
        startLine: 1537
      summary: "\nNot specified. The type of streams to mix is determined by the value of `pureAudio`.\n"
      example: []
      syntax:
        content:
          CSharp: TRTCMixInputTypeUndefined = 0
          VB: TRTCMixInputTypeUndefined = 0
        return:
          type: trtc.TRTCMixInputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCMixInputType.TRTCMixInputTypeAudioVideo
      commentId: F:trtc.TRTCMixInputType.TRTCMixInputTypeAudioVideo
      language: CSharp
      name:
        CSharp: TRTCMixInputTypeAudioVideo
        VB: TRTCMixInputTypeAudioVideo
      nameWithType:
        CSharp: TRTCMixInputType.TRTCMixInputTypeAudioVideo
        VB: TRTCMixInputType.TRTCMixInputTypeAudioVideo
      qualifiedName:
        CSharp: trtc.TRTCMixInputType.TRTCMixInputTypeAudioVideo
        VB: trtc.TRTCMixInputType.TRTCMixInputTypeAudioVideo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCMixInputTypeAudioVideo
        path: ''
        startLine: 1542
      summary: "\nMix audio and video\n"
      example: []
      syntax:
        content:
          CSharp: TRTCMixInputTypeAudioVideo = 1
          VB: TRTCMixInputTypeAudioVideo = 1
        return:
          type: trtc.TRTCMixInputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCMixInputType.TRTCMixInputTypePureVideo
      commentId: F:trtc.TRTCMixInputType.TRTCMixInputTypePureVideo
      language: CSharp
      name:
        CSharp: TRTCMixInputTypePureVideo
        VB: TRTCMixInputTypePureVideo
      nameWithType:
        CSharp: TRTCMixInputType.TRTCMixInputTypePureVideo
        VB: TRTCMixInputType.TRTCMixInputTypePureVideo
      qualifiedName:
        CSharp: trtc.TRTCMixInputType.TRTCMixInputTypePureVideo
        VB: trtc.TRTCMixInputType.TRTCMixInputTypePureVideo
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCMixInputTypePureVideo
        path: ''
        startLine: 1547
      summary: "\nMix video only\n"
      example: []
      syntax:
        content:
          CSharp: TRTCMixInputTypePureVideo = 2
          VB: TRTCMixInputTypePureVideo = 2
        return:
          type: trtc.TRTCMixInputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCMixInputType.TRTCMixInputTypePureAudio
      commentId: F:trtc.TRTCMixInputType.TRTCMixInputTypePureAudio
      language: CSharp
      name:
        CSharp: TRTCMixInputTypePureAudio
        VB: TRTCMixInputTypePureAudio
      nameWithType:
        CSharp: TRTCMixInputType.TRTCMixInputTypePureAudio
        VB: TRTCMixInputType.TRTCMixInputTypePureAudio
      qualifiedName:
        CSharp: trtc.TRTCMixInputType.TRTCMixInputTypePureAudio
        VB: trtc.TRTCMixInputType.TRTCMixInputTypePureAudio
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCMixInputTypePureAudio
        path: ''
        startLine: 1552
      summary: "\nMix audio only\n"
      example: []
      syntax:
        content:
          CSharp: TRTCMixInputTypePureAudio = 3
          VB: TRTCMixInputTypePureAudio = 3
        return:
          type: trtc.TRTCMixInputType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCMixUser
    commentId: T:trtc.TRTCMixUser
    language: CSharp
    name:
      CSharp: TRTCMixUser
      VB: TRTCMixUser
    nameWithType:
      CSharp: TRTCMixUser
      VB: TRTCMixUser
    qualifiedName:
      CSharp: trtc.TRTCMixUser
      VB: trtc.TRTCMixUser
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCMixUser
      path: ''
      startLine: 1561
    summary: "\n5.10 Position of each image in On-Cloud MixTranscoding\n<p>\nYou can use `TRTCMixUser` to specify the position of the video image of each stream (`userId`).\n</p>\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCMixUser
        VB: Public Structure TRTCMixUser
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCMixUser.userId
      commentId: F:trtc.TRTCMixUser.userId
      language: CSharp
      name:
        CSharp: userId
        VB: userId
      nameWithType:
        CSharp: TRTCMixUser.userId
        VB: TRTCMixUser.userId
      qualifiedName:
        CSharp: trtc.TRTCMixUser.userId
        VB: trtc.TRTCMixUser.userId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: userId
        path: ''
        startLine: 1566
      summary: "\n**Description:** `userId` of the user whose stream is mixed\n"
      example: []
      syntax:
        content:
          CSharp: public string userId
          VB: Public userId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCMixUser.roomId
      commentId: F:trtc.TRTCMixUser.roomId
      language: CSharp
      name:
        CSharp: roomId
        VB: roomId
      nameWithType:
        CSharp: TRTCMixUser.roomId
        VB: TRTCMixUser.roomId
      qualifiedName:
        CSharp: trtc.TRTCMixUser.roomId
        VB: trtc.TRTCMixUser.roomId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: roomId
        path: ''
        startLine: 1571
      summary: "\n**Description:** `roomId` of the stream to mix. In case of cross-room stream mixing, set this parameter to the `roomId` of the to-be-mixed stream. For same-room stream mixing, set this parameter to `nullptr`.\n"
      example: []
      syntax:
        content:
          CSharp: public string roomId
          VB: Public roomId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCMixUser.rect
      commentId: F:trtc.TRTCMixUser.rect
      language: CSharp
      name:
        CSharp: rect
        VB: rect
      nameWithType:
        CSharp: TRTCMixUser.rect
        VB: TRTCMixUser.rect
      qualifiedName:
        CSharp: trtc.TRTCMixUser.rect
        VB: trtc.TRTCMixUser.rect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: rect
        path: ''
        startLine: 1576
      summary: "\n**Description:** Coordinates and size of the image. The coordinates (absolute pixel value) of the image’s top-left corner is (0,0).\n"
      example: []
      syntax:
        content:
          CSharp: public RECT rect
          VB: Public rect As RECT
        return:
          type: trtc.RECT
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCMixUser.zOrder
      commentId: F:trtc.TRTCMixUser.zOrder
      language: CSharp
      name:
        CSharp: zOrder
        VB: zOrder
      nameWithType:
        CSharp: TRTCMixUser.zOrder
        VB: TRTCMixUser.zOrder
      qualifiedName:
        CSharp: trtc.TRTCMixUser.zOrder
        VB: trtc.TRTCMixUser.zOrder
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: zOrder
        path: ''
        startLine: 1581
      summary: "\n**Description:** image layer (1-15), which must be unique\n"
      example: []
      syntax:
        content:
          CSharp: public int zOrder
          VB: Public zOrder As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCMixUser.pureAudio
      commentId: F:trtc.TRTCMixUser.pureAudio
      language: CSharp
      name:
        CSharp: pureAudio
        VB: pureAudio
      nameWithType:
        CSharp: TRTCMixUser.pureAudio
        VB: TRTCMixUser.pureAudio
      qualifiedName:
        CSharp: trtc.TRTCMixUser.pureAudio
        VB: trtc.TRTCMixUser.pureAudio
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: pureAudio
        path: ''
        startLine: 1588
      summary: "\n**Description:** whether the user has enabled audio only\n**Value:** default value: `NO`\n**Note:** This parameter has been disused. Please use `inputType` instead.\n"
      example: []
      syntax:
        content:
          CSharp: public bool pureAudio
          VB: Public pureAudio As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCMixUser.streamType
      commentId: F:trtc.TRTCMixUser.streamType
      language: CSharp
      name:
        CSharp: streamType
        VB: streamType
      nameWithType:
        CSharp: TRTCMixUser.streamType
        VB: TRTCMixUser.streamType
      qualifiedName:
        CSharp: trtc.TRTCMixUser.streamType
        VB: trtc.TRTCMixUser.streamType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: streamType
        path: ''
        startLine: 1593
      summary: "\n**Description:** whether the mixed stream is the primary stream (`TRTCVideoStreamTypeBig`) or screen sharing stream (`TRTCVideoStreamTypeSub`)\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCVideoStreamType streamType
          VB: Public streamType As TRTCVideoStreamType
        return:
          type: trtc.TRTCVideoStreamType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCMixUser.inputType
      commentId: F:trtc.TRTCMixUser.inputType
      language: CSharp
      name:
        CSharp: inputType
        VB: inputType
      nameWithType:
        CSharp: TRTCMixUser.inputType
        VB: TRTCMixUser.inputType
      qualifiedName:
        CSharp: trtc.TRTCMixUser.inputType
        VB: trtc.TRTCMixUser.inputType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: inputType
        path: ''
        startLine: 1602
      summary: "\n**Description:** type of the user’s input stream. This is an upgrade of the `pureAudio` parameter.\n**Value:**\n- Default value: `TRTCMixInputTypeUndefined`\n- You can use this parameter if you haven’t specified `pureAudio`.\n- If you have set `pureAudio` to `YES`, set this parameter to `TRTCMixInputTypeUndefined`.\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCMixInputType inputType
          VB: Public inputType As TRTCMixInputType
        return:
          type: trtc.TRTCMixInputType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCTranscodingConfig
    commentId: T:trtc.TRTCTranscodingConfig
    language: CSharp
    name:
      CSharp: TRTCTranscodingConfig
      VB: TRTCTranscodingConfig
    nameWithType:
      CSharp: TRTCTranscodingConfig
      VB: TRTCTranscodingConfig
    qualifiedName:
      CSharp: trtc.TRTCTranscodingConfig
      VB: trtc.TRTCTranscodingConfig
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCTranscodingConfig
      path: ''
      startLine: 1609
    summary: "\n5.12 On-Cloud MixTranscoding parameters\n<p>The parameters determine the quality of encoded audio/video, the position of each image, etc.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCTranscodingConfig
        VB: Public Structure TRTCTranscodingConfig
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCTranscodingConfig.mode
      commentId: F:trtc.TRTCTranscodingConfig.mode
      language: CSharp
      name:
        CSharp: mode
        VB: mode
      nameWithType:
        CSharp: TRTCTranscodingConfig.mode
        VB: TRTCTranscodingConfig.mode
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.mode
        VB: trtc.TRTCTranscodingConfig.mode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: mode
        path: ''
        startLine: 1614
      summary: "\n**Description:** On-Cloud MixTranscoding configuration mode\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCTranscodingConfigMode mode
          VB: Public mode As TRTCTranscodingConfigMode
        return:
          type: trtc.TRTCTranscodingConfigMode
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.appId
      commentId: F:trtc.TRTCTranscodingConfig.appId
      language: CSharp
      name:
        CSharp: appId
        VB: appId
      nameWithType:
        CSharp: TRTCTranscodingConfig.appId
        VB: TRTCTranscodingConfig.appId
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.appId
        VB: trtc.TRTCTranscodingConfig.appId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: appId
        path: ''
        startLine: 1619
      syntax:
        content:
          CSharp: public UInt32 appId
          VB: Public appId As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.bizId
      commentId: F:trtc.TRTCTranscodingConfig.bizId
      language: CSharp
      name:
        CSharp: bizId
        VB: bizId
      nameWithType:
        CSharp: TRTCTranscodingConfig.bizId
        VB: TRTCTranscodingConfig.bizId
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.bizId
        VB: trtc.TRTCTranscodingConfig.bizId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: bizId
        path: ''
        startLine: 1625
      summary: "\n**Description:** Tencent Cloud `bizid`\n**Value:** In the [TRTC console](https://console.cloud.tencent.com/rav), find the application created, and click **Application Info** to view the `bizid` in the **Relayed Live Streaming Info** section.\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 bizId
          VB: Public bizId As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.videoWidth
      commentId: F:trtc.TRTCTranscodingConfig.videoWidth
      language: CSharp
      name:
        CSharp: videoWidth
        VB: videoWidth
      nameWithType:
        CSharp: TRTCTranscodingConfig.videoWidth
        VB: TRTCTranscodingConfig.videoWidth
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.videoWidth
        VB: trtc.TRTCTranscodingConfig.videoWidth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: videoWidth
        path: ''
        startLine: 1631
      summary: "\n**Description:** width (px) of transcoded video\n**Value:** recommended value: `360`. If audio-only streams are mixed, the mixing result will carry a video stream that shows a canvas background. To avoid this, set both the width and height to 0 px.\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 videoWidth
          VB: Public videoWidth As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.videoHeight
      commentId: F:trtc.TRTCTranscodingConfig.videoHeight
      language: CSharp
      name:
        CSharp: videoHeight
        VB: videoHeight
      nameWithType:
        CSharp: TRTCTranscodingConfig.videoHeight
        VB: TRTCTranscodingConfig.videoHeight
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.videoHeight
        VB: trtc.TRTCTranscodingConfig.videoHeight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: videoHeight
        path: ''
        startLine: 1636
      summary: "\n**Description:** height (px) of transcoded video\n**Value:** recommended value: `640`. If audio-only streams are mixed, the mixing result will carry a video stream that shows a canvas background. To avoid this, set both the width and height to 0 px.\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 videoHeight
          VB: Public videoHeight As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.videoBitrate
      commentId: F:trtc.TRTCTranscodingConfig.videoBitrate
      language: CSharp
      name:
        CSharp: videoBitrate
        VB: videoBitrate
      nameWithType:
        CSharp: TRTCTranscodingConfig.videoBitrate
        VB: TRTCTranscodingConfig.videoBitrate
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.videoBitrate
        VB: trtc.TRTCTranscodingConfig.videoBitrate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: videoBitrate
        path: ''
        startLine: 1642
      summary: "\n**Description:** bitrate (Kbps) of transcoded video\n**Value:** If you set this parameter to `0`, the backend will work out a bitrate based on `videoWidth` and `videoHeight`. You can refer to the comment for the enumerated value `TRTCVideoResolution_640_480`.\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 videoBitrate
          VB: Public videoBitrate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.videoFramerate
      commentId: F:trtc.TRTCTranscodingConfig.videoFramerate
      language: CSharp
      name:
        CSharp: videoFramerate
        VB: videoFramerate
      nameWithType:
        CSharp: TRTCTranscodingConfig.videoFramerate
        VB: TRTCTranscodingConfig.videoFramerate
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.videoFramerate
        VB: trtc.TRTCTranscodingConfig.videoFramerate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: videoFramerate
        path: ''
        startLine: 1648
      summary: "\n**Description:** frame rate (fps) of transcoded video\n**Value:** default value: `15`. Value range: (0,30]\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 videoFramerate
          VB: Public videoFramerate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.videoGOP
      commentId: F:trtc.TRTCTranscodingConfig.videoGOP
      language: CSharp
      name:
        CSharp: videoGOP
        VB: videoGOP
      nameWithType:
        CSharp: TRTCTranscodingConfig.videoGOP
        VB: TRTCTranscodingConfig.videoGOP
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.videoGOP
        VB: trtc.TRTCTranscodingConfig.videoGOP
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: videoGOP
        path: ''
        startLine: 1654
      summary: "\n**Description:** keyframe interval (GOP) of transcoded video in seconds\n**Value:** default value: `2`. Value range: [1,8]\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 videoGOP
          VB: Public videoGOP As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.backgroundColor
      commentId: F:trtc.TRTCTranscodingConfig.backgroundColor
      language: CSharp
      name:
        CSharp: backgroundColor
        VB: backgroundColor
      nameWithType:
        CSharp: TRTCTranscodingConfig.backgroundColor
        VB: TRTCTranscodingConfig.backgroundColor
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.backgroundColor
        VB: trtc.TRTCTranscodingConfig.backgroundColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: backgroundColor
        path: ''
        startLine: 1660
      summary: "\n**Description:** background color of the mixing result. The default color is black, and the value is a hex number. For example: `0x61B9F1` represents the RGB color (97,158,241).\n**Value:** default value: `0x000000` (black)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 backgroundColor
          VB: Public backgroundColor As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.backgroundImage
      commentId: F:trtc.TRTCTranscodingConfig.backgroundImage
      language: CSharp
      name:
        CSharp: backgroundImage
        VB: backgroundImage
      nameWithType:
        CSharp: TRTCTranscodingConfig.backgroundImage
        VB: TRTCTranscodingConfig.backgroundImage
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.backgroundImage
        VB: trtc.TRTCTranscodingConfig.backgroundImage
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: backgroundImage
        path: ''
        startLine: 1669
      summary: "\n**Description:** background image of the mixing result\n**Value:** default value: `null`, which means that no background images are set\n**Note:** you need to first upload the image in **Application Management** > **Function Configuration** > **Material Management** in the [console](https://console.cloud.tencent.com/trtc).\n       You will get an image ID for the image uploaded, which you need to convert to a string before using it as the value of `backgroundImage`. \n       For example, if the image ID is `63`, you should set `backgroundImage` to `63`. \n"
      example: []
      syntax:
        content:
          CSharp: public string backgroundImage
          VB: Public backgroundImage As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.audioSampleRate
      commentId: F:trtc.TRTCTranscodingConfig.audioSampleRate
      language: CSharp
      name:
        CSharp: audioSampleRate
        VB: audioSampleRate
      nameWithType:
        CSharp: TRTCTranscodingConfig.audioSampleRate
        VB: TRTCTranscodingConfig.audioSampleRate
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.audioSampleRate
        VB: trtc.TRTCTranscodingConfig.audioSampleRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: audioSampleRate
        path: ''
        startLine: 1675
      summary: "\n**Description:** sample rate (Hz) of transcoded audio\n**Value:** Valid values: `12000`, `16000`, `22050`, `24000`, `32000`, `44100`, `48000` (default)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 audioSampleRate
          VB: Public audioSampleRate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.audioBitrate
      commentId: F:trtc.TRTCTranscodingConfig.audioBitrate
      language: CSharp
      name:
        CSharp: audioBitrate
        VB: audioBitrate
      nameWithType:
        CSharp: TRTCTranscodingConfig.audioBitrate
        VB: TRTCTranscodingConfig.audioBitrate
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.audioBitrate
        VB: trtc.TRTCTranscodingConfig.audioBitrate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: audioBitrate
        path: ''
        startLine: 1681
      summary: "\n**Description:** bitrate (Kbps) of transcoded audio\n**Value:** default value: `64`. Value range: [32,192]\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 audioBitrate
          VB: Public audioBitrate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.audioChannels
      commentId: F:trtc.TRTCTranscodingConfig.audioChannels
      language: CSharp
      name:
        CSharp: audioChannels
        VB: audioChannels
      nameWithType:
        CSharp: TRTCTranscodingConfig.audioChannels
        VB: TRTCTranscodingConfig.audioChannels
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.audioChannels
        VB: trtc.TRTCTranscodingConfig.audioChannels
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: audioChannels
        path: ''
        startLine: 1687
      summary: "\n**Description:** number of sound channels of transcoded audio\n**Value:** Valid values: `1` (default), `2`\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 audioChannels
          VB: Public audioChannels As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.mixUsersArray
      commentId: F:trtc.TRTCTranscodingConfig.mixUsersArray
      language: CSharp
      name:
        CSharp: mixUsersArray
        VB: mixUsersArray
      nameWithType:
        CSharp: TRTCTranscodingConfig.mixUsersArray
        VB: TRTCTranscodingConfig.mixUsersArray
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.mixUsersArray
        VB: trtc.TRTCTranscodingConfig.mixUsersArray
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: mixUsersArray
        path: ''
        startLine: 1692
      summary: "\n**Description:** position of each image\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCMixUser[] mixUsersArray
          VB: Public mixUsersArray As TRTCMixUser()
        return:
          type: trtc.TRTCMixUser[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.mixUsersArraySize
      commentId: F:trtc.TRTCTranscodingConfig.mixUsersArraySize
      language: CSharp
      name:
        CSharp: mixUsersArraySize
        VB: mixUsersArraySize
      nameWithType:
        CSharp: TRTCTranscodingConfig.mixUsersArraySize
        VB: TRTCTranscodingConfig.mixUsersArraySize
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.mixUsersArraySize
        VB: trtc.TRTCTranscodingConfig.mixUsersArraySize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: mixUsersArraySize
        path: ''
        startLine: 1697
      summary: "\n**Description:** number of elements in `mixUsersArray`\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 mixUsersArraySize
          VB: Public mixUsersArraySize As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCTranscodingConfig.streamId
      commentId: F:trtc.TRTCTranscodingConfig.streamId
      language: CSharp
      name:
        CSharp: streamId
        VB: streamId
      nameWithType:
        CSharp: TRTCTranscodingConfig.streamId
        VB: TRTCTranscodingConfig.streamId
      qualifiedName:
        CSharp: trtc.TRTCTranscodingConfig.streamId
        VB: trtc.TRTCTranscodingConfig.streamId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: streamId
        path: ''
        startLine: 1705
      summary: "\n**Description:** ID of the live stream relayed to CDN\n    If you do not set this parameter, the SDK will execute the default logic, that is, it will mix multiple streams in the room into the video stream of the API caller, i.e., A + B => A.\n    If you set this parameter, the SDK will mix multiple streams in the room into a stream whose ID you specify, i.e., A + B => C.\n**Value:** default value: `null`, which indicates that multiple streams in the room are mixed into the video stream of the API caller\n"
      example: []
      syntax:
        content:
          CSharp: public string streamId
          VB: Public streamId As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCLocalStatistics
    commentId: T:trtc.TRTCLocalStatistics
    language: CSharp
    name:
      CSharp: TRTCLocalStatistics
      VB: TRTCLocalStatistics
    nameWithType:
      CSharp: TRTCLocalStatistics
      VB: TRTCLocalStatistics
    qualifiedName:
      CSharp: trtc.TRTCLocalStatistics
      VB: trtc.TRTCLocalStatistics
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCLocalStatistics
      path: ''
      startLine: 1713
    summary: "\nLocal audio/video statistics\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCLocalStatistics
        VB: Public Structure TRTCLocalStatistics
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCLocalStatistics.width
      commentId: F:trtc.TRTCLocalStatistics.width
      language: CSharp
      name:
        CSharp: width
        VB: width
      nameWithType:
        CSharp: TRTCLocalStatistics.width
        VB: TRTCLocalStatistics.width
      qualifiedName:
        CSharp: trtc.TRTCLocalStatistics.width
        VB: trtc.TRTCLocalStatistics.width
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: width
        path: ''
        startLine: 1719
      summary: "\nVideo width\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 width
          VB: Public width As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCLocalStatistics.height
      commentId: F:trtc.TRTCLocalStatistics.height
      language: CSharp
      name:
        CSharp: height
        VB: height
      nameWithType:
        CSharp: TRTCLocalStatistics.height
        VB: TRTCLocalStatistics.height
      qualifiedName:
        CSharp: trtc.TRTCLocalStatistics.height
        VB: trtc.TRTCLocalStatistics.height
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: height
        path: ''
        startLine: 1723
      summary: "\nVideo height\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 height
          VB: Public height As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCLocalStatistics.frameRate
      commentId: F:trtc.TRTCLocalStatistics.frameRate
      language: CSharp
      name:
        CSharp: frameRate
        VB: frameRate
      nameWithType:
        CSharp: TRTCLocalStatistics.frameRate
        VB: TRTCLocalStatistics.frameRate
      qualifiedName:
        CSharp: trtc.TRTCLocalStatistics.frameRate
        VB: trtc.TRTCLocalStatistics.frameRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: frameRate
        path: ''
        startLine: 1727
      summary: "\nFrame rate (fps)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 frameRate
          VB: Public frameRate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCLocalStatistics.videoBitrate
      commentId: F:trtc.TRTCLocalStatistics.videoBitrate
      language: CSharp
      name:
        CSharp: videoBitrate
        VB: videoBitrate
      nameWithType:
        CSharp: TRTCLocalStatistics.videoBitrate
        VB: TRTCLocalStatistics.videoBitrate
      qualifiedName:
        CSharp: trtc.TRTCLocalStatistics.videoBitrate
        VB: trtc.TRTCLocalStatistics.videoBitrate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: videoBitrate
        path: ''
        startLine: 1731
      summary: "\nVideo send bitrate (Kbps)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 videoBitrate
          VB: Public videoBitrate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCLocalStatistics.audioSampleRate
      commentId: F:trtc.TRTCLocalStatistics.audioSampleRate
      language: CSharp
      name:
        CSharp: audioSampleRate
        VB: audioSampleRate
      nameWithType:
        CSharp: TRTCLocalStatistics.audioSampleRate
        VB: TRTCLocalStatistics.audioSampleRate
      qualifiedName:
        CSharp: trtc.TRTCLocalStatistics.audioSampleRate
        VB: trtc.TRTCLocalStatistics.audioSampleRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: audioSampleRate
        path: ''
        startLine: 1735
      summary: "\nAudio sample rate (Hz)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 audioSampleRate
          VB: Public audioSampleRate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCLocalStatistics.audioBitrate
      commentId: F:trtc.TRTCLocalStatistics.audioBitrate
      language: CSharp
      name:
        CSharp: audioBitrate
        VB: audioBitrate
      nameWithType:
        CSharp: TRTCLocalStatistics.audioBitrate
        VB: TRTCLocalStatistics.audioBitrate
      qualifiedName:
        CSharp: trtc.TRTCLocalStatistics.audioBitrate
        VB: trtc.TRTCLocalStatistics.audioBitrate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: audioBitrate
        path: ''
        startLine: 1739
      summary: "\nAudio send bitrate (Kbps)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 audioBitrate
          VB: Public audioBitrate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCLocalStatistics.streamType
      commentId: F:trtc.TRTCLocalStatistics.streamType
      language: CSharp
      name:
        CSharp: streamType
        VB: streamType
      nameWithType:
        CSharp: TRTCLocalStatistics.streamType
        VB: TRTCLocalStatistics.streamType
      qualifiedName:
        CSharp: trtc.TRTCLocalStatistics.streamType
        VB: trtc.TRTCLocalStatistics.streamType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: streamType
        path: ''
        startLine: 1743
      summary: "\nStream type (big image | small image | substream image)\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCVideoStreamType streamType
          VB: Public streamType As TRTCVideoStreamType
        return:
          type: trtc.TRTCVideoStreamType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCRemoteStatistics
    commentId: T:trtc.TRTCRemoteStatistics
    language: CSharp
    name:
      CSharp: TRTCRemoteStatistics
      VB: TRTCRemoteStatistics
    nameWithType:
      CSharp: TRTCRemoteStatistics
      VB: TRTCRemoteStatistics
    qualifiedName:
      CSharp: trtc.TRTCRemoteStatistics
      VB: trtc.TRTCRemoteStatistics
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCRemoteStatistics
      path: ''
      startLine: 1749
    summary: "\nAudio/Video statistics of a remote user\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCRemoteStatistics
        VB: Public Structure TRTCRemoteStatistics
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCRemoteStatistics.userId
      commentId: F:trtc.TRTCRemoteStatistics.userId
      language: CSharp
      name:
        CSharp: userId
        VB: userId
      nameWithType:
        CSharp: TRTCRemoteStatistics.userId
        VB: TRTCRemoteStatistics.userId
      qualifiedName:
        CSharp: trtc.TRTCRemoteStatistics.userId
        VB: trtc.TRTCRemoteStatistics.userId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: userId
        path: ''
        startLine: 1755
      summary: "\nUser ID of the remote user\n"
      example: []
      syntax:
        content:
          CSharp: public String userId
          VB: Public userId As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCRemoteStatistics.finalLoss
      commentId: F:trtc.TRTCRemoteStatistics.finalLoss
      language: CSharp
      name:
        CSharp: finalLoss
        VB: finalLoss
      nameWithType:
        CSharp: TRTCRemoteStatistics.finalLoss
        VB: TRTCRemoteStatistics.finalLoss
      qualifiedName:
        CSharp: trtc.TRTCRemoteStatistics.finalLoss
        VB: trtc.TRTCRemoteStatistics.finalLoss
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: finalLoss
        path: ''
        startLine: 1763
      summary: "\nTotal packet loss rate (%)\n\n<p>The lower the value, the better. `0` indicates excellent network conditions.</p>\n<p>Total packet loss rate is the percentage of packets lost during upstream and downstream data transfer between the user and the server.</p>\n<p>If `downLoss` is `0` but `finalLoss` not `0`, it indicates unrecoverable packet loss during upstream data transfer.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 finalLoss
          VB: Public finalLoss As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCRemoteStatistics.width
      commentId: F:trtc.TRTCRemoteStatistics.width
      language: CSharp
      name:
        CSharp: width
        VB: width
      nameWithType:
        CSharp: TRTCRemoteStatistics.width
        VB: TRTCRemoteStatistics.width
      qualifiedName:
        CSharp: trtc.TRTCRemoteStatistics.width
        VB: trtc.TRTCRemoteStatistics.width
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: width
        path: ''
        startLine: 1767
      summary: "\nVideo width\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 width
          VB: Public width As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCRemoteStatistics.height
      commentId: F:trtc.TRTCRemoteStatistics.height
      language: CSharp
      name:
        CSharp: height
        VB: height
      nameWithType:
        CSharp: TRTCRemoteStatistics.height
        VB: TRTCRemoteStatistics.height
      qualifiedName:
        CSharp: trtc.TRTCRemoteStatistics.height
        VB: trtc.TRTCRemoteStatistics.height
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: height
        path: ''
        startLine: 1771
      summary: "\nVideo height\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 height
          VB: Public height As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCRemoteStatistics.frameRate
      commentId: F:trtc.TRTCRemoteStatistics.frameRate
      language: CSharp
      name:
        CSharp: frameRate
        VB: frameRate
      nameWithType:
        CSharp: TRTCRemoteStatistics.frameRate
        VB: TRTCRemoteStatistics.frameRate
      qualifiedName:
        CSharp: trtc.TRTCRemoteStatistics.frameRate
        VB: trtc.TRTCRemoteStatistics.frameRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: frameRate
        path: ''
        startLine: 1775
      summary: "\nReceive frame rate (fps)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 frameRate
          VB: Public frameRate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCRemoteStatistics.videoBitrate
      commentId: F:trtc.TRTCRemoteStatistics.videoBitrate
      language: CSharp
      name:
        CSharp: videoBitrate
        VB: videoBitrate
      nameWithType:
        CSharp: TRTCRemoteStatistics.videoBitrate
        VB: TRTCRemoteStatistics.videoBitrate
      qualifiedName:
        CSharp: trtc.TRTCRemoteStatistics.videoBitrate
        VB: trtc.TRTCRemoteStatistics.videoBitrate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: videoBitrate
        path: ''
        startLine: 1779
      summary: "\nVideo bitrate (Kbps)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 videoBitrate
          VB: Public videoBitrate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCRemoteStatistics.audioSampleRate
      commentId: F:trtc.TRTCRemoteStatistics.audioSampleRate
      language: CSharp
      name:
        CSharp: audioSampleRate
        VB: audioSampleRate
      nameWithType:
        CSharp: TRTCRemoteStatistics.audioSampleRate
        VB: TRTCRemoteStatistics.audioSampleRate
      qualifiedName:
        CSharp: trtc.TRTCRemoteStatistics.audioSampleRate
        VB: trtc.TRTCRemoteStatistics.audioSampleRate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: audioSampleRate
        path: ''
        startLine: 1783
      summary: "\nAudio sample rate (Hz)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 audioSampleRate
          VB: Public audioSampleRate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCRemoteStatistics.audioBitrate
      commentId: F:trtc.TRTCRemoteStatistics.audioBitrate
      language: CSharp
      name:
        CSharp: audioBitrate
        VB: audioBitrate
      nameWithType:
        CSharp: TRTCRemoteStatistics.audioBitrate
        VB: TRTCRemoteStatistics.audioBitrate
      qualifiedName:
        CSharp: trtc.TRTCRemoteStatistics.audioBitrate
        VB: trtc.TRTCRemoteStatistics.audioBitrate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: audioBitrate
        path: ''
        startLine: 1787
      summary: "\nAudio bitrate (Kbps)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 audioBitrate
          VB: Public audioBitrate As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCRemoteStatistics.jitterBufferDelay
      commentId: F:trtc.TRTCRemoteStatistics.jitterBufferDelay
      language: CSharp
      name:
        CSharp: jitterBufferDelay
        VB: jitterBufferDelay
      nameWithType:
        CSharp: TRTCRemoteStatistics.jitterBufferDelay
        VB: TRTCRemoteStatistics.jitterBufferDelay
      qualifiedName:
        CSharp: trtc.TRTCRemoteStatistics.jitterBufferDelay
        VB: trtc.TRTCRemoteStatistics.jitterBufferDelay
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: jitterBufferDelay
        path: ''
        startLine: 1791
      summary: "\nPlayback latency (ms)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 jitterBufferDelay
          VB: Public jitterBufferDelay As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCRemoteStatistics.streamType
      commentId: F:trtc.TRTCRemoteStatistics.streamType
      language: CSharp
      name:
        CSharp: streamType
        VB: streamType
      nameWithType:
        CSharp: TRTCRemoteStatistics.streamType
        VB: TRTCRemoteStatistics.streamType
      qualifiedName:
        CSharp: trtc.TRTCRemoteStatistics.streamType
        VB: trtc.TRTCRemoteStatistics.streamType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: streamType
        path: ''
        startLine: 1795
      summary: "\nStream type (big image | small image | substream image)\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCVideoStreamType streamType
          VB: Public streamType As TRTCVideoStreamType
        return:
          type: trtc.TRTCVideoStreamType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCStatistics
    commentId: T:trtc.TRTCStatistics
    language: CSharp
    name:
      CSharp: TRTCStatistics
      VB: TRTCStatistics
    nameWithType:
      CSharp: TRTCStatistics
      VB: TRTCStatistics
    qualifiedName:
      CSharp: trtc.TRTCStatistics
      VB: trtc.TRTCStatistics
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCStatistics
      path: ''
      startLine: 1801
    summary: "\nStatistics\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCStatistics
        VB: Public Structure TRTCStatistics
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCStatistics.upLoss
      commentId: F:trtc.TRTCStatistics.upLoss
      language: CSharp
      name:
        CSharp: upLoss
        VB: upLoss
      nameWithType:
        CSharp: TRTCStatistics.upLoss
        VB: TRTCStatistics.upLoss
      qualifiedName:
        CSharp: trtc.TRTCStatistics.upLoss
        VB: trtc.TRTCStatistics.upLoss
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: upLoss
        path: ''
        startLine: 1810
      summary: "\nUpstream (client-to-sever) packet loss rate (%)\n<p>\nThe lower the value, the better. `0` indicates excellent network conditions.\nIf the value is `30`, it indicates that 30% of data packets are lost during upstream data transfer.\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 upLoss
          VB: Public upLoss As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCStatistics.downLoss
      commentId: F:trtc.TRTCStatistics.downLoss
      language: CSharp
      name:
        CSharp: downLoss
        VB: downLoss
      nameWithType:
        CSharp: TRTCStatistics.downLoss
        VB: TRTCStatistics.downLoss
      qualifiedName:
        CSharp: trtc.TRTCStatistics.downLoss
        VB: trtc.TRTCStatistics.downLoss
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: downLoss
        path: ''
        startLine: 1816
      summary: "\nDownstream (server-to-client) packet loss rate\nThe lower the value, the better. `0` indicates excellent network conditions.\nIf the value is `30`, it indicates that 30% of data packets are lost during downstream data transfer.\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 downLoss
          VB: Public downLoss As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCStatistics.appCpu
      commentId: F:trtc.TRTCStatistics.appCpu
      language: CSharp
      name:
        CSharp: appCpu
        VB: appCpu
      nameWithType:
        CSharp: TRTCStatistics.appCpu
        VB: TRTCStatistics.appCpu
      qualifiedName:
        CSharp: trtc.TRTCStatistics.appCpu
        VB: trtc.TRTCStatistics.appCpu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: appCpu
        path: ''
        startLine: 1820
      summary: "\nCPU usage (%) of the current application\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 appCpu
          VB: Public appCpu As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCStatistics.systemCpu
      commentId: F:trtc.TRTCStatistics.systemCpu
      language: CSharp
      name:
        CSharp: systemCpu
        VB: systemCpu
      nameWithType:
        CSharp: TRTCStatistics.systemCpu
        VB: TRTCStatistics.systemCpu
      qualifiedName:
        CSharp: trtc.TRTCStatistics.systemCpu
        VB: trtc.TRTCStatistics.systemCpu
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: systemCpu
        path: ''
        startLine: 1824
      summary: "\nCPU usage (%) of the system\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 systemCpu
          VB: Public systemCpu As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCStatistics.rtt
      commentId: F:trtc.TRTCStatistics.rtt
      language: CSharp
      name:
        CSharp: rtt
        VB: rtt
      nameWithType:
        CSharp: TRTCStatistics.rtt
        VB: TRTCStatistics.rtt
      qualifiedName:
        CSharp: trtc.TRTCStatistics.rtt
        VB: trtc.TRTCStatistics.rtt
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: rtt
        path: ''
        startLine: 1830
      summary: "\nRTT (ms), which is the time it takes for data to travel from the SDK to the Tencent Cloud server and back again. The lower the value, the better.\n<p>Generally, an RTT shorter than 50 ms is acceptable. RTT longer than 100 ms means significant call latency.</p>\n<p>As upstream and downstream data transfer use the same network link, RTT is the same for the local user and remote users.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 rtt
          VB: Public rtt As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCStatistics.receivedBytes
      commentId: F:trtc.TRTCStatistics.receivedBytes
      language: CSharp
      name:
        CSharp: receivedBytes
        VB: receivedBytes
      nameWithType:
        CSharp: TRTCStatistics.receivedBytes
        VB: TRTCStatistics.receivedBytes
      qualifiedName:
        CSharp: trtc.TRTCStatistics.receivedBytes
        VB: trtc.TRTCStatistics.receivedBytes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: receivedBytes
        path: ''
        startLine: 1834
      summary: "\nTotal number of bytes received (including signaling and audio/video data)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 receivedBytes
          VB: Public receivedBytes As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCStatistics.sentBytes
      commentId: F:trtc.TRTCStatistics.sentBytes
      language: CSharp
      name:
        CSharp: sentBytes
        VB: sentBytes
      nameWithType:
        CSharp: TRTCStatistics.sentBytes
        VB: TRTCStatistics.sentBytes
      qualifiedName:
        CSharp: trtc.TRTCStatistics.sentBytes
        VB: trtc.TRTCStatistics.sentBytes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: sentBytes
        path: ''
        startLine: 1838
      summary: "\nTotal number of bytes sent (including signaling and audio/video data)\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 sentBytes
          VB: Public sentBytes As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCStatistics.localStatisticsArray
      commentId: F:trtc.TRTCStatistics.localStatisticsArray
      language: CSharp
      name:
        CSharp: localStatisticsArray
        VB: localStatisticsArray
      nameWithType:
        CSharp: TRTCStatistics.localStatisticsArray
        VB: TRTCStatistics.localStatisticsArray
      qualifiedName:
        CSharp: trtc.TRTCStatistics.localStatisticsArray
        VB: trtc.TRTCStatistics.localStatisticsArray
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: localStatisticsArray
        path: ''
        startLine: 1842
      summary: "\nLocal audio/video statistics. This parameter is an array that may contain statistics of multiple streams, including the big image, small image, and substream image.\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCLocalStatistics[] localStatisticsArray
          VB: Public localStatisticsArray As TRTCLocalStatistics()
        return:
          type: trtc.TRTCLocalStatistics[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCStatistics.localStatisticsArraySize
      commentId: F:trtc.TRTCStatistics.localStatisticsArraySize
      language: CSharp
      name:
        CSharp: localStatisticsArraySize
        VB: localStatisticsArraySize
      nameWithType:
        CSharp: TRTCStatistics.localStatisticsArraySize
        VB: TRTCStatistics.localStatisticsArraySize
      qualifiedName:
        CSharp: trtc.TRTCStatistics.localStatisticsArraySize
        VB: trtc.TRTCStatistics.localStatisticsArraySize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: localStatisticsArraySize
        path: ''
        startLine: 1846
      summary: "\nNumber of elements in `localStatisticsArray`\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 localStatisticsArraySize
          VB: Public localStatisticsArraySize As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCStatistics.remoteStatisticsArray
      commentId: F:trtc.TRTCStatistics.remoteStatisticsArray
      language: CSharp
      name:
        CSharp: remoteStatisticsArray
        VB: remoteStatisticsArray
      nameWithType:
        CSharp: TRTCStatistics.remoteStatisticsArray
        VB: TRTCStatistics.remoteStatisticsArray
      qualifiedName:
        CSharp: trtc.TRTCStatistics.remoteStatisticsArray
        VB: trtc.TRTCStatistics.remoteStatisticsArray
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: remoteStatisticsArray
        path: ''
        startLine: 1850
      summary: "\nRemote audio/video statistics. This parameter is an array that may contain statistics of multiple streams, including the big image, small image, and substream image.\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCRemoteStatistics[] remoteStatisticsArray
          VB: Public remoteStatisticsArray As TRTCRemoteStatistics()
        return:
          type: trtc.TRTCRemoteStatistics[]
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCStatistics.remoteStatisticsArraySize
      commentId: F:trtc.TRTCStatistics.remoteStatisticsArraySize
      language: CSharp
      name:
        CSharp: remoteStatisticsArraySize
        VB: remoteStatisticsArraySize
      nameWithType:
        CSharp: TRTCStatistics.remoteStatisticsArraySize
        VB: TRTCStatistics.remoteStatisticsArraySize
      qualifiedName:
        CSharp: trtc.TRTCStatistics.remoteStatisticsArraySize
        VB: trtc.TRTCStatistics.remoteStatisticsArraySize
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: remoteStatisticsArraySize
        path: ''
        startLine: 1854
      summary: "\nNumber of elements in `remoteStatisticsArray`\n"
      example: []
      syntax:
        content:
          CSharp: public UInt32 remoteStatisticsArraySize
          VB: Public remoteStatisticsArraySize As UInt32
        return:
          type: UInt32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCScreenCaptureSourceType
    commentId: T:trtc.TRTCScreenCaptureSourceType
    language: CSharp
    name:
      CSharp: TRTCScreenCaptureSourceType
      VB: TRTCScreenCaptureSourceType
    nameWithType:
      CSharp: TRTCScreenCaptureSourceType
      VB: TRTCScreenCaptureSourceType
    qualifiedName:
      CSharp: trtc.TRTCScreenCaptureSourceType
      VB: trtc.TRTCScreenCaptureSourceType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCScreenCaptureSourceType
      path: ''
      startLine: 1862
    summary: "\nType of the screen sharing source\n\n<p>You can call `getScreenCaptureSources()` to enumerate the shareable sources.</p>\n"
    example: []
    syntax:
      content:
        CSharp: public enum TRTCScreenCaptureSourceType
        VB: Public Enum TRTCScreenCaptureSourceType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: trtc.TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeUnknown
      commentId: F:trtc.TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeUnknown
      language: CSharp
      name:
        CSharp: TRTCScreenCaptureSourceTypeUnknown
        VB: TRTCScreenCaptureSourceTypeUnknown
      nameWithType:
        CSharp: TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeUnknown
        VB: TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeUnknown
      qualifiedName:
        CSharp: trtc.TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeUnknown
        VB: trtc.TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeUnknown
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCScreenCaptureSourceTypeUnknown
        path: ''
        startLine: 1864
      syntax:
        content:
          CSharp: TRTCScreenCaptureSourceTypeUnknown = -1
          VB: TRTCScreenCaptureSourceTypeUnknown = -1
        return:
          type: trtc.TRTCScreenCaptureSourceType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: trtc.TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeScreen
      commentId: F:trtc.TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeScreen
      language: CSharp
      name:
        CSharp: TRTCScreenCaptureSourceTypeScreen
        VB: TRTCScreenCaptureSourceTypeScreen
      nameWithType:
        CSharp: TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeScreen
        VB: TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeScreen
      qualifiedName:
        CSharp: trtc.TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeScreen
        VB: trtc.TRTCScreenCaptureSourceType.TRTCScreenCaptureSourceTypeScreen
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: TRTCScreenCaptureSourceTypeScreen
        path: ''
        startLine: 1868
      summary: "\nThe entire desktop (on Windows) is shared.\n"
      example: []
      syntax:
        content:
          CSharp: TRTCScreenCaptureSourceTypeScreen = 1
          VB: TRTCScreenCaptureSourceTypeScreen = 1
        return:
          type: trtc.TRTCScreenCaptureSourceType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: trtc.TRTCScreenCaptureSourceInfo
    commentId: T:trtc.TRTCScreenCaptureSourceInfo
    language: CSharp
    name:
      CSharp: TRTCScreenCaptureSourceInfo
      VB: TRTCScreenCaptureSourceInfo
    nameWithType:
      CSharp: TRTCScreenCaptureSourceInfo
      VB: TRTCScreenCaptureSourceInfo
    qualifiedName:
      CSharp: trtc.TRTCScreenCaptureSourceInfo
      VB: trtc.TRTCScreenCaptureSourceInfo
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCScreenCaptureSourceInfo
      path: ''
      startLine: 1874
    summary: "\nScreen sharing information\n"
    example: []
    syntax:
      content:
        CSharp: public struct TRTCScreenCaptureSourceInfo
        VB: Public Structure TRTCScreenCaptureSourceInfo
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetType
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items:
    - id: trtc.TRTCScreenCaptureSourceInfo.type
      commentId: F:trtc.TRTCScreenCaptureSourceInfo.type
      language: CSharp
      name:
        CSharp: type
        VB: type
      nameWithType:
        CSharp: TRTCScreenCaptureSourceInfo.type
        VB: TRTCScreenCaptureSourceInfo.type
      qualifiedName:
        CSharp: trtc.TRTCScreenCaptureSourceInfo.type
        VB: trtc.TRTCScreenCaptureSourceInfo.type
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: type
        path: ''
        startLine: 1879
      summary: "\nType of the screen sharing source. Unity supports only the sharing of screens currently.\n"
      example: []
      syntax:
        content:
          CSharp: public TRTCScreenCaptureSourceType type
          VB: Public type As TRTCScreenCaptureSourceType
        return:
          type: trtc.TRTCScreenCaptureSourceType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCScreenCaptureSourceInfo.sourceId
      commentId: F:trtc.TRTCScreenCaptureSourceInfo.sourceId
      language: CSharp
      name:
        CSharp: sourceId
        VB: sourceId
      nameWithType:
        CSharp: TRTCScreenCaptureSourceInfo.sourceId
        VB: TRTCScreenCaptureSourceInfo.sourceId
      qualifiedName:
        CSharp: trtc.TRTCScreenCaptureSourceInfo.sourceId
        VB: trtc.TRTCScreenCaptureSourceInfo.sourceId
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: sourceId
        path: ''
        startLine: 1883
      summary: "\nScreen sharing source ID. If a screen is shared, this parameter is the ID of the shared screen.\n"
      example: []
      syntax:
        content:
          CSharp: public IntPtr sourceId
          VB: Public sourceId As IntPtr
        return:
          type: IntPtr
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCScreenCaptureSourceInfo.sourceName
      commentId: F:trtc.TRTCScreenCaptureSourceInfo.sourceName
      language: CSharp
      name:
        CSharp: sourceName
        VB: sourceName
      nameWithType:
        CSharp: TRTCScreenCaptureSourceInfo.sourceName
        VB: TRTCScreenCaptureSourceInfo.sourceName
      qualifiedName:
        CSharp: trtc.TRTCScreenCaptureSourceInfo.sourceName
        VB: trtc.TRTCScreenCaptureSourceInfo.sourceName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: sourceName
        path: ''
        startLine: 1887
      summary: "\nUTF-8-encoded name of the screen sharing source\n"
      example: []
      syntax:
        content:
          CSharp: public String sourceName
          VB: Public sourceName As String
        return:
          type: String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCScreenCaptureSourceInfo.isMainScreen
      commentId: F:trtc.TRTCScreenCaptureSourceInfo.isMainScreen
      language: CSharp
      name:
        CSharp: isMainScreen
        VB: isMainScreen
      nameWithType:
        CSharp: TRTCScreenCaptureSourceInfo.isMainScreen
        VB: TRTCScreenCaptureSourceInfo.isMainScreen
      qualifiedName:
        CSharp: trtc.TRTCScreenCaptureSourceInfo.isMainScreen
        VB: trtc.TRTCScreenCaptureSourceInfo.isMainScreen
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: isMainScreen
        path: ''
        startLine: 1891
      summary: "\nWhether the main screen is shared. This parameter is available only if the type of the screen sharing source is screen (`TRTCScreenCaptureSourceTypeScreen`).\n"
      example: []
      syntax:
        content:
          CSharp: public bool isMainScreen
          VB: Public isMainScreen As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.TRTCScreenCaptureProperty
    commentId: T:trtc.TRTCScreenCaptureProperty
    language: CSharp
    name:
      CSharp: TRTCScreenCaptureProperty
      VB: TRTCScreenCaptureProperty
    nameWithType:
      CSharp: TRTCScreenCaptureProperty
      VB: TRTCScreenCaptureProperty
    qualifiedName:
      CSharp: trtc.TRTCScreenCaptureProperty
      VB: trtc.TRTCScreenCaptureProperty
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: TRTCScreenCaptureProperty
      path: ''
      startLine: 1897
    summary: "\nScreen sharing properties\n"
    example: []
    syntax:
      content:
        CSharp: public class TRTCScreenCaptureProperty
        VB: Public Class TRTCScreenCaptureProperty
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: trtc.TRTCScreenCaptureProperty.enableCaptureMouse
      commentId: F:trtc.TRTCScreenCaptureProperty.enableCaptureMouse
      language: CSharp
      name:
        CSharp: enableCaptureMouse
        VB: enableCaptureMouse
      nameWithType:
        CSharp: TRTCScreenCaptureProperty.enableCaptureMouse
        VB: TRTCScreenCaptureProperty.enableCaptureMouse
      qualifiedName:
        CSharp: trtc.TRTCScreenCaptureProperty.enableCaptureMouse
        VB: trtc.TRTCScreenCaptureProperty.enableCaptureMouse
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: enableCaptureMouse
        path: ''
        startLine: 1902
      summary: "\nWhether to include the mouse cursor in the shared content. Default value: `true`\n"
      example: []
      syntax:
        content:
          CSharp: public bool enableCaptureMouse
          VB: Public enableCaptureMouse As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCScreenCaptureProperty.enableHighLight
      commentId: F:trtc.TRTCScreenCaptureProperty.enableHighLight
      language: CSharp
      name:
        CSharp: enableHighLight
        VB: enableHighLight
      nameWithType:
        CSharp: TRTCScreenCaptureProperty.enableHighLight
        VB: TRTCScreenCaptureProperty.enableHighLight
      qualifiedName:
        CSharp: trtc.TRTCScreenCaptureProperty.enableHighLight
        VB: trtc.TRTCScreenCaptureProperty.enableHighLight
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: enableHighLight
        path: ''
        startLine: 1906
      summary: "\nWhether to show a bright border around the shared content. Default value: `true`\n"
      example: []
      syntax:
        content:
          CSharp: public bool enableHighLight
          VB: Public enableHighLight As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCScreenCaptureProperty.enableHighPerformance
      commentId: F:trtc.TRTCScreenCaptureProperty.enableHighPerformance
      language: CSharp
      name:
        CSharp: enableHighPerformance
        VB: enableHighPerformance
      nameWithType:
        CSharp: TRTCScreenCaptureProperty.enableHighPerformance
        VB: TRTCScreenCaptureProperty.enableHighPerformance
      qualifiedName:
        CSharp: trtc.TRTCScreenCaptureProperty.enableHighPerformance
        VB: trtc.TRTCScreenCaptureProperty.enableHighPerformance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: enableHighPerformance
        path: ''
        startLine: 1910
      syntax:
        content:
          CSharp: public bool enableHighPerformance
          VB: Public enableHighPerformance As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCScreenCaptureProperty.highLightColor
      commentId: F:trtc.TRTCScreenCaptureProperty.highLightColor
      language: CSharp
      name:
        CSharp: highLightColor
        VB: highLightColor
      nameWithType:
        CSharp: TRTCScreenCaptureProperty.highLightColor
        VB: TRTCScreenCaptureProperty.highLightColor
      qualifiedName:
        CSharp: trtc.TRTCScreenCaptureProperty.highLightColor
        VB: trtc.TRTCScreenCaptureProperty.highLightColor
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: highLightColor
        path: ''
        startLine: 1914
      summary: "\nColor of the bright border in RGB format. If `0` is passed in, the default color (#8CBF26) will be used.\n"
      example: []
      syntax:
        content:
          CSharp: public int highLightColor
          VB: Public highLightColor As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: trtc.TRTCScreenCaptureProperty.highLightWidth
      commentId: F:trtc.TRTCScreenCaptureProperty.highLightWidth
      language: CSharp
      name:
        CSharp: highLightWidth
        VB: highLightWidth
      nameWithType:
        CSharp: TRTCScreenCaptureProperty.highLightWidth
        VB: TRTCScreenCaptureProperty.highLightWidth
      qualifiedName:
        CSharp: trtc.TRTCScreenCaptureProperty.highLightWidth
        VB: trtc.TRTCScreenCaptureProperty.highLightWidth
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: highLightWidth
        path: ''
        startLine: 1918
      summary: "\nWidth of the bright border. If `0` is passed in, the default width (5) will be used. The maximum allowed value is `50`.\n"
      example: []
      syntax:
        content:
          CSharp: public int highLightWidth
          VB: Public highLightWidth As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: trtc.ITRTCCloudCallback
    commentId: T:trtc.ITRTCCloudCallback
    language: CSharp
    name:
      CSharp: ITRTCCloudCallback
      VB: ITRTCCloudCallback
    nameWithType:
      CSharp: ITRTCCloudCallback
      VB: ITRTCCloudCallback
    qualifiedName:
      CSharp: trtc.ITRTCCloudCallback
      VB: trtc.ITRTCCloudCallback
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: ITRTCCloudCallback
      path: ''
      startLine: 1930
    summary: "\nTRTC callback API class\n"
    example: []
    syntax:
      content:
        CSharp: public interface ITRTCCloudCallback
        VB: Public Interface ITRTCCloudCallback
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: trtc.ITRTCCloudCallback.onError(trtc.TXLiteAVError,String,IntPtr)
      commentId: M:trtc.ITRTCCloudCallback.onError(trtc.TXLiteAVError,String,IntPtr)
      language: CSharp
      name:
        CSharp: onError(TXLiteAVError, String, IntPtr)
        VB: onError(TXLiteAVError, String, IntPtr)
      nameWithType:
        CSharp: ITRTCCloudCallback.onError(TXLiteAVError, String, IntPtr)
        VB: ITRTCCloudCallback.onError(TXLiteAVError, String, IntPtr)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onError(trtc.TXLiteAVError, String, IntPtr)
        VB: trtc.ITRTCCloudCallback.onError(trtc.TXLiteAVError, String, IntPtr)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onError
        path: ''
        startLine: 1946
      summary: "\n1.1 Callback for error. This callback indicates that the SDK encountered an unrecoverable error. Such errors must be listened for, and UI reminders should be sent to users if necessary.\n"
      example: []
      syntax:
        content:
          CSharp: void onError(TXLiteAVError errCode, String errMsg, IntPtr arg)
          VB: Sub onError(errCode As TXLiteAVError, errMsg As String, arg As IntPtr)
        parameters:
        - id: errCode
          type: trtc.TXLiteAVError
          description: Error code
        - id: errMsg
          type: String
          description: Error message
        - id: arg
          type: IntPtr
          description: Extended field. Certain error codes may carry extra information for troubleshooting.
      overload: trtc.ITRTCCloudCallback.onError*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onWarning(trtc.TXLiteAVWarning,String,IntPtr)
      commentId: M:trtc.ITRTCCloudCallback.onWarning(trtc.TXLiteAVWarning,String,IntPtr)
      language: CSharp
      name:
        CSharp: onWarning(TXLiteAVWarning, String, IntPtr)
        VB: onWarning(TXLiteAVWarning, String, IntPtr)
      nameWithType:
        CSharp: ITRTCCloudCallback.onWarning(TXLiteAVWarning, String, IntPtr)
        VB: ITRTCCloudCallback.onWarning(TXLiteAVWarning, String, IntPtr)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onWarning(trtc.TXLiteAVWarning, String, IntPtr)
        VB: trtc.ITRTCCloudCallback.onWarning(trtc.TXLiteAVWarning, String, IntPtr)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onWarning
        path: ''
        startLine: 1954
      summary: "\n1.2 Callback for warning. This callback alerts you to non-serious problems such as stutter or recoverable decoding failure.\n"
      example: []
      syntax:
        content:
          CSharp: void onWarning(TXLiteAVWarning warningCode, String warningMsg, IntPtr arg)
          VB: Sub onWarning(warningCode As TXLiteAVWarning, warningMsg As String, arg As IntPtr)
        parameters:
        - id: warningCode
          type: trtc.TXLiteAVWarning
          description: Warning code
        - id: warningMsg
          type: String
          description: Warning message
        - id: arg
          type: IntPtr
          description: Extended field. Certain warning codes may carry extra information for troubleshooting.
      overload: trtc.ITRTCCloudCallback.onWarning*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onEnterRoom(System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onEnterRoom(System.Int32)
      language: CSharp
      name:
        CSharp: onEnterRoom(Int32)
        VB: onEnterRoom(Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onEnterRoom(Int32)
        VB: ITRTCCloudCallback.onEnterRoom(Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onEnterRoom(System.Int32)
        VB: trtc.ITRTCCloudCallback.onEnterRoom(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onEnterRoom
        path: ''
        startLine: 1978
      summary: "\n2.1 Callback for room entry\n\n<p>After calling the `enterRoom()` API in `TRTCCloud` to enter a room, you will receive the `onEnterRoom(result)` callback from the SDK.</p>\n<p>- If room entry succeeds, `result` will be a positive integer (`result` > 0), which indicates the time (ms) it takes to enter the room.</p>\n<p>- If room entry fails, `result` will be a negative integer (`result` &lt; 0), which represents the error code.</p>\n<p>For more information on room entry error codes, please see [Error Codes](https://cloud.tencent.com/document/product/647/32257).</p>\n"
      remarks: "\nIn TRTC earlier than v6.6, the `onEnterRoom(result)` callback is returned only if room entry succeeds, and the `onError()` callback is returned if room entry fails.\n<p>In TRTC v6.6 and above, `onEnterRoom(result)` is returned for both successful and failed room entry, but `result` is a positive integer if room entry succeeds and a negative integer if it fails. The `onError()` callback is also returned if room entry fails.</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onEnterRoom(int result)
          VB: Sub onEnterRoom(result As Integer)
        parameters:
        - id: result
          type: System.Int32
          description: If `result` is greater than 0, it indicates the time (ms) it takes to enter the room; if `result` is less than 0, it represents the error code.
      overload: trtc.ITRTCCloudCallback.onEnterRoom*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onExitRoom(System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onExitRoom(System.Int32)
      language: CSharp
      name:
        CSharp: onExitRoom(Int32)
        VB: onExitRoom(Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onExitRoom(Int32)
        VB: ITRTCCloudCallback.onExitRoom(Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onExitRoom(System.Int32)
        VB: trtc.ITRTCCloudCallback.onExitRoom(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onExitRoom
        path: ''
        startLine: 1992
      summary: "\n2.2 Callback for leaving room\n<p>\nCalling the `exitRoom()` API in `TRTCCloud` will trigger the execution of room exit-related logic, such as releasing resources of audio/video devices and codecs.\nWhen all the resources are released, the SDK will notify you via the `onExitRoom()` callback.\n</p>\n<p>\nIf you need to call `enterRoom()` again or switch to another audio/video SDK, please wait until you receive the `onExitRoom()` callback.\nOtherwise, you may encounter problems such as the camera or mic being occupied.\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onExitRoom(int reason)
          VB: Sub onExitRoom(reason As Integer)
        parameters:
        - id: reason
          type: System.Int32
          description: 'Reason for leaving a room. `0`: the user called `exitRoom` to leave the room; `1`: the user was removed from the room by the server; `2`: the room was closed'
      overload: trtc.ITRTCCloudCallback.onExitRoom*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onSwitchRole(trtc.TXLiteAVError,String)
      commentId: M:trtc.ITRTCCloudCallback.onSwitchRole(trtc.TXLiteAVError,String)
      language: CSharp
      name:
        CSharp: onSwitchRole(TXLiteAVError, String)
        VB: onSwitchRole(TXLiteAVError, String)
      nameWithType:
        CSharp: ITRTCCloudCallback.onSwitchRole(TXLiteAVError, String)
        VB: ITRTCCloudCallback.onSwitchRole(TXLiteAVError, String)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onSwitchRole(trtc.TXLiteAVError, String)
        VB: trtc.ITRTCCloudCallback.onSwitchRole(trtc.TXLiteAVError, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onSwitchRole
        path: ''
        startLine: 2003
      summary: "\n2.3 Callback for switching roles\n<p>\nYou can call the `switchRole()` API in `TRTCCloud` to switch between “anchor” and “audience”. This is accompanied by a line switching process.\nAfter the switch, the SDK will return the `onSwitchRole()` callback.\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onSwitchRole(TXLiteAVError errCode, String errMsg)
          VB: Sub onSwitchRole(errCode As TXLiteAVError, errMsg As String)
        parameters:
        - id: errCode
          type: trtc.TXLiteAVError
          description: Error code. `ERR_NULL` indicates a successful switch. For other codes, please see [Error Codes](https://cloud.tencent.com/document/product/647/32257).
        - id: errMsg
          type: String
          description: Error message
      overload: trtc.ITRTCCloudCallback.onSwitchRole*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onConnectOtherRoom(System.String,trtc.TXLiteAVError,System.String)
      commentId: M:trtc.ITRTCCloudCallback.onConnectOtherRoom(System.String,trtc.TXLiteAVError,System.String)
      language: CSharp
      name:
        CSharp: onConnectOtherRoom(String, TXLiteAVError, String)
        VB: onConnectOtherRoom(String, TXLiteAVError, String)
      nameWithType:
        CSharp: ITRTCCloudCallback.onConnectOtherRoom(String, TXLiteAVError, String)
        VB: ITRTCCloudCallback.onConnectOtherRoom(String, TXLiteAVError, String)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onConnectOtherRoom(System.String, trtc.TXLiteAVError, System.String)
        VB: trtc.ITRTCCloudCallback.onConnectOtherRoom(System.String, trtc.TXLiteAVError, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onConnectOtherRoom
        path: ''
        startLine: 2016
      summary: "\n2.4 Callback for requesting a cross-room call (anchor competition)\n<p>\nYou can call the `connectOtherRoom()` API in `TRTCCloud` to call the anchor of another room. This is the “anchor competition” feature.\nThe caller will receive the `onConnectOtherRoom()` callback, which can be used to determine whether the cross-room call is successful.\nIf it is successful, all users in both rooms will receive the `onUserVideoAvailable()` callback.\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onConnectOtherRoom(string userId, TXLiteAVError errCode, string errMsg)
          VB: Sub onConnectOtherRoom(userId As String, errCode As TXLiteAVError, errMsg As String)
        parameters:
        - id: userId
          type: System.String
          description: '`userId` of the anchor to call'
        - id: errCode
          type: trtc.TXLiteAVError
          description: Error code. `ERR_NULL` indicates the cross-room call is successful. For other codes, please see [Error Codes](https://cloud.tencent.com/document/product/647/32257).
        - id: errMsg
          type: System.String
          description: Error message
      overload: trtc.ITRTCCloudCallback.onConnectOtherRoom*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onDisconnectOtherRoom(trtc.TXLiteAVError,System.String)
      commentId: M:trtc.ITRTCCloudCallback.onDisconnectOtherRoom(trtc.TXLiteAVError,System.String)
      language: CSharp
      name:
        CSharp: onDisconnectOtherRoom(TXLiteAVError, String)
        VB: onDisconnectOtherRoom(TXLiteAVError, String)
      nameWithType:
        CSharp: ITRTCCloudCallback.onDisconnectOtherRoom(TXLiteAVError, String)
        VB: ITRTCCloudCallback.onDisconnectOtherRoom(TXLiteAVError, String)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onDisconnectOtherRoom(trtc.TXLiteAVError, System.String)
        VB: trtc.ITRTCCloudCallback.onDisconnectOtherRoom(trtc.TXLiteAVError, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onDisconnectOtherRoom
        path: ''
        startLine: 2023
      summary: "\n2.5 Callback for ending a cross-room call (anchor competition)\n"
      example: []
      syntax:
        content:
          CSharp: void onDisconnectOtherRoom(TXLiteAVError errCode, string errMsg)
          VB: Sub onDisconnectOtherRoom(errCode As TXLiteAVError, errMsg As String)
        parameters:
        - id: errCode
          type: trtc.TXLiteAVError
          description: Error code. `ERR_NULL` indicates the cross-room call is ended successfully. For other codes, please see [Error Codes](https://cloud.tencent.com/document/product/647/32257).
        - id: errMsg
          type: System.String
          description: Error message
      overload: trtc.ITRTCCloudCallback.onDisconnectOtherRoom*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onSwitchRoom(trtc.TXLiteAVError,System.String)
      commentId: M:trtc.ITRTCCloudCallback.onSwitchRoom(trtc.TXLiteAVError,System.String)
      language: CSharp
      name:
        CSharp: onSwitchRoom(TXLiteAVError, String)
        VB: onSwitchRoom(TXLiteAVError, String)
      nameWithType:
        CSharp: ITRTCCloudCallback.onSwitchRoom(TXLiteAVError, String)
        VB: ITRTCCloudCallback.onSwitchRoom(TXLiteAVError, String)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onSwitchRoom(trtc.TXLiteAVError, System.String)
        VB: trtc.ITRTCCloudCallback.onSwitchRoom(trtc.TXLiteAVError, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onSwitchRoom
        path: ''
        startLine: 2030
      summary: "\n2.6 Callback for switching rooms (`switchRoom`)\n"
      example: []
      syntax:
        content:
          CSharp: void onSwitchRoom(TXLiteAVError errCode, string errMsg)
          VB: Sub onSwitchRoom(errCode As TXLiteAVError, errMsg As String)
        parameters:
        - id: errCode
          type: trtc.TXLiteAVError
          description: Error code. `ERR_NULL` indicates a successful switch. For other codes, please see [Error Codes](https://cloud.tencent.com/document/product/647/32257).
        - id: errMsg
          type: System.String
          description: Error message
      overload: trtc.ITRTCCloudCallback.onSwitchRoom*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onRemoteUserEnterRoom(String)
      commentId: M:trtc.ITRTCCloudCallback.onRemoteUserEnterRoom(String)
      language: CSharp
      name:
        CSharp: onRemoteUserEnterRoom(String)
        VB: onRemoteUserEnterRoom(String)
      nameWithType:
        CSharp: ITRTCCloudCallback.onRemoteUserEnterRoom(String)
        VB: ITRTCCloudCallback.onRemoteUserEnterRoom(String)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onRemoteUserEnterRoom(String)
        VB: trtc.ITRTCCloudCallback.onRemoteUserEnterRoom(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onRemoteUserEnterRoom
        path: ''
        startLine: 2052
      summary: "\n3.1 A user entered the room\n\n<p>To ensure the performance of the SDK, this callback works differently under call and live streaming scenarios.</p>\n<p>- Call (`TRTCAppSceneVideoCall` and `TRTCAppSceneAudioCall`): The concept of roles does not apply, and the callback is triggered when any user enters the room.</p>\n<p>- Live streaming (`TRTCAppSceneLIVE` and `TRTCAppSceneVoiceChatRoom`): Given that there is no limit on audience size and frequent callbacks may affect the SDK’s performance, the callback is triggered only when an anchor enters the room.</p>\n"
      remarks: "\nNote: `onRemoteUserEnterRoom` and `onRemoteUserLeaveRoom` are used for maintaining the user list of a room. To play the video of a remote user, please use the `onUserVideoAvailable()` callback.\n"
      example: []
      syntax:
        content:
          CSharp: void onRemoteUserEnterRoom(String userId)
          VB: Sub onRemoteUserEnterRoom(userId As String)
        parameters:
        - id: userId
          type: String
          description: User ID
      overload: trtc.ITRTCCloudCallback.onRemoteUserEnterRoom*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onRemoteUserLeaveRoom(String,System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onRemoteUserLeaveRoom(String,System.Int32)
      language: CSharp
      name:
        CSharp: onRemoteUserLeaveRoom(String, Int32)
        VB: onRemoteUserLeaveRoom(String, Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onRemoteUserLeaveRoom(String, Int32)
        VB: ITRTCCloudCallback.onRemoteUserLeaveRoom(String, Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onRemoteUserLeaveRoom(String, System.Int32)
        VB: trtc.ITRTCCloudCallback.onRemoteUserLeaveRoom(String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onRemoteUserLeaveRoom
        path: ''
        startLine: 2063
      summary: "\n3.2 A user left the room (which pairs with `onRemoteUserEnterRoom`)\n\n<p>Like `onRemoteUserEnterRoom`, this callback works differently under call and live streaming scenarios.</p>\n<p>- Call (`TRTCAppSceneVideoCall` and `TRTCAppSceneAudioCall`): The concept of roles does not apply, and the callback is triggered when any user leaves the room.</p>\n<p>- Live streaming (`TRTCAppSceneLIVE` and `TRTCAppSceneVoiceChatRoom`): The callback is triggered only when an anchor leaves the room.</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onRemoteUserLeaveRoom(String userId, int reason)
          VB: Sub onRemoteUserLeaveRoom(userId As String, reason As Integer)
        parameters:
        - id: userId
          type: String
          description: User ID
        - id: reason
          type: System.Int32
          description: 'Reason for leaving a room. `0`: the user left the room voluntarily; `1`: the user left the room due to timeout; `2`: the user was removed from the room'
      overload: trtc.ITRTCCloudCallback.onRemoteUserLeaveRoom*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onUserVideoAvailable(String,System.Boolean)
      commentId: M:trtc.ITRTCCloudCallback.onUserVideoAvailable(String,System.Boolean)
      language: CSharp
      name:
        CSharp: onUserVideoAvailable(String, Boolean)
        VB: onUserVideoAvailable(String, Boolean)
      nameWithType:
        CSharp: ITRTCCloudCallback.onUserVideoAvailable(String, Boolean)
        VB: ITRTCCloudCallback.onUserVideoAvailable(String, Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onUserVideoAvailable(String, System.Boolean)
        VB: trtc.ITRTCCloudCallback.onUserVideoAvailable(String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onUserVideoAvailable
        path: ''
        startLine: 2078
      summary: "\n3.3 Whether a remote user has a playable primary stream (usually used for camera images)\n\n<p>The `onUserVideoAvailable(userId, YES)` callback indicates that the user has playable video frames.</p>\n<p>You can call `startRemoteView(userId)` to load the user’s video.</p>\n<p>You will then receive the `onFirstVideoFrame(userId)` callback, which indicates that the first video frame has been rendered.</p>\n<p>\nThe `onUserVideoAvailable(userId, NO)` callback indicates that the remote user has disabled video.\nThis may be because the user called `muteLocalVideo()` or `stopLocalPreview()`.\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onUserVideoAvailable(String userId, bool available)
          VB: Sub onUserVideoAvailable(userId As String, available As Boolean)
        parameters:
        - id: userId
          type: String
          description: User ID
        - id: available
          type: System.Boolean
          description: Whether video is enabled
      overload: trtc.ITRTCCloudCallback.onUserVideoAvailable*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onUserSubStreamAvailable(String,System.Boolean)
      commentId: M:trtc.ITRTCCloudCallback.onUserSubStreamAvailable(String,System.Boolean)
      language: CSharp
      name:
        CSharp: onUserSubStreamAvailable(String, Boolean)
        VB: onUserSubStreamAvailable(String, Boolean)
      nameWithType:
        CSharp: ITRTCCloudCallback.onUserSubStreamAvailable(String, Boolean)
        VB: ITRTCCloudCallback.onUserSubStreamAvailable(String, Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onUserSubStreamAvailable(String, System.Boolean)
        VB: trtc.ITRTCCloudCallback.onUserSubStreamAvailable(String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onUserSubStreamAvailable
        path: ''
        startLine: 2085
      summary: "\n3.4 Whether a user is sharing the screen\n"
      example: []
      syntax:
        content:
          CSharp: void onUserSubStreamAvailable(String userId, bool available)
          VB: Sub onUserSubStreamAvailable(userId As String, available As Boolean)
        parameters:
        - id: userId
          type: String
          description: User ID
        - id: available
          type: System.Boolean
          description: Whether the user is sharing the screen
      overload: trtc.ITRTCCloudCallback.onUserSubStreamAvailable*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onUserAudioAvailable(String,System.Boolean)
      commentId: M:trtc.ITRTCCloudCallback.onUserAudioAvailable(String,System.Boolean)
      language: CSharp
      name:
        CSharp: onUserAudioAvailable(String, Boolean)
        VB: onUserAudioAvailable(String, Boolean)
      nameWithType:
        CSharp: ITRTCCloudCallback.onUserAudioAvailable(String, Boolean)
        VB: ITRTCCloudCallback.onUserAudioAvailable(String, Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onUserAudioAvailable(String, System.Boolean)
        VB: trtc.ITRTCCloudCallback.onUserAudioAvailable(String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onUserAudioAvailable
        path: ''
        startLine: 2092
      summary: "\n3.5 Whether a remote user has playable audio data\n"
      example: []
      syntax:
        content:
          CSharp: void onUserAudioAvailable(String userId, bool available)
          VB: Sub onUserAudioAvailable(userId As String, available As Boolean)
        parameters:
        - id: userId
          type: String
          description: User ID
        - id: available
          type: System.Boolean
          description: Whether the user has enabled audio
      overload: trtc.ITRTCCloudCallback.onUserAudioAvailable*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onFirstVideoFrame(String,trtc.TRTCVideoStreamType,System.Int32,System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onFirstVideoFrame(String,trtc.TRTCVideoStreamType,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: onFirstVideoFrame(String, TRTCVideoStreamType, Int32, Int32)
        VB: onFirstVideoFrame(String, TRTCVideoStreamType, Int32, Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onFirstVideoFrame(String, TRTCVideoStreamType, Int32, Int32)
        VB: ITRTCCloudCallback.onFirstVideoFrame(String, TRTCVideoStreamType, Int32, Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onFirstVideoFrame(String, trtc.TRTCVideoStreamType, System.Int32, System.Int32)
        VB: trtc.ITRTCCloudCallback.onFirstVideoFrame(String, trtc.TRTCVideoStreamType, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onFirstVideoFrame
        path: ''
        startLine: 2107
      summary: "\n3.6 The first video frame of the local user or a remote user is rendered\n\n<p>If `userId` is `null`, the callback indicates that the first video frame captured from the local camera is rendered. It is triggered by the calling of `startLocalPreview`.</p>\n<p>If `userId` is not `null`, the callback indicates that the first video frame of the remote user is rendered. It is triggered by the calling of `startRemoteView`.</p>\n"
      remarks: "\nThis callback is triggered only after `startLocalPreview()`, `startRemoteView()`, or `startRemoteSubStreamView()` is called.\n"
      example: []
      syntax:
        content:
          CSharp: void onFirstVideoFrame(String userId, TRTCVideoStreamType streamType, int width, int height)
          VB: Sub onFirstVideoFrame(userId As String, streamType As TRTCVideoStreamType, width As Integer, height As Integer)
        parameters:
        - id: userId
          type: String
          description: User ID. `null` indicates the local user, and other values indicate a remote user.
        - id: streamType
          type: trtc.TRTCVideoStreamType
          description: Video stream type, which may be the camera stream and screen sharing stream
        - id: width
          type: System.Int32
          description: Video width
        - id: height
          type: System.Int32
          description: Video height
      overload: trtc.ITRTCCloudCallback.onFirstVideoFrame*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onFirstAudioFrame(String)
      commentId: M:trtc.ITRTCCloudCallback.onFirstAudioFrame(String)
      language: CSharp
      name:
        CSharp: onFirstAudioFrame(String)
        VB: onFirstAudioFrame(String)
      nameWithType:
        CSharp: ITRTCCloudCallback.onFirstAudioFrame(String)
        VB: ITRTCCloudCallback.onFirstAudioFrame(String)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onFirstAudioFrame(String)
        VB: trtc.ITRTCCloudCallback.onFirstAudioFrame(String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onFirstAudioFrame
        path: ''
        startLine: 2113
      summary: "\n3.7 The first audio frame of a remote user is played (no callback for the playback of the first local audio frame)\n"
      example: []
      syntax:
        content:
          CSharp: void onFirstAudioFrame(String userId)
          VB: Sub onFirstAudioFrame(userId As String)
        parameters:
        - id: userId
          type: String
          description: ID of the remote user
      overload: trtc.ITRTCCloudCallback.onFirstAudioFrame*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onSendFirstLocalVideoFrame(trtc.TRTCVideoStreamType)
      commentId: M:trtc.ITRTCCloudCallback.onSendFirstLocalVideoFrame(trtc.TRTCVideoStreamType)
      language: CSharp
      name:
        CSharp: onSendFirstLocalVideoFrame(TRTCVideoStreamType)
        VB: onSendFirstLocalVideoFrame(TRTCVideoStreamType)
      nameWithType:
        CSharp: ITRTCCloudCallback.onSendFirstLocalVideoFrame(TRTCVideoStreamType)
        VB: ITRTCCloudCallback.onSendFirstLocalVideoFrame(TRTCVideoStreamType)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onSendFirstLocalVideoFrame(trtc.TRTCVideoStreamType)
        VB: trtc.ITRTCCloudCallback.onSendFirstLocalVideoFrame(trtc.TRTCVideoStreamType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onSendFirstLocalVideoFrame
        path: ''
        startLine: 2122
      summary: "\n3.8 The first local video frame is sent\n\n<p>After `enterRoom()` and `startLocalPreview()` are called, the SDK will start capturing video from the camera and will encode the video captured.</p>\n<p>This callback is triggered when the SDK successfully sends the first video frame to the cloud.</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onSendFirstLocalVideoFrame(TRTCVideoStreamType streamType)
          VB: Sub onSendFirstLocalVideoFrame(streamType As TRTCVideoStreamType)
        parameters:
        - id: streamType
          type: trtc.TRTCVideoStreamType
          description: Video stream type, which may be the big image, small image, or substream image
      overload: trtc.ITRTCCloudCallback.onSendFirstLocalVideoFrame*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onSendFirstLocalAudioFrame
      commentId: M:trtc.ITRTCCloudCallback.onSendFirstLocalAudioFrame
      language: CSharp
      name:
        CSharp: onSendFirstLocalAudioFrame()
        VB: onSendFirstLocalAudioFrame()
      nameWithType:
        CSharp: ITRTCCloudCallback.onSendFirstLocalAudioFrame()
        VB: ITRTCCloudCallback.onSendFirstLocalAudioFrame()
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onSendFirstLocalAudioFrame()
        VB: trtc.ITRTCCloudCallback.onSendFirstLocalAudioFrame()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onSendFirstLocalAudioFrame
        path: ''
        startLine: 2130
      summary: "\n3.9. The first local audio frame is sent\n\n<p>After `enterRoom()` and `startLocalAudio()` are called, the SDK will start capturing video from the mic and will encode the audio captured.</p>\n<p>This callback is triggered when the SDK successfully sends the first audio frame to the cloud.</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onSendFirstLocalAudioFrame()
          VB: Sub onSendFirstLocalAudioFrame
      overload: trtc.ITRTCCloudCallback.onSendFirstLocalAudioFrame*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onNetworkQuality(trtc.TRTCQualityInfo,trtc.TRTCQualityInfo[],UInt32)
      commentId: M:trtc.ITRTCCloudCallback.onNetworkQuality(trtc.TRTCQualityInfo,trtc.TRTCQualityInfo[],UInt32)
      language: CSharp
      name:
        CSharp: onNetworkQuality(TRTCQualityInfo, TRTCQualityInfo[], UInt32)
        VB: onNetworkQuality(TRTCQualityInfo, TRTCQualityInfo(), UInt32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onNetworkQuality(TRTCQualityInfo, TRTCQualityInfo[], UInt32)
        VB: ITRTCCloudCallback.onNetworkQuality(TRTCQualityInfo, TRTCQualityInfo(), UInt32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onNetworkQuality(trtc.TRTCQualityInfo, trtc.TRTCQualityInfo[], UInt32)
        VB: trtc.ITRTCCloudCallback.onNetworkQuality(trtc.TRTCQualityInfo, trtc.TRTCQualityInfo(), UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onNetworkQuality
        path: ''
        startLine: 2151
      summary: "\n4.1 Callback of statistics on upstream and downstream network quality (triggered every 2 seconds)\n"
      remarks: "\nIf `userId` is `null`, the callback returns statistics on the local user’s video quality.\n"
      example: []
      syntax:
        content:
          CSharp: void onNetworkQuality(TRTCQualityInfo localQuality, TRTCQualityInfo[] remoteQuality, UInt32 remoteQualityCount)
          VB: Sub onNetworkQuality(localQuality As TRTCQualityInfo, remoteQuality As TRTCQualityInfo(), remoteQualityCount As UInt32)
        parameters:
        - id: localQuality
          type: trtc.TRTCQualityInfo
          description: Upstream network quality
        - id: remoteQuality
          type: trtc.TRTCQualityInfo[]
          description: Downstream network quality (array)
        - id: remoteQualityCount
          type: UInt32
          description: Number of elements in the downstream network quality array
      overload: trtc.ITRTCCloudCallback.onNetworkQuality*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onStatistics(trtc.TRTCStatistics)
      commentId: M:trtc.ITRTCCloudCallback.onStatistics(trtc.TRTCStatistics)
      language: CSharp
      name:
        CSharp: onStatistics(TRTCStatistics)
        VB: onStatistics(TRTCStatistics)
      nameWithType:
        CSharp: ITRTCCloudCallback.onStatistics(TRTCStatistics)
        VB: ITRTCCloudCallback.onStatistics(TRTCStatistics)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onStatistics(trtc.TRTCStatistics)
        VB: trtc.ITRTCCloudCallback.onStatistics(trtc.TRTCStatistics)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onStatistics
        path: ''
        startLine: 2163
      summary: "\n4.2 Callback of technical metric statistics\n\n<p>If you are familiar with the technical metrics of real-time communication, you can use this callback to get statistics on the SDK’s technical metrics.</p>\n<p>If you are building a real-time communication project for the first time, you can use the `onNetworkQuality` callback only.</p>\n"
      remarks: "\nThe callback is triggered every 2 seconds.\n"
      example: []
      syntax:
        content:
          CSharp: void onStatistics(TRTCStatistics statis)
          VB: Sub onStatistics(statis As TRTCStatistics)
        parameters:
        - id: statis
          type: trtc.TRTCStatistics
          description: Statistics for the local user and remote users
      overload: trtc.ITRTCCloudCallback.onStatistics*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onConnectionLost
      commentId: M:trtc.ITRTCCloudCallback.onConnectionLost
      language: CSharp
      name:
        CSharp: onConnectionLost()
        VB: onConnectionLost()
      nameWithType:
        CSharp: ITRTCCloudCallback.onConnectionLost()
        VB: ITRTCCloudCallback.onConnectionLost()
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onConnectionLost()
        VB: trtc.ITRTCCloudCallback.onConnectionLost()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onConnectionLost
        path: ''
        startLine: 2177
      summary: "\n5.1 The SDK is disconnected from the server\n"
      example: []
      syntax:
        content:
          CSharp: void onConnectionLost()
          VB: Sub onConnectionLost
      overload: trtc.ITRTCCloudCallback.onConnectionLost*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onTryToReconnect
      commentId: M:trtc.ITRTCCloudCallback.onTryToReconnect
      language: CSharp
      name:
        CSharp: onTryToReconnect()
        VB: onTryToReconnect()
      nameWithType:
        CSharp: ITRTCCloudCallback.onTryToReconnect()
        VB: ITRTCCloudCallback.onTryToReconnect()
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onTryToReconnect()
        VB: trtc.ITRTCCloudCallback.onTryToReconnect()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onTryToReconnect
        path: ''
        startLine: 2182
      summary: "\n5.2 The SDK is reconnecting to the server\n"
      example: []
      syntax:
        content:
          CSharp: void onTryToReconnect()
          VB: Sub onTryToReconnect
      overload: trtc.ITRTCCloudCallback.onTryToReconnect*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onConnectionRecovery
      commentId: M:trtc.ITRTCCloudCallback.onConnectionRecovery
      language: CSharp
      name:
        CSharp: onConnectionRecovery()
        VB: onConnectionRecovery()
      nameWithType:
        CSharp: ITRTCCloudCallback.onConnectionRecovery()
        VB: ITRTCCloudCallback.onConnectionRecovery()
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onConnectionRecovery()
        VB: trtc.ITRTCCloudCallback.onConnectionRecovery()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onConnectionRecovery
        path: ''
        startLine: 2187
      summary: "\n5.3 The SDK is reconnected to the server\n"
      example: []
      syntax:
        content:
          CSharp: void onConnectionRecovery()
          VB: Sub onConnectionRecovery
      overload: trtc.ITRTCCloudCallback.onConnectionRecovery*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onSpeedTest(trtc.TRTCSpeedTestResult,System.Int32,System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onSpeedTest(trtc.TRTCSpeedTestResult,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: onSpeedTest(TRTCSpeedTestResult, Int32, Int32)
        VB: onSpeedTest(TRTCSpeedTestResult, Int32, Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onSpeedTest(TRTCSpeedTestResult, Int32, Int32)
        VB: ITRTCCloudCallback.onSpeedTest(TRTCSpeedTestResult, Int32, Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onSpeedTest(trtc.TRTCSpeedTestResult, System.Int32, System.Int32)
        VB: trtc.ITRTCCloudCallback.onSpeedTest(trtc.TRTCSpeedTestResult, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onSpeedTest
        path: ''
        startLine: 2196
      example: []
      syntax:
        content:
          CSharp: void onSpeedTest(TRTCSpeedTestResult currentResult, int finishedCount, int totalCount)
          VB: Sub onSpeedTest(currentResult As TRTCSpeedTestResult, finishedCount As Integer, totalCount As Integer)
        parameters:
        - id: currentResult
          type: trtc.TRTCSpeedTestResult
        - id: finishedCount
          type: System.Int32
        - id: totalCount
          type: System.Int32
      overload: trtc.ITRTCCloudCallback.onSpeedTest*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onCameraDidReady
      commentId: M:trtc.ITRTCCloudCallback.onCameraDidReady
      language: CSharp
      name:
        CSharp: onCameraDidReady()
        VB: onCameraDidReady()
      nameWithType:
        CSharp: ITRTCCloudCallback.onCameraDidReady()
        VB: ITRTCCloudCallback.onCameraDidReady()
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onCameraDidReady()
        VB: trtc.ITRTCCloudCallback.onCameraDidReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onCameraDidReady
        path: ''
        startLine: 2210
      summary: "\n6.1 The camera is ready\n"
      example: []
      syntax:
        content:
          CSharp: void onCameraDidReady()
          VB: Sub onCameraDidReady
      overload: trtc.ITRTCCloudCallback.onCameraDidReady*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onMicDidReady
      commentId: M:trtc.ITRTCCloudCallback.onMicDidReady
      language: CSharp
      name:
        CSharp: onMicDidReady()
        VB: onMicDidReady()
      nameWithType:
        CSharp: ITRTCCloudCallback.onMicDidReady()
        VB: ITRTCCloudCallback.onMicDidReady()
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onMicDidReady()
        VB: trtc.ITRTCCloudCallback.onMicDidReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onMicDidReady
        path: ''
        startLine: 2215
      summary: "\n6.2 The mic is ready\n"
      example: []
      syntax:
        content:
          CSharp: void onMicDidReady()
          VB: Sub onMicDidReady
      overload: trtc.ITRTCCloudCallback.onMicDidReady*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onUserVoiceVolume(trtc.TRTCVolumeInfo[],UInt32,UInt32)
      commentId: M:trtc.ITRTCCloudCallback.onUserVoiceVolume(trtc.TRTCVolumeInfo[],UInt32,UInt32)
      language: CSharp
      name:
        CSharp: onUserVoiceVolume(TRTCVolumeInfo[], UInt32, UInt32)
        VB: onUserVoiceVolume(TRTCVolumeInfo(), UInt32, UInt32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onUserVoiceVolume(TRTCVolumeInfo[], UInt32, UInt32)
        VB: ITRTCCloudCallback.onUserVoiceVolume(TRTCVolumeInfo(), UInt32, UInt32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onUserVoiceVolume(trtc.TRTCVolumeInfo[], UInt32, UInt32)
        VB: trtc.ITRTCCloudCallback.onUserVoiceVolume(trtc.TRTCVolumeInfo(), UInt32, UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onUserVoiceVolume
        path: ''
        startLine: 2230
      summary: "\n6.3 Callback of volume (including the volume of each `userId` and total remote volume)\n\n<p>You can use the `enableAudioVolumeEvaluation` API in `TRTCCloud` to enable or disable this callback.</p>\n<p>After you call `enableAudioVolumeEvaluation` to enable the volume callback, the callback will be triggered at the specified interval regardless of whether there are users speaking in the room.</p>\n<p>If no one is speaking, `userVolumes` will be empty, and `totalVolume` will be `0`.</p>\n"
      remarks: "\nIf `userId` is `null`, `volume` indicates the local user’s volume. `userVolumes` includes only the volumes of speaking users, i.e., users whose volume is not 0.\n"
      example: []
      syntax:
        content:
          CSharp: void onUserVoiceVolume(TRTCVolumeInfo[] userVolumes, UInt32 userVolumesCount, UInt32 totalVolume)
          VB: Sub onUserVoiceVolume(userVolumes As TRTCVolumeInfo(), userVolumesCount As UInt32, totalVolume As UInt32)
        parameters:
        - id: userVolumes
          type: trtc.TRTCVolumeInfo[]
          description: 'Volumes of all speaking users in the room. Value range: 0-100'
        - id: userVolumesCount
          type: UInt32
          description: Number of speaking users in the room
        - id: totalVolume
          type: UInt32
          description: 'Total remote volume. Value range: 0-100'
      overload: trtc.ITRTCCloudCallback.onUserVoiceVolume*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onDeviceChange(String,trtc.TRTCDeviceType,trtc.TRTCDeviceState)
      commentId: M:trtc.ITRTCCloudCallback.onDeviceChange(String,trtc.TRTCDeviceType,trtc.TRTCDeviceState)
      language: CSharp
      name:
        CSharp: onDeviceChange(String, TRTCDeviceType, TRTCDeviceState)
        VB: onDeviceChange(String, TRTCDeviceType, TRTCDeviceState)
      nameWithType:
        CSharp: ITRTCCloudCallback.onDeviceChange(String, TRTCDeviceType, TRTCDeviceState)
        VB: ITRTCCloudCallback.onDeviceChange(String, TRTCDeviceType, TRTCDeviceState)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onDeviceChange(String, trtc.TRTCDeviceType, trtc.TRTCDeviceState)
        VB: trtc.ITRTCCloudCallback.onDeviceChange(String, trtc.TRTCDeviceType, trtc.TRTCDeviceState)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onDeviceChange
        path: ''
        startLine: 2238
      summary: "\n6.4 Callback for the connection/disconnection of a local device\n"
      example: []
      syntax:
        content:
          CSharp: void onDeviceChange(String deviceId, TRTCDeviceType type, TRTCDeviceState state)
          VB: Sub onDeviceChange(deviceId As String, type As TRTCDeviceType, state As TRTCDeviceState)
        parameters:
        - id: deviceId
          type: String
          description: Device ID
        - id: type
          type: trtc.TRTCDeviceType
          description: Device type
        - id: state
          type: trtc.TRTCDeviceState
          description: Event
      overload: trtc.ITRTCCloudCallback.onDeviceChange*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onTestMicVolume(System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onTestMicVolume(System.Int32)
      language: CSharp
      name:
        CSharp: onTestMicVolume(Int32)
        VB: onTestMicVolume(Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onTestMicVolume(Int32)
        VB: ITRTCCloudCallback.onTestMicVolume(Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onTestMicVolume(System.Int32)
        VB: trtc.ITRTCCloudCallback.onTestMicVolume(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onTestMicVolume
        path: ''
        startLine: 2245
      summary: "\n6.5 Callback of mic testing volume\n<p>This callback is triggered by the mic testing API `startMicDeviceTest`.</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onTestMicVolume(int volume)
          VB: Sub onTestMicVolume(volume As Integer)
        parameters:
        - id: volume
          type: System.Int32
          description: 'Volume. Value range: 0-100'
      overload: trtc.ITRTCCloudCallback.onTestMicVolume*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onTestSpeakerVolume(System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onTestSpeakerVolume(System.Int32)
      language: CSharp
      name:
        CSharp: onTestSpeakerVolume(Int32)
        VB: onTestSpeakerVolume(Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onTestSpeakerVolume(Int32)
        VB: ITRTCCloudCallback.onTestSpeakerVolume(Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onTestSpeakerVolume(System.Int32)
        VB: trtc.ITRTCCloudCallback.onTestSpeakerVolume(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onTestSpeakerVolume
        path: ''
        startLine: 2254
      summary: "\n6.6 Callback of speaker testing volume\n<p>\n This callback is triggered by the speaker testing API `startSpeakerDeviceTest`.\n</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onTestSpeakerVolume(int volume)
          VB: Sub onTestSpeakerVolume(volume As Integer)
        parameters:
        - id: volume
          type: System.Int32
          description: 'Volume. Value range: 0-100'
      overload: trtc.ITRTCCloudCallback.onTestSpeakerVolume*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged(System.Int32,System.Boolean)
      commentId: M:trtc.ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: onAudioDeviceCaptureVolumeChanged(Int32, Boolean)
        VB: onAudioDeviceCaptureVolumeChanged(Int32, Boolean)
      nameWithType:
        CSharp: ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged(Int32, Boolean)
        VB: ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged(Int32, Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged(System.Int32, System.Boolean)
        VB: trtc.ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onAudioDeviceCaptureVolumeChanged
        path: ''
        startLine: 2263
      summary: "\n6.7 Callback for volume change of the audio capturing device\n"
      remarks: You can use `enableAudioVolumeEvaluation` to enable (`interval` > 0) or disable (`interval` = 0) this callback.
      example: []
      syntax:
        content:
          CSharp: void onAudioDeviceCaptureVolumeChanged(int volume, bool muted)
          VB: Sub onAudioDeviceCaptureVolumeChanged(volume As Integer, muted As Boolean)
        parameters:
        - id: volume
          type: System.Int32
          description: 'Volume. Value range: 0-100'
        - id: muted
          type: System.Boolean
          description: 'Whether the audio capturing device is muted. `true`: muted; `false`: unmuted'
      overload: trtc.ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged(System.Int32,System.Boolean)
      commentId: M:trtc.ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: onAudioDevicePlayoutVolumeChanged(Int32, Boolean)
        VB: onAudioDevicePlayoutVolumeChanged(Int32, Boolean)
      nameWithType:
        CSharp: ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged(Int32, Boolean)
        VB: ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged(Int32, Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged(System.Int32, System.Boolean)
        VB: trtc.ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged(System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onAudioDevicePlayoutVolumeChanged
        path: ''
        startLine: 2272
      summary: "\nCallback for volume change of the audio playback device\n"
      remarks: You can use `enableAudioVolumeEvaluation` to enable (`interval` > 0) or disable (`interval` = 0) this callback.
      example: []
      syntax:
        content:
          CSharp: void onAudioDevicePlayoutVolumeChanged(int volume, bool muted)
          VB: Sub onAudioDevicePlayoutVolumeChanged(volume As Integer, muted As Boolean)
        parameters:
        - id: volume
          type: System.Int32
          description: 'Volume. Value range: 0-100'
        - id: muted
          type: System.Boolean
          description: 'Whether the audio playback device is muted. `true`: muted; `false`: unmuted'
      overload: trtc.ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onRecvCustomCmdMsg(String,System.Int32,System.Int32,Byte[],System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onRecvCustomCmdMsg(String,System.Int32,System.Int32,Byte[],System.Int32)
      language: CSharp
      name:
        CSharp: onRecvCustomCmdMsg(String, Int32, Int32, Byte[], Int32)
        VB: onRecvCustomCmdMsg(String, Int32, Int32, Byte(), Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onRecvCustomCmdMsg(String, Int32, Int32, Byte[], Int32)
        VB: ITRTCCloudCallback.onRecvCustomCmdMsg(String, Int32, Int32, Byte(), Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onRecvCustomCmdMsg(String, System.Int32, System.Int32, Byte[], System.Int32)
        VB: trtc.ITRTCCloudCallback.onRecvCustomCmdMsg(String, System.Int32, System.Int32, Byte(), System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onRecvCustomCmdMsg
        path: ''
        startLine: 2293
      summary: "\n7.1 Callback for receiving a custom message\n"
      example: []
      syntax:
        content:
          CSharp: void onRecvCustomCmdMsg(String userId, int cmdID, int seq, Byte[] message, int messageSize)
          VB: Sub onRecvCustomCmdMsg(userId As String, cmdID As Integer, seq As Integer, message As Byte(), messageSize As Integer)
        parameters:
        - id: userId
          type: String
          description: User ID
        - id: cmdID
          type: System.Int32
          description: Command ID
        - id: seq
          type: System.Int32
          description: Message sequence number
        - id: message
          type: Byte[]
          description: Message data
        - id: messageSize
          type: System.Int32
          description: Message size
      overload: trtc.ITRTCCloudCallback.onRecvCustomCmdMsg*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onMissCustomCmdMsg(String,System.Int32,System.Int32,System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onMissCustomCmdMsg(String,System.Int32,System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: onMissCustomCmdMsg(String, Int32, Int32, Int32)
        VB: onMissCustomCmdMsg(String, Int32, Int32, Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onMissCustomCmdMsg(String, Int32, Int32, Int32)
        VB: ITRTCCloudCallback.onMissCustomCmdMsg(String, Int32, Int32, Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onMissCustomCmdMsg(String, System.Int32, System.Int32, System.Int32)
        VB: trtc.ITRTCCloudCallback.onMissCustomCmdMsg(String, System.Int32, System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onMissCustomCmdMsg
        path: ''
        startLine: 2306
      summary: "\n7.2 Callback for losing custom messages\n<p>TRTC uses UDP channels. Even if you enable reliable messaging, there is a small chance that you may lose a message. Reliable messaging can meet the requirements of common message sending scenarios.</p>\n<p>If you enable reliable messaging, the SDK will notify you through this callback of the number of messages lost during a past period of time (usually 5 seconds).</p>\n"
      remarks: The recipient will receive this callback only if the sender enables reliable messaging.
      example: []
      syntax:
        content:
          CSharp: void onMissCustomCmdMsg(String userId, int cmdID, int errCode, int missed)
          VB: Sub onMissCustomCmdMsg(userId As String, cmdID As Integer, errCode As Integer, missed As Integer)
        parameters:
        - id: userId
          type: String
          description: User ID
        - id: cmdID
          type: System.Int32
          description: Command ID
        - id: errCode
          type: System.Int32
          description: Error code
        - id: missed
          type: System.Int32
          description: Number of messages lost
      overload: trtc.ITRTCCloudCallback.onMissCustomCmdMsg*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onRecvSEIMsg(String,Byte[],UInt32)
      commentId: M:trtc.ITRTCCloudCallback.onRecvSEIMsg(String,Byte[],UInt32)
      language: CSharp
      name:
        CSharp: onRecvSEIMsg(String, Byte[], UInt32)
        VB: onRecvSEIMsg(String, Byte(), UInt32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onRecvSEIMsg(String, Byte[], UInt32)
        VB: ITRTCCloudCallback.onRecvSEIMsg(String, Byte(), UInt32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onRecvSEIMsg(String, Byte[], UInt32)
        VB: trtc.ITRTCCloudCallback.onRecvSEIMsg(String, Byte(), UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onRecvSEIMsg
        path: ''
        startLine: 2317
      summary: "\n7.3 Callback for receiving an SEI message\n\n<p>When a user in a room uses `sendSEIMsg` to send data, other users in the room can receive the data through the `onRecvSEIMsg` callback.</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onRecvSEIMsg(String userId, Byte[] message, UInt32 msgSize)
          VB: Sub onRecvSEIMsg(userId As String, message As Byte(), msgSize As UInt32)
        parameters:
        - id: userId
          type: String
          description: User ID
        - id: message
          type: Byte[]
          description: Message data
        - id: msgSize
          type: UInt32
          description: Message size
      overload: trtc.ITRTCCloudCallback.onRecvSEIMsg*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onStartPublishing(System.Int32,String)
      commentId: M:trtc.ITRTCCloudCallback.onStartPublishing(System.Int32,String)
      language: CSharp
      name:
        CSharp: onStartPublishing(Int32, String)
        VB: onStartPublishing(Int32, String)
      nameWithType:
        CSharp: ITRTCCloudCallback.onStartPublishing(Int32, String)
        VB: ITRTCCloudCallback.onStartPublishing(Int32, String)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onStartPublishing(System.Int32, String)
        VB: trtc.ITRTCCloudCallback.onStartPublishing(System.Int32, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onStartPublishing
        path: ''
        startLine: 2332
      summary: "\n8.1. Callback for starting publishing to Tencent Cloud’s live streaming CDN (triggered by the `startPublishing()` API in `TRTCCloud`)\n"
      example: []
      syntax:
        content:
          CSharp: void onStartPublishing(int errCode, String errMsg)
          VB: Sub onStartPublishing(errCode As Integer, errMsg As String)
        parameters:
        - id: errCode
          type: System.Int32
          description: '`0`: successful; other values: failed'
        - id: errMsg
          type: String
          description: Error message
      overload: trtc.ITRTCCloudCallback.onStartPublishing*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onStopPublishing(System.Int32,String)
      commentId: M:trtc.ITRTCCloudCallback.onStopPublishing(System.Int32,String)
      language: CSharp
      name:
        CSharp: onStopPublishing(Int32, String)
        VB: onStopPublishing(Int32, String)
      nameWithType:
        CSharp: ITRTCCloudCallback.onStopPublishing(Int32, String)
        VB: ITRTCCloudCallback.onStopPublishing(Int32, String)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onStopPublishing(System.Int32, String)
        VB: trtc.ITRTCCloudCallback.onStopPublishing(System.Int32, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onStopPublishing
        path: ''
        startLine: 2339
      summary: "\n8.2. Callback for stopping publishing to Tencent Cloud’s live streaming CDN (triggered by the `stopPublishing()` API in `TRTCCloud`)\n"
      example: []
      syntax:
        content:
          CSharp: void onStopPublishing(int errCode, String errMsg)
          VB: Sub onStopPublishing(errCode As Integer, errMsg As String)
        parameters:
        - id: errCode
          type: System.Int32
          description: '`0`: successful; other values: failed'
        - id: errMsg
          type: String
          description: Error message
      overload: trtc.ITRTCCloudCallback.onStopPublishing*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onStartPublishCDNStream(System.Int32,String)
      commentId: M:trtc.ITRTCCloudCallback.onStartPublishCDNStream(System.Int32,String)
      language: CSharp
      name:
        CSharp: onStartPublishCDNStream(Int32, String)
        VB: onStartPublishCDNStream(Int32, String)
      nameWithType:
        CSharp: ITRTCCloudCallback.onStartPublishCDNStream(Int32, String)
        VB: ITRTCCloudCallback.onStartPublishCDNStream(Int32, String)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onStartPublishCDNStream(System.Int32, String)
        VB: trtc.ITRTCCloudCallback.onStartPublishCDNStream(System.Int32, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onStartPublishCDNStream
        path: ''
        startLine: 2350
      summary: "\n8.3 Callback for starting relaying to CDN (triggered by the `startPublishCDNStream()` API in `TRTCCloud`)\nNote: If `0` (successful) is returned, it indicates that Tencent Cloud has been notified of the relaying request, but if an error occurs in the target CDN, relaying may still fail.\n"
      example: []
      syntax:
        content:
          CSharp: void onStartPublishCDNStream(int errCode, String errMsg)
          VB: Sub onStartPublishCDNStream(errCode As Integer, errMsg As String)
        parameters:
        - id: errCode
          type: System.Int32
          description: '`0`: successful; other values: failed'
        - id: errMsg
          type: String
          description: Error message
      overload: trtc.ITRTCCloudCallback.onStartPublishCDNStream*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onStopPublishCDNStream(System.Int32,String)
      commentId: M:trtc.ITRTCCloudCallback.onStopPublishCDNStream(System.Int32,String)
      language: CSharp
      name:
        CSharp: onStopPublishCDNStream(Int32, String)
        VB: onStopPublishCDNStream(Int32, String)
      nameWithType:
        CSharp: ITRTCCloudCallback.onStopPublishCDNStream(Int32, String)
        VB: ITRTCCloudCallback.onStopPublishCDNStream(Int32, String)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onStopPublishCDNStream(System.Int32, String)
        VB: trtc.ITRTCCloudCallback.onStopPublishCDNStream(System.Int32, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onStopPublishCDNStream
        path: ''
        startLine: 2358
      summary: "\n8.4 Callback for stopping relaying to CDN\nThis callback is triggered by the `stopPublishCDNStream()` API in `TRTCCloud`.\n"
      example: []
      syntax:
        content:
          CSharp: void onStopPublishCDNStream(int errCode, String errMsg)
          VB: Sub onStopPublishCDNStream(errCode As Integer, errMsg As String)
        parameters:
        - id: errCode
          type: System.Int32
          description: '`0`: successful; other values: failed'
        - id: errMsg
          type: String
          description: Error message
      overload: trtc.ITRTCCloudCallback.onStopPublishCDNStream*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onSetMixTranscodingConfig(System.Int32,String)
      commentId: M:trtc.ITRTCCloudCallback.onSetMixTranscodingConfig(System.Int32,String)
      language: CSharp
      name:
        CSharp: onSetMixTranscodingConfig(Int32, String)
        VB: onSetMixTranscodingConfig(Int32, String)
      nameWithType:
        CSharp: ITRTCCloudCallback.onSetMixTranscodingConfig(Int32, String)
        VB: ITRTCCloudCallback.onSetMixTranscodingConfig(Int32, String)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onSetMixTranscodingConfig(System.Int32, String)
        VB: trtc.ITRTCCloudCallback.onSetMixTranscodingConfig(System.Int32, String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onSetMixTranscodingConfig
        path: ''
        startLine: 2365
      summary: "\nCallback for setting On-Cloud MixTranscoding parameters (triggered by the `setMixTranscodingConfig()` API in `TRTCCloud`)\n"
      example: []
      syntax:
        content:
          CSharp: void onSetMixTranscodingConfig(int errCode, String errMsg)
          VB: Sub onSetMixTranscodingConfig(errCode As Integer, errMsg As String)
        parameters:
        - id: errCode
          type: System.Int32
          description: '`0`: successful; other values: failed'
        - id: errMsg
          type: String
          description: Error message
      overload: trtc.ITRTCCloudCallback.onSetMixTranscodingConfig*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onScreenCaptureStarted
      commentId: M:trtc.ITRTCCloudCallback.onScreenCaptureStarted
      language: CSharp
      name:
        CSharp: onScreenCaptureStarted()
        VB: onScreenCaptureStarted()
      nameWithType:
        CSharp: ITRTCCloudCallback.onScreenCaptureStarted()
        VB: ITRTCCloudCallback.onScreenCaptureStarted()
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onScreenCaptureStarted()
        VB: trtc.ITRTCCloudCallback.onScreenCaptureStarted()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onScreenCaptureStarted
        path: ''
        startLine: 2388
      summary: "\n10.2 Callback for starting screen sharing\n"
      example: []
      syntax:
        content:
          CSharp: void onScreenCaptureStarted()
          VB: Sub onScreenCaptureStarted
      overload: trtc.ITRTCCloudCallback.onScreenCaptureStarted*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onScreenCapturePaused(System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onScreenCapturePaused(System.Int32)
      language: CSharp
      name:
        CSharp: onScreenCapturePaused(Int32)
        VB: onScreenCapturePaused(Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onScreenCapturePaused(Int32)
        VB: ITRTCCloudCallback.onScreenCapturePaused(Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onScreenCapturePaused(System.Int32)
        VB: trtc.ITRTCCloudCallback.onScreenCapturePaused(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onScreenCapturePaused
        path: ''
        startLine: 2394
      summary: "\n10.3 Callback for pausing screen sharing\n"
      example: []
      syntax:
        content:
          CSharp: void onScreenCapturePaused(int reason)
          VB: Sub onScreenCapturePaused(reason As Integer)
        parameters:
        - id: reason
          type: System.Int32
          description: 'Reason. `0`: the user paused screen sharing; `1`: screen sharing parameters are being modified; `2`: the shared window was minimized; `3`: the shared window was hidden'
      overload: trtc.ITRTCCloudCallback.onScreenCapturePaused*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onScreenCaptureResumed(System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onScreenCaptureResumed(System.Int32)
      language: CSharp
      name:
        CSharp: onScreenCaptureResumed(Int32)
        VB: onScreenCaptureResumed(Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onScreenCaptureResumed(Int32)
        VB: ITRTCCloudCallback.onScreenCaptureResumed(Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onScreenCaptureResumed(System.Int32)
        VB: trtc.ITRTCCloudCallback.onScreenCaptureResumed(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onScreenCaptureResumed
        path: ''
        startLine: 2400
      summary: "\n10.4 Callback for resuming screen sharing\n"
      example: []
      syntax:
        content:
          CSharp: void onScreenCaptureResumed(int reason)
          VB: Sub onScreenCaptureResumed(reason As Integer)
        parameters:
        - id: reason
          type: System.Int32
          description: 'Reason. `0`: the user resumed screen sharing; `1`: the modification of screen sharing parameters is completed; `2`: the minimized window was restored; `3`: the hidden window was restored'
      overload: trtc.ITRTCCloudCallback.onScreenCaptureResumed*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITRTCCloudCallback.onScreenCaptureStoped(System.Int32)
      commentId: M:trtc.ITRTCCloudCallback.onScreenCaptureStoped(System.Int32)
      language: CSharp
      name:
        CSharp: onScreenCaptureStoped(Int32)
        VB: onScreenCaptureStoped(Int32)
      nameWithType:
        CSharp: ITRTCCloudCallback.onScreenCaptureStoped(Int32)
        VB: ITRTCCloudCallback.onScreenCaptureStoped(Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloudCallback.onScreenCaptureStoped(System.Int32)
        VB: trtc.ITRTCCloudCallback.onScreenCaptureStoped(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onScreenCaptureStoped
        path: ''
        startLine: 2406
      summary: "\n10.5 Callback for stopping screen sharing\n"
      example: []
      syntax:
        content:
          CSharp: void onScreenCaptureStoped(int reason)
          VB: Sub onScreenCaptureStoped(reason As Integer)
        parameters:
        - id: reason
          type: System.Int32
          description: 'Reason. `0`: the user stopped screen sharing; `1`: the shared window was closed'
      overload: trtc.ITRTCCloudCallback.onScreenCaptureStoped*
      modifiers:
        CSharp: []
        VB: []
  - id: trtc.ITRTCVideoRenderCallback
    commentId: T:trtc.ITRTCVideoRenderCallback
    language: CSharp
    name:
      CSharp: ITRTCVideoRenderCallback
      VB: ITRTCVideoRenderCallback
    nameWithType:
      CSharp: ITRTCVideoRenderCallback
      VB: ITRTCVideoRenderCallback
    qualifiedName:
      CSharp: trtc.ITRTCVideoRenderCallback
      VB: trtc.ITRTCVideoRenderCallback
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: ITRTCVideoRenderCallback
      path: ''
      startLine: 2422
    summary: "\nCustom video rendering callbacks\n"
    example: []
    syntax:
      content:
        CSharp: public interface ITRTCVideoRenderCallback
        VB: Public Interface ITRTCVideoRenderCallback
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: trtc.ITRTCVideoRenderCallback.onRenderVideoFrame(System.String,trtc.TRTCVideoStreamType,trtc.TRTCVideoFrame)
      commentId: M:trtc.ITRTCVideoRenderCallback.onRenderVideoFrame(System.String,trtc.TRTCVideoStreamType,trtc.TRTCVideoFrame)
      language: CSharp
      name:
        CSharp: onRenderVideoFrame(String, TRTCVideoStreamType, TRTCVideoFrame)
        VB: onRenderVideoFrame(String, TRTCVideoStreamType, TRTCVideoFrame)
      nameWithType:
        CSharp: ITRTCVideoRenderCallback.onRenderVideoFrame(String, TRTCVideoStreamType, TRTCVideoFrame)
        VB: ITRTCVideoRenderCallback.onRenderVideoFrame(String, TRTCVideoStreamType, TRTCVideoFrame)
      qualifiedName:
        CSharp: trtc.ITRTCVideoRenderCallback.onRenderVideoFrame(System.String, trtc.TRTCVideoStreamType, trtc.TRTCVideoFrame)
        VB: trtc.ITRTCVideoRenderCallback.onRenderVideoFrame(System.String, trtc.TRTCVideoStreamType, trtc.TRTCVideoFrame)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onRenderVideoFrame
        path: ''
        startLine: 2431
      summary: "\n12.1 Callback of video frames for custom rendering\n<p>You can use `setLocalVideoRenderCallback` and `setRemoteVideoRenderCallback` to set the custom rendering callback.</p>\n"
      example: []
      syntax:
        content:
          CSharp: void onRenderVideoFrame(string userId, TRTCVideoStreamType streamType, TRTCVideoFrame frame)
          VB: Sub onRenderVideoFrame(userId As String, streamType As TRTCVideoStreamType, frame As TRTCVideoFrame)
        parameters:
        - id: userId
          type: System.String
          description: User ID
        - id: streamType
          type: trtc.TRTCVideoStreamType
          description: 'Stream type: the camera or screen sharing stream'
        - id: frame
          type: trtc.TRTCVideoFrame
          description: Video frames
      overload: trtc.ITRTCVideoRenderCallback.onRenderVideoFrame*
      modifiers:
        CSharp: []
        VB: []
  - id: trtc.ITRTCLogCallback
    commentId: T:trtc.ITRTCLogCallback
    language: CSharp
    name:
      CSharp: ITRTCLogCallback
      VB: ITRTCLogCallback
    nameWithType:
      CSharp: ITRTCLogCallback
      VB: ITRTCLogCallback
    qualifiedName:
      CSharp: trtc.ITRTCLogCallback
      VB: trtc.ITRTCLogCallback
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: ITRTCLogCallback
      path: ''
      startLine: 2437
    summary: "\nLog callbacks\n"
    example: []
    syntax:
      content:
        CSharp: public interface ITRTCLogCallback
        VB: Public Interface ITRTCLogCallback
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: trtc.ITRTCLogCallback.onLog(System.String,trtc.TRTCLogLevel,System.String)
      commentId: M:trtc.ITRTCLogCallback.onLog(System.String,trtc.TRTCLogLevel,System.String)
      language: CSharp
      name:
        CSharp: onLog(String, TRTCLogLevel, String)
        VB: onLog(String, TRTCLogLevel, String)
      nameWithType:
        CSharp: ITRTCLogCallback.onLog(String, TRTCLogLevel, String)
        VB: ITRTCLogCallback.onLog(String, TRTCLogLevel, String)
      qualifiedName:
        CSharp: trtc.ITRTCLogCallback.onLog(System.String, trtc.TRTCLogLevel, System.String)
        VB: trtc.ITRTCLogCallback.onLog(System.String, trtc.TRTCLogLevel, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onLog
        path: ''
        startLine: 2445
      summary: "\n14.1 Callback for printing logs\n"
      example: []
      syntax:
        content:
          CSharp: void onLog(string log, TRTCLogLevel level, string module)
          VB: Sub onLog(log As String, level As TRTCLogLevel, module As String)
        parameters:
        - id: log
          type: System.String
          description: Logs
        - id: level
          type: trtc.TRTCLogLevel
          description: Log level. For details, see `TRTCLogLevel`.
        - id: module
          type: System.String
          description: This parameter is not defined yet and has a fixed value of `TXLiteAVSDK` currently.
      overload: trtc.ITRTCLogCallback.onLog*
      modifiers:
        CSharp: []
        VB: []
  - id: trtc.ITXDeviceManager
    commentId: T:trtc.ITXDeviceManager
    language: CSharp
    name:
      CSharp: ITXDeviceManager
      VB: ITXDeviceManager
    nameWithType:
      CSharp: ITXDeviceManager
      VB: ITXDeviceManager
    qualifiedName:
      CSharp: trtc.ITXDeviceManager
      VB: trtc.ITXDeviceManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: ITXDeviceManager
      path: ''
      startLine: 2455
    summary: "\nTRTC device management APIs\n"
    example: []
    syntax:
      content:
        CSharp: public abstract class ITXDeviceManager
        VB: Public MustInherit Class ITXDeviceManager
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: trtc.ITXDeviceManager.isFrontCamera
      commentId: M:trtc.ITXDeviceManager.isFrontCamera
      language: CSharp
      name:
        CSharp: isFrontCamera()
        VB: isFrontCamera()
      nameWithType:
        CSharp: ITXDeviceManager.isFrontCamera()
        VB: ITXDeviceManager.isFrontCamera()
      qualifiedName:
        CSharp: trtc.ITXDeviceManager.isFrontCamera()
        VB: trtc.ITXDeviceManager.isFrontCamera()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: isFrontCamera
        path: ''
        startLine: 2464
      summary: "\nGet whether the front camera is in use\n"
      remarks: "\nThis API is supported only on Android and iOS.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool isFrontCamera()
          VB: Public MustOverride Function isFrontCamera As Boolean
        return:
          type: System.Boolean
      overload: trtc.ITXDeviceManager.isFrontCamera*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXDeviceManager.switchCamera(System.Boolean)
      commentId: M:trtc.ITXDeviceManager.switchCamera(System.Boolean)
      language: CSharp
      name:
        CSharp: switchCamera(Boolean)
        VB: switchCamera(Boolean)
      nameWithType:
        CSharp: ITXDeviceManager.switchCamera(Boolean)
        VB: ITXDeviceManager.switchCamera(Boolean)
      qualifiedName:
        CSharp: trtc.ITXDeviceManager.switchCamera(System.Boolean)
        VB: trtc.ITXDeviceManager.switchCamera(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: switchCamera
        path: ''
        startLine: 2474
      summary: "\nSwitch the camera\n"
      remarks: "\nThis API is supported only on Android and iOS.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int switchCamera(bool frontCamera)
          VB: Public MustOverride Function switchCamera(frontCamera As Boolean) As Integer
        parameters:
        - id: frontCamera
          type: System.Boolean
          description: '`YES`: switch to the front camera; `NO`: switch to the rear camera'
        return:
          type: System.Int32
          description: If `0` is returned, the operation is successful; if a negative value is returned, the operation failed.
      overload: trtc.ITXDeviceManager.switchCamera*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXDeviceManager.getCameraZoomMaxRatio
      commentId: M:trtc.ITXDeviceManager.getCameraZoomMaxRatio
      language: CSharp
      name:
        CSharp: getCameraZoomMaxRatio()
        VB: getCameraZoomMaxRatio()
      nameWithType:
        CSharp: ITXDeviceManager.getCameraZoomMaxRatio()
        VB: ITXDeviceManager.getCameraZoomMaxRatio()
      qualifiedName:
        CSharp: trtc.ITXDeviceManager.getCameraZoomMaxRatio()
        VB: trtc.ITXDeviceManager.getCameraZoomMaxRatio()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: getCameraZoomMaxRatio
        path: ''
        startLine: 2482
      summary: "\nGet the maximum zoom level of the camera\n"
      remarks: "\nThis API is supported only on Android and iOS.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract double getCameraZoomMaxRatio()
          VB: Public MustOverride Function getCameraZoomMaxRatio As Double
        return:
          type: System.Double
          description: ''
      overload: trtc.ITXDeviceManager.getCameraZoomMaxRatio*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXDeviceManager.setCameraZoomRatio(System.Double)
      commentId: M:trtc.ITXDeviceManager.setCameraZoomRatio(System.Double)
      language: CSharp
      name:
        CSharp: setCameraZoomRatio(Double)
        VB: setCameraZoomRatio(Double)
      nameWithType:
        CSharp: ITXDeviceManager.setCameraZoomRatio(Double)
        VB: ITXDeviceManager.setCameraZoomRatio(Double)
      qualifiedName:
        CSharp: trtc.ITXDeviceManager.setCameraZoomRatio(System.Double)
        VB: trtc.ITXDeviceManager.setCameraZoomRatio(System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setCameraZoomRatio
        path: ''
        startLine: 2494
      summary: "\nSet the zoom level of the camera\n@param zoomRatio Value range: 1-5. `1` indicates the widest angle of view (original), and `5` the narrowest angle of view (zoomed in).\nVideo will be blurry if the zoom level exceeds 5. The default value is 1.\n"
      remarks: "\nThis API is supported only on Android and iOS.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int setCameraZoomRatio(double zoomRatio)
          VB: Public MustOverride Function setCameraZoomRatio(zoomRatio As Double) As Integer
        parameters:
        - id: zoomRatio
          type: System.Double
          description: Zoom level
        return:
          type: System.Int32
          description: If `0` is returned, the operation is successful; if a negative value is returned, the operation failed.
      overload: trtc.ITXDeviceManager.setCameraZoomRatio*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXDeviceManager.isAutoFocusEnabled
      commentId: M:trtc.ITXDeviceManager.isAutoFocusEnabled
      language: CSharp
      name:
        CSharp: isAutoFocusEnabled()
        VB: isAutoFocusEnabled()
      nameWithType:
        CSharp: ITXDeviceManager.isAutoFocusEnabled()
        VB: ITXDeviceManager.isAutoFocusEnabled()
      qualifiedName:
        CSharp: trtc.ITXDeviceManager.isAutoFocusEnabled()
        VB: trtc.ITXDeviceManager.isAutoFocusEnabled()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: isAutoFocusEnabled
        path: ''
        startLine: 2503
      summary: "\nGet whether automatic face detection is supported\n"
      remarks: "\nThis API is supported only on Android and iOS.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool isAutoFocusEnabled()
          VB: Public MustOverride Function isAutoFocusEnabled As Boolean
        return:
          type: System.Boolean
          description: ''
      overload: trtc.ITXDeviceManager.isAutoFocusEnabled*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXDeviceManager.enableCameraAutoFocus(System.Boolean)
      commentId: M:trtc.ITXDeviceManager.enableCameraAutoFocus(System.Boolean)
      language: CSharp
      name:
        CSharp: enableCameraAutoFocus(Boolean)
        VB: enableCameraAutoFocus(Boolean)
      nameWithType:
        CSharp: ITXDeviceManager.enableCameraAutoFocus(Boolean)
        VB: ITXDeviceManager.enableCameraAutoFocus(Boolean)
      qualifiedName:
        CSharp: trtc.ITXDeviceManager.enableCameraAutoFocus(System.Boolean)
        VB: trtc.ITXDeviceManager.enableCameraAutoFocus(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: enableCameraAutoFocus
        path: ''
        startLine: 2513
      summary: "\nEnable/Disable automatic face detection\n"
      remarks: "\nThis API is supported only on Android and iOS.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int enableCameraAutoFocus(bool enabled)
          VB: Public MustOverride Function enableCameraAutoFocus(enabled As Boolean) As Integer
        parameters:
        - id: enabled
          type: System.Boolean
          description: '`YES` (default): enable; `NO`: disable'
        return:
          type: System.Int32
          description: If `0` is returned, the operation is successful; if a negative value is returned, the operation failed.
      overload: trtc.ITXDeviceManager.enableCameraAutoFocus*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXDeviceManager.setCameraFocusPosition(System.Int32,System.Int32)
      commentId: M:trtc.ITXDeviceManager.setCameraFocusPosition(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: setCameraFocusPosition(Int32, Int32)
        VB: setCameraFocusPosition(Int32, Int32)
      nameWithType:
        CSharp: ITXDeviceManager.setCameraFocusPosition(Int32, Int32)
        VB: ITXDeviceManager.setCameraFocusPosition(Int32, Int32)
      qualifiedName:
        CSharp: trtc.ITXDeviceManager.setCameraFocusPosition(System.Int32, System.Int32)
        VB: trtc.ITXDeviceManager.setCameraFocusPosition(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setCameraFocusPosition
        path: ''
        startLine: 2525
      summary: "\nSet camera focus\n@param position Focus position\n"
      remarks: "\nThis API is supported only on Android and iOS.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int setCameraFocusPosition(int x, int y)
          VB: Public MustOverride Function setCameraFocusPosition(x As Integer, y As Integer) As Integer
        parameters:
        - id: x
          type: System.Int32
          description: Horizontal coordinate of the focus
        - id: y
          type: System.Int32
          description: Vertical coordinate of the focus
        return:
          type: System.Int32
          description: If `0` is returned, the operation is successful; if a negative value is returned, the operation failed.
      overload: trtc.ITXDeviceManager.setCameraFocusPosition*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXDeviceManager.enableCameraTorch(System.Boolean)
      commentId: M:trtc.ITXDeviceManager.enableCameraTorch(System.Boolean)
      language: CSharp
      name:
        CSharp: enableCameraTorch(Boolean)
        VB: enableCameraTorch(Boolean)
      nameWithType:
        CSharp: ITXDeviceManager.enableCameraTorch(Boolean)
        VB: ITXDeviceManager.enableCameraTorch(Boolean)
      qualifiedName:
        CSharp: trtc.ITXDeviceManager.enableCameraTorch(System.Boolean)
        VB: trtc.ITXDeviceManager.enableCameraTorch(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: enableCameraTorch
        path: ''
        startLine: 2535
      summary: "\nEnable/Disable flash\n"
      remarks: "\nThis API is supported only on Android and iOS.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int enableCameraTorch(bool enabled)
          VB: Public MustOverride Function enableCameraTorch(enabled As Boolean) As Integer
        parameters:
        - id: enabled
          type: System.Boolean
          description: '`YES`: enable; `NO` (default): disable'
        return:
          type: System.Int32
          description: If `0` is returned, the operation is successful; if a negative value is returned, the operation failed.
      overload: trtc.ITXDeviceManager.enableCameraTorch*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXDeviceManager.setSystemVolumeType(trtc.TXSystemVolumeType)
      commentId: M:trtc.ITXDeviceManager.setSystemVolumeType(trtc.TXSystemVolumeType)
      language: CSharp
      name:
        CSharp: setSystemVolumeType(TXSystemVolumeType)
        VB: setSystemVolumeType(TXSystemVolumeType)
      nameWithType:
        CSharp: ITXDeviceManager.setSystemVolumeType(TXSystemVolumeType)
        VB: ITXDeviceManager.setSystemVolumeType(TXSystemVolumeType)
      qualifiedName:
        CSharp: trtc.ITXDeviceManager.setSystemVolumeType(trtc.TXSystemVolumeType)
        VB: trtc.ITXDeviceManager.setSystemVolumeType(trtc.TXSystemVolumeType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setSystemVolumeType
        path: ''
        startLine: 2549
      summary: "\nSet the type of system volume to use during a call\n@note\n1. This API must be called before `startLocalAudio()` to take effect.\n2. You can ignore this API if you don’t have special requirements. Just call `enterRoom`, specifying the scenario, and the SDK will automatically select a system volume type for you.\n@param type System volume type. For more information, please see `TXSystemVolumeType`. You are not advised to set this parameter by yourself unless you have special requirements.\n"
      remarks: "\nThis API is supported only on Android and iOS.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int setSystemVolumeType(TXSystemVolumeType type)
          VB: Public MustOverride Function setSystemVolumeType(type As TXSystemVolumeType) As Integer
        parameters:
        - id: type
          type: trtc.TXSystemVolumeType
          description: System volume type. You are not advised to set this parameter by yourself unless you have special requirements.
        return:
          type: System.Int32
          description: If `0` is returned, the operation is successful; if a negative value is returned, the operation failed.
      overload: trtc.ITXDeviceManager.setSystemVolumeType*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXDeviceManager.setAudioRoute(trtc.TXAudioRoute)
      commentId: M:trtc.ITXDeviceManager.setAudioRoute(trtc.TXAudioRoute)
      language: CSharp
      name:
        CSharp: setAudioRoute(TXAudioRoute)
        VB: setAudioRoute(TXAudioRoute)
      nameWithType:
        CSharp: ITXDeviceManager.setAudioRoute(TXAudioRoute)
        VB: ITXDeviceManager.setAudioRoute(TXAudioRoute)
      qualifiedName:
        CSharp: trtc.ITXDeviceManager.setAudioRoute(trtc.TXAudioRoute)
        VB: trtc.ITXDeviceManager.setAudioRoute(trtc.TXAudioRoute)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setAudioRoute
        path: ''
        startLine: 2562
      summary: "\nSet the audio route\n<p>The audio route concept is behind the hands-free mode of video calls in WeChat and Mobile QQ.</p>\n<p>A mobile phone usually has two speakers: one at the top, whose volume is low, and the other at the bottom, whose volume is high.</p>\n<p>The audio route determines the speaker via which audio is played.</p>\n"
      remarks: "\nThis API is supported only on Android and iOS.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int setAudioRoute(TXAudioRoute route)
          VB: Public MustOverride Function setAudioRoute(route As TXAudioRoute) As Integer
        parameters:
        - id: route
          type: trtc.TXAudioRoute
          description: 'Audio route, i.e., whether to play audio via the speaker or receiver. Default value: `TXAudioRouteSpeakerphone`'
        return:
          type: System.Int32
          description: If `0` is returned, the operation is successful; if a negative value is returned, the operation failed.
      overload: trtc.ITXDeviceManager.setAudioRoute*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: trtc.ITRTCCloud
    commentId: T:trtc.ITRTCCloud
    language: CSharp
    name:
      CSharp: ITRTCCloud
      VB: ITRTCCloud
    nameWithType:
      CSharp: ITRTCCloud
      VB: ITRTCCloud
    qualifiedName:
      CSharp: trtc.ITRTCCloud
      VB: trtc.ITRTCCloud
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: ITRTCCloud
      path: ''
      startLine: 2598
    summary: "\nModule:   ITRTCCloud @ TXLiteAVSDK\n\nSDK VERSION 6.0\n\n<p>Function: TRTC main API classes</p>\n<p>Nouns[1]: primary stream - The channel for camera video is the primary stream.</p>\n<p>Nouns[2]: substream - The channel for screen sharing or VOD play is the substream.</p>\n<p>Nouns[3]: vodplay - TRTC for Windows allows the streaming of a local video file. This feature is known as VOD play.</p>\n"
    example:
    - "\nSample code for creating/using/terminating an `ITRTCCloud` object:\n<pre><code>ITRTCCloud trtcCloud = ITRTCCloud.getTRTCShareInstance();\nif (trtcCloud != null)\n{\nstring version = trtcCloud->getSDKVersion();\n}</code></pre>\nRelease an `ITRTCCloud` singleton object after the process is closed or if the object is no longer needed\n<pre><code>ITRTCCloud.destroyTRTCShareInstance();\ntrtcCloud = NULL;</code></pre>\n"
    syntax:
      content:
        CSharp: public abstract class ITRTCCloud
        VB: Public MustInherit Class ITRTCCloud
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: trtc.ITRTCCloud.getTRTCShareInstance
      commentId: M:trtc.ITRTCCloud.getTRTCShareInstance
      language: CSharp
      name:
        CSharp: getTRTCShareInstance()
        VB: getTRTCShareInstance()
      nameWithType:
        CSharp: ITRTCCloud.getTRTCShareInstance()
        VB: ITRTCCloud.getTRTCShareInstance()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.getTRTCShareInstance()
        VB: trtc.ITRTCCloud.getTRTCShareInstance()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: getTRTCShareInstance
        path: ''
        startLine: 2604
      summary: "\nGet an `ITRTCCloud` singleton object\n"
      example: []
      syntax:
        content:
          CSharp: public static ITRTCCloud getTRTCShareInstance()
          VB: Public Shared Function getTRTCShareInstance As ITRTCCloud
        return:
          type: trtc.ITRTCCloud
          description: Return an `ITRTCCloud` singleton object
      overload: trtc.ITRTCCloud.getTRTCShareInstance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: trtc.ITRTCCloud.destroyTRTCShareInstance
      commentId: M:trtc.ITRTCCloud.destroyTRTCShareInstance
      language: CSharp
      name:
        CSharp: destroyTRTCShareInstance()
        VB: destroyTRTCShareInstance()
      nameWithType:
        CSharp: ITRTCCloud.destroyTRTCShareInstance()
        VB: ITRTCCloud.destroyTRTCShareInstance()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.destroyTRTCShareInstance()
        VB: trtc.ITRTCCloud.destroyTRTCShareInstance()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: destroyTRTCShareInstance
        path: ''
        startLine: 2609
      summary: "\nRelease an `ITRTCCloud` singleton object\n"
      example: []
      syntax:
        content:
          CSharp: public static void destroyTRTCShareInstance()
          VB: Public Shared Sub destroyTRTCShareInstance
      overload: trtc.ITRTCCloud.destroyTRTCShareInstance*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: trtc.ITRTCCloud.addCallback(trtc.ITRTCCloudCallback)
      commentId: M:trtc.ITRTCCloud.addCallback(trtc.ITRTCCloudCallback)
      language: CSharp
      name:
        CSharp: addCallback(ITRTCCloudCallback)
        VB: addCallback(ITRTCCloudCallback)
      nameWithType:
        CSharp: ITRTCCloud.addCallback(ITRTCCloudCallback)
        VB: ITRTCCloud.addCallback(ITRTCCloudCallback)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.addCallback(trtc.ITRTCCloudCallback)
        VB: trtc.ITRTCCloud.addCallback(trtc.ITRTCCloudCallback)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: addCallback
        path: ''
        startLine: 2623
      summary: "\nSet `ITRTCCloudCallback`\n<p>You can use `ITRTCCloudCallback` to receive different status notifications from the SDK. For details, please see the definitions in `TRTCCloudCallback.cs`.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void addCallback(ITRTCCloudCallback callback)
          VB: Public MustOverride Sub addCallback(callback As ITRTCCloudCallback)
        parameters:
        - id: callback
          type: trtc.ITRTCCloudCallback
          description: Event callback
      overload: trtc.ITRTCCloud.addCallback*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.removeCallback(trtc.ITRTCCloudCallback)
      commentId: M:trtc.ITRTCCloud.removeCallback(trtc.ITRTCCloudCallback)
      language: CSharp
      name:
        CSharp: removeCallback(ITRTCCloudCallback)
        VB: removeCallback(ITRTCCloudCallback)
      nameWithType:
        CSharp: ITRTCCloud.removeCallback(ITRTCCloudCallback)
        VB: ITRTCCloud.removeCallback(ITRTCCloudCallback)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.removeCallback(trtc.ITRTCCloudCallback)
        VB: trtc.ITRTCCloud.removeCallback(trtc.ITRTCCloudCallback)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: removeCallback
        path: ''
        startLine: 2629
      summary: "\nRemove event callbacks\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void removeCallback(ITRTCCloudCallback callback)
          VB: Public MustOverride Sub removeCallback(callback As ITRTCCloudCallback)
        parameters:
        - id: callback
          type: trtc.ITRTCCloudCallback
          description: Event callback
      overload: trtc.ITRTCCloud.removeCallback*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.enterRoom(trtc.TRTCParams@,trtc.TRTCAppScene)
      commentId: M:trtc.ITRTCCloud.enterRoom(trtc.TRTCParams@,trtc.TRTCAppScene)
      language: CSharp
      name:
        CSharp: enterRoom(ref TRTCParams, TRTCAppScene)
        VB: enterRoom(ByRef TRTCParams, TRTCAppScene)
      nameWithType:
        CSharp: ITRTCCloud.enterRoom(ref TRTCParams, TRTCAppScene)
        VB: ITRTCCloud.enterRoom(ByRef TRTCParams, TRTCAppScene)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.enterRoom(ref trtc.TRTCParams, trtc.TRTCAppScene)
        VB: trtc.ITRTCCloud.enterRoom(ByRef trtc.TRTCParams, trtc.TRTCAppScene)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: enterRoom
        path: ''
        startLine: 2662
      summary: "\n1.1 Enter a room\n<p>You will receive the `onEnterRoom(result)` callback in `ITRTCCloudCallback`:</p>\n<p>- If room entry succeeds, `result` will be a positive integer (`result` > 0), which indicates the time (ms) it takes to enter the room.</p>\n<p>- If room entry fails, `result` will be a negative integer (`result` &lt; 0), which represents the error code.</p>\n<p>For more information on room entry error codes, please see [Error Codes](https://cloud.tencent.com/document/product/647/32257).</p>\n<p> TRTCAppSceneVideoCall:</p>\n<p>          Video calls support 720p and 1080p HD video. Each room allows up to 300 concurrent users, and up to 50 of them can speak simultaneously.</p>\n<p>          Use cases: [one-to-one video call], [video conferencing with up to 300 participants], [online medical consultation], [video chat], [video interview], etc.</p>\n<p> TRTCAppSceneAudioCall:</p>\n<p>          Audio calls support 48 kHz stereo audio. Each room allows up to 300 concurrent users, and up to 50 of them can speak simultaneously.</p>\n<p>          Use cases: [one-to-one audio call], [audio conferencing with up to 300 participants], [online Werewolf playing], [audio chat room], etc.</p>\n<p>  TRTCAppSceneLIVE:</p>\n<p>          Interactive video streaming allows smooth mic on/off without waiting. Anchor latency is lower than 300 ms and playback latency lower than 1,000 ms. Up to 100,000 users can play the anchor’s video at the same time.</p>\n<p>          Use cases: [interactive classroom], [interactive live streaming], [video dating], [remote training], [large-scale conferencing], etc.</p>\n<p>  TRTCAppSceneVoiceChatRoom:</p>\n<p>          Interactive audio streaming allows smooth mic on/off without waiting. Anchor latency is lower than 300 ms and playback latency lower than 1,000 ms. Up to 100,000 users can play the anchor’s audio at the same time.</p>\n<p>         Use cases: [audio chat room], [karaoke], [FM radio], etc.</p>\n"
      remarks: "\n1. If `scene` is set to `TRTCAppSceneLIVE` or `TRTCAppSceneVoiceChatRoom`, you must select a role for the current user by specifying the `role` field in `TRTCParams`.\n2. After you call `enterRoom`, regardless of whether room entry succeeds, you must call `exitRoom` before calling `enterRoom` again; otherwise, an unexpected error will occur.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void enterRoom(ref TRTCParams param, TRTCAppScene scene)
          VB: Public MustOverride Sub enterRoom(ByRef param As TRTCParams, scene As TRTCAppScene)
        parameters:
        - id: param
          type: trtc.TRTCParams
        - id: scene
          type: trtc.TRTCAppScene
          description: 'Application scenario. TRTC supports four scenarios currently: video call (`VideoCall`), live streaming (`Live`), audio call (`AudioCall`), and audio chat room (`VoiceChatRoom`).'
      overload: trtc.ITRTCCloud.enterRoom*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.exitRoom
      commentId: M:trtc.ITRTCCloud.exitRoom
      language: CSharp
      name:
        CSharp: exitRoom()
        VB: exitRoom()
      nameWithType:
        CSharp: ITRTCCloud.exitRoom()
        VB: ITRTCCloud.exitRoom()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.exitRoom()
        VB: trtc.ITRTCCloud.exitRoom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: exitRoom
        path: ''
        startLine: 2673
      summary: "\n1.2 Leave a room\n\n<p>Calling `exitRoom()` will trigger the execution of room exit-related logic, including releasing resources such as audio/video devices and codecs.</p>\n<p>After all the resources are released, the SDK will send you the `onExitRoom()` callback in `ITRTCCloudCallback`.</p>\n\n<p>If you need to call `enterRoom()` again or switch to another audio/video SDK, please wait until you receive the `onExitRoom()` callback.</p>\n<p>Otherwise, you may encounter problems such as the camera or mic being occupied.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void exitRoom()
          VB: Public MustOverride Sub exitRoom
      overload: trtc.ITRTCCloud.exitRoom*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.switchRole(trtc.TRTCRoleType)
      commentId: M:trtc.ITRTCCloud.switchRole(trtc.TRTCRoleType)
      language: CSharp
      name:
        CSharp: switchRole(TRTCRoleType)
        VB: switchRole(TRTCRoleType)
      nameWithType:
        CSharp: ITRTCCloud.switchRole(TRTCRoleType)
        VB: ITRTCCloud.switchRole(TRTCRoleType)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.switchRole(trtc.TRTCRoleType)
        VB: trtc.ITRTCCloud.switchRole(trtc.TRTCRoleType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: switchRole
        path: ''
        startLine: 2685
      summary: "\n1.3 Switch roles. This API works only in live streaming scenarios (`TRTCAppSceneLIVE` and `TRTCAppSceneVoiceChatRoom`).\n\n<p>In live streaming scenarios, a user may need to switch between the “anchor” and “audience” roles.</p>\n<p>You can set the role during room entry by specifying `role` in `TRTCParams`. You can also call `switchRole` to switch the role after room entry.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void switchRole(TRTCRoleType role)
          VB: Public MustOverride Sub switchRole(role As TRTCRoleType)
        parameters:
        - id: role
          type: trtc.TRTCRoleType
          description: >
            Role, which is “anchor” by default:

            - {@link TRTCRoleAnchor} Anchor, who can send audio and video. Up to 50 users are allowed to send audio and video at the same time in a room.

            - {@link TRTCRoleAudience} Audience, who can play but cannot send audio or video. There is no upper limit on the audience size in a room.
      overload: trtc.ITRTCCloud.switchRole*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.connectOtherRoom(System.String)
      commentId: M:trtc.ITRTCCloud.connectOtherRoom(System.String)
      language: CSharp
      name:
        CSharp: connectOtherRoom(String)
        VB: connectOtherRoom(String)
      nameWithType:
        CSharp: ITRTCCloud.connectOtherRoom(String)
        VB: ITRTCCloud.connectOtherRoom(String)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.connectOtherRoom(System.String)
        VB: trtc.ITRTCCloud.connectOtherRoom(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: connectOtherRoom
        path: ''
        startLine: 2720
      summary: "\nRequest a cross-room call (anchor competition)\n<p>The cross-room call feature allows two anchors from different rooms to call and compete with each other without having to exit their own rooms.</p>\n"
      remarks: "\nThe JsonCpp library is used to format JSON strings.\nJsonData jsonObj =new JsonData();\njsonObj[&quot;roomId&quot;] = 1908;\njsonObj[&quot;userId&quot;] = &quot;345&quot;;\nstring jsonData = JsonMapper.ToJson(jsonObj);\nmTRTCCloud.connectOtherRoom(jsonData);\n"
      example:
      - "\n<pre><code>    For example, after anchor A in room 001 uses `connectOtherRoom()` to successfully call anchor B in room 002, all users in room 001 will receive the `onUserEnter(B)` and `onUserVideoAvailable(B,true)` callbacks, and all users in room 002 will receive the `onUserEnter(A)` and `onUserVideoAvailable(A,true)` callbacks.\n    In essence, a cross-room call is sharing the audio and video of two anchors in different rooms to each other so that the audiences in both rooms can see two anchors.\n                        Room 001                     Room 002\n              -------------               ------------\n   Before cross-room call:| Anchor A      |             | Anchor B     |\n             | Audience U, V, and W  |             | Audience X, Y, and Z |\n              -------------               ------------\n                Room 001                     Room 002\n              -------------               ------------\n   After cross-room call: | Anchors A and B    |             | Anchors B and A   |\n             | Audience U, V, and W  |             | Audience X, Y, and Z |\n              -------------               ------------\nTo ensure the compatibility of extended parameters for the cross-room call API, the JSON format is used for the parameters, which must contain at least two fields:\n`roomId`: If anchor A in room 001 wants to call anchor B in room 002, he or she must set `roomId` to `002` when calling `connectOtherRoom()`.\n`userId`: If anchor A in room 001 wants to call anchor B in room 002, he or she must set `userId` to the user ID of anchor B when calling `connectOtherRoom()`.\nThe result is returned through the `onConnectOtherRoom()` callback in `ITRTCCloudCallback`.</code></pre>\n"
      syntax:
        content:
          CSharp: public abstract void connectOtherRoom(string jsonParams)
          VB: Public MustOverride Sub connectOtherRoom(jsonParams As String)
        parameters:
        - id: jsonParams
          type: System.String
          description: JSON-string parameters, in which `roomId` is the room ID of the anchor to call and `userId` the user ID of the anchor to call
      overload: trtc.ITRTCCloud.connectOtherRoom*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.disconnectOtherRoom
      commentId: M:trtc.ITRTCCloud.disconnectOtherRoom
      language: CSharp
      name:
        CSharp: disconnectOtherRoom()
        VB: disconnectOtherRoom()
      nameWithType:
        CSharp: ITRTCCloud.disconnectOtherRoom()
        VB: ITRTCCloud.disconnectOtherRoom()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.disconnectOtherRoom()
        VB: trtc.ITRTCCloud.disconnectOtherRoom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: disconnectOtherRoom
        path: ''
        startLine: 2727
      summary: "\nEnd a cross-room call\n<p> The result is returned through the `onDisconnectOtherRoom()` callback in `ITRTCCloudCallback`.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void disconnectOtherRoom()
          VB: Public MustOverride Sub disconnectOtherRoom
      overload: trtc.ITRTCCloud.disconnectOtherRoom*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.switchRoom(trtc.TRTCSwitchRoomConfig)
      commentId: M:trtc.ITRTCCloud.switchRoom(trtc.TRTCSwitchRoomConfig)
      language: CSharp
      name:
        CSharp: switchRoom(TRTCSwitchRoomConfig)
        VB: switchRoom(TRTCSwitchRoomConfig)
      nameWithType:
        CSharp: ITRTCCloud.switchRoom(TRTCSwitchRoomConfig)
        VB: ITRTCCloud.switchRoom(TRTCSwitchRoomConfig)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.switchRoom(trtc.TRTCSwitchRoomConfig)
        VB: trtc.ITRTCCloud.switchRoom(trtc.TRTCSwitchRoomConfig)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: switchRoom
        path: ''
        startLine: 2735
      summary: "\nSwitch rooms\n<p> After calling this API, the user will leave the current room and immediately enter the room specified in `TRTCSwitchRoomConfig`. This API is easier to use than `exitRoom` + `enterRoom`.</p>\n<p> It does not stop the user’s video capturing or preview. The result is returned through the `onSwitchRoom(errCode, errMsg)` callback in `ITRTCCloudCallback`.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void switchRoom(TRTCSwitchRoomConfig config)
          VB: Public MustOverride Sub switchRoom(config As TRTCSwitchRoomConfig)
        parameters:
        - id: config
          type: trtc.TRTCSwitchRoomConfig
          description: Room switching parameters. For details, please see `TRTCSwitchRoomConfig`.
      overload: trtc.ITRTCCloud.switchRoom*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setDefaultStreamRecvMode(System.Boolean,System.Boolean)
      commentId: M:trtc.ITRTCCloud.setDefaultStreamRecvMode(System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: setDefaultStreamRecvMode(Boolean, Boolean)
        VB: setDefaultStreamRecvMode(Boolean, Boolean)
      nameWithType:
        CSharp: ITRTCCloud.setDefaultStreamRecvMode(Boolean, Boolean)
        VB: ITRTCCloud.setDefaultStreamRecvMode(Boolean, Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setDefaultStreamRecvMode(System.Boolean, System.Boolean)
        VB: trtc.ITRTCCloud.setDefaultStreamRecvMode(System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setDefaultStreamRecvMode
        path: ''
        startLine: 2746
      summary: "\nSet the audio/video data receiving mode\n<p>It must be set before room entry to take effect.</p>\n"
      remarks: "\nTo ensure instant streaming, the SDK automatically receives audio/video upon successful room entry. This means you will receive the audio and video data of all remote users right after you enter a room. If you do not call `startRemoteView`, video data will be automatically canceled after the timeout period elapses. If your application scenario involves only audio (e.g., audio chat), you can use this API to disable the automatic receiving mode for video to reduce your costs.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setDefaultStreamRecvMode(bool autoRecvAudio, bool autoRecvVideo)
          VB: Public MustOverride Sub setDefaultStreamRecvMode(autoRecvAudio As Boolean, autoRecvVideo As Boolean)
        parameters:
        - id: autoRecvAudio
          type: System.Boolean
          description: '`true` (default): receive audio data automatically; `false`: call `muteRemoteAudio` to receive or stop receiving audio data'
        - id: autoRecvVideo
          type: System.Boolean
          description: '`true` (default): receive video data automatically; `false`: call `startRemoteView`/`stopRemoteView` to receive or stop receiving video data'
      overload: trtc.ITRTCCloud.setDefaultStreamRecvMode*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.startPublishing(System.String,trtc.TRTCVideoStreamType)
      commentId: M:trtc.ITRTCCloud.startPublishing(System.String,trtc.TRTCVideoStreamType)
      language: CSharp
      name:
        CSharp: startPublishing(String, TRTCVideoStreamType)
        VB: startPublishing(String, TRTCVideoStreamType)
      nameWithType:
        CSharp: ITRTCCloud.startPublishing(String, TRTCVideoStreamType)
        VB: ITRTCCloud.startPublishing(String, TRTCVideoStreamType)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.startPublishing(System.String, trtc.TRTCVideoStreamType)
        VB: trtc.ITRTCCloud.startPublishing(System.String, trtc.TRTCVideoStreamType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: startPublishing
        path: ''
        startLine: 2781
      summary: "\n2.1 Start publishing to Tencent Cloud’s live streaming CDN\n\n<p>When calling this API, you need to specify a `StreamId` for the current user in Tencent Cloud’s CDN, which is used to splice the CDN playback address of the user.</p>\n\n<p>For example, if you use the code below to set the `StreamId` of the current user&apos;s primary stream to `user_stream_001`, the CDN playback address of the user’s primary stream will be:</p>\n<p>&quot;http://yourdomain/live/user_stream_001.flv&quot;, where `yourdomain` is the domain name you use for playback.</p>\n<p>You can configure your playback domain name in the [CSS console](https://console.cloud.tencent.com/live). Tencent Cloud doesn&apos;t provide a default playback domain name.</p>\n<p>You can also specify `streamId` in `TRTCParams` when calling `enterRoom`. This method is recommended.</p>\n"
      remarks: "\nTo play streams via CDNs, you need to enable relayed push on the &quot;Function Configuration&quot; page of the [TRTC console](https://console.cloud.tencent.com/trtc).\n- If you select &quot;Specified stream for relayed push&quot;, you can use this API to publish a stream to Tencent Cloud’s CDN and specify a stream ID for it.\n- If you select &quot;Global auto-relayed push&quot;, you can use this API to change the default stream ID.\n"
      example:
      - "\n<pre><code>ITRTCCloud trtcCloud = ITRTCCloud.getTRTCShareInstance();\ntrtcCloud.enterRoom(params, TRTCAppScene.TRTCAppSceneLIVE);\ntrtcCloud.startLocalPreview(System.Object);\ntrtcCloud.startLocalAudio();\ntrtcCloud.startPublishing(&quot;user_stream_001&quot;, TRTCVideoStreamType.TRTCVideoStreamTypeBig);</code></pre>\n"
      syntax:
        content:
          CSharp: public abstract void startPublishing(string streamId, TRTCVideoStreamType type)
          VB: Public MustOverride Sub startPublishing(streamId As String, type As TRTCVideoStreamType)
        parameters:
        - id: streamId
          type: System.String
          description: Custom stream ID
        - id: type
          type: trtc.TRTCVideoStreamType
          description: Only `TRTCVideoStreamTypeBig` and `TRTCVideoStreamTypeSub` are supported.
      overload: trtc.ITRTCCloud.startPublishing*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.stopPublishing
      commentId: M:trtc.ITRTCCloud.stopPublishing
      language: CSharp
      name:
        CSharp: stopPublishing()
        VB: stopPublishing()
      nameWithType:
        CSharp: ITRTCCloud.stopPublishing()
        VB: ITRTCCloud.stopPublishing()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.stopPublishing()
        VB: trtc.ITRTCCloud.stopPublishing()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: stopPublishing
        path: ''
        startLine: 2786
      summary: "\n2.2 Stop publishing to Tencent Cloud’s live streaming CDN\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void stopPublishing()
          VB: Public MustOverride Sub stopPublishing
      overload: trtc.ITRTCCloud.stopPublishing*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.startPublishCDNStream(trtc.TRTCPublishCDNParam)
      commentId: M:trtc.ITRTCCloud.startPublishCDNStream(trtc.TRTCPublishCDNParam)
      language: CSharp
      name:
        CSharp: startPublishCDNStream(TRTCPublishCDNParam)
        VB: startPublishCDNStream(TRTCPublishCDNParam)
      nameWithType:
        CSharp: ITRTCCloud.startPublishCDNStream(TRTCPublishCDNParam)
        VB: ITRTCCloud.startPublishCDNStream(TRTCPublishCDNParam)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.startPublishCDNStream(trtc.TRTCPublishCDNParam)
        VB: trtc.ITRTCCloud.startPublishCDNStream(trtc.TRTCPublishCDNParam)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: startPublishCDNStream
        path: ''
        startLine: 2792
      summary: "\n2.3 Start publishing to the live streaming CDN of a non-Tencent Cloud vendor (not supported on Windows)\nThe `startPublishCDNStream()` API is similar to `startPublishing()`, but it supports relaying to the live streaming CDN of a non-Tencent Cloud vendor.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void startPublishCDNStream(TRTCPublishCDNParam param)
          VB: Public MustOverride Sub startPublishCDNStream(param As TRTCPublishCDNParam)
        parameters:
        - id: param
          type: trtc.TRTCPublishCDNParam
      overload: trtc.ITRTCCloud.startPublishCDNStream*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.stopPublishCDNStream
      commentId: M:trtc.ITRTCCloud.stopPublishCDNStream
      language: CSharp
      name:
        CSharp: stopPublishCDNStream()
        VB: stopPublishCDNStream()
      nameWithType:
        CSharp: ITRTCCloud.stopPublishCDNStream()
        VB: ITRTCCloud.stopPublishCDNStream()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.stopPublishCDNStream()
        VB: trtc.ITRTCCloud.stopPublishCDNStream()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: stopPublishCDNStream
        path: ''
        startLine: 2797
      summary: "\n2.4 Stop publishing to the live streaming CDN of a non-Tencent Cloud vendor (not supported on Windows)\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void stopPublishCDNStream()
          VB: Public MustOverride Sub stopPublishCDNStream
      overload: trtc.ITRTCCloud.stopPublishCDNStream*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setMixTranscodingConfig(System.Nullable{trtc.TRTCTranscodingConfig})
      commentId: M:trtc.ITRTCCloud.setMixTranscodingConfig(System.Nullable{trtc.TRTCTranscodingConfig})
      language: CSharp
      name:
        CSharp: setMixTranscodingConfig(Nullable<TRTCTranscodingConfig>)
        VB: setMixTranscodingConfig(Nullable(Of TRTCTranscodingConfig))
      nameWithType:
        CSharp: ITRTCCloud.setMixTranscodingConfig(Nullable<TRTCTranscodingConfig>)
        VB: ITRTCCloud.setMixTranscodingConfig(Nullable(Of TRTCTranscodingConfig))
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setMixTranscodingConfig(System.Nullable<trtc.TRTCTranscodingConfig>)
        VB: trtc.ITRTCCloud.setMixTranscodingConfig(System.Nullable(Of trtc.TRTCTranscodingConfig))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setMixTranscodingConfig
        path: ''
        startLine: 2833
      summary: "\nSet On-Cloud MixTranscoding parameters (not supported on Windows)\n"
      remarks: "\nNotes:\n  On-Cloud MixTranscoding will increase the delay of CDN live streaming by about 1-2 seconds.\n   If you call this API, the streams of co-anchors will be mixed into your stream or the stream whose `streamId` is specified in `config`.\n   If you are still in the room but do not need to mix streams any more, make sure that you pass in `nullptr` to cancel On-Cloud MixTranscoding. The On-Cloud MixTranscoding module starts working the moment you enable On-Cloud MixTranscoding. You may incur additional costs if you do not cancel it in a timely manner.\n   When you leave the room, mixing will be canceled automatically.\n"
      example:
      - "\n<p>\nIf you enable relayed push on the &quot;Function Configuration&quot; page of the TRTC console, each stream in a room will have a default CDN playback address.\n</p>\n<p>\nThere may be multiple anchors in a room, each sending their own video and audio, but CDN audience needs only one live stream. Therefore, you need to mix multiple audio/video streams into one standard live stream, which requires mixtranscoding.\n</p>\n<p>\nWhen you call the `setMixTranscodingConfig()` API, the SDK will send a command to the Tencent Cloud transcoding server to mix multiple audio/video streams in the room into one stream. You can use the `mixUsers` parameter to set the position of each channel of image and specify whether to mix only audio. You can also set the encoding parameters of the mixed stream, including `videoWidth`, `videoHeight`, and `videoBitrate`.\n</p>\n<pre><code>**Image 1** => decoding ====> \\\n                       \\\n**Image 2**=> decoding =>  image mixing => encoding => **mixed image**\n                       /\n**Image 3** => decoding ====> /\n**Audio 1** => decoding ====> \\\n                       \\\n**Audio 2** => decoding => audio mixing => encoding => **mixed audio**\n                       /\n**Audio 3** => decoding ====> /</code></pre>\n"
      syntax:
        content:
          CSharp: public abstract void setMixTranscodingConfig(TRTCTranscodingConfig? config)
          VB: Public MustOverride Sub setMixTranscodingConfig(config As TRTCTranscodingConfig?)
        parameters:
        - id: config
          type: System.Nullable{trtc.TRTCTranscodingConfig}
          description: For more information, please see the description of `TRTCTranscodingConfig` in `TRTCTypeDef.h`. If `nullptr` is passed in, On-Cloud MixTranscoding will be canceled.
      overload: trtc.ITRTCCloud.setMixTranscodingConfig*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.startLocalPreview(System.Boolean,System.Object)
      commentId: M:trtc.ITRTCCloud.startLocalPreview(System.Boolean,System.Object)
      language: CSharp
      name:
        CSharp: startLocalPreview(Boolean, Object)
        VB: startLocalPreview(Boolean, Object)
      nameWithType:
        CSharp: ITRTCCloud.startLocalPreview(Boolean, Object)
        VB: ITRTCCloud.startLocalPreview(Boolean, Object)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.startLocalPreview(System.Boolean, System.Object)
        VB: trtc.ITRTCCloud.startLocalPreview(System.Boolean, System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: startLocalPreview
        path: ''
        startLine: 2858
      summary: "\n3.1 Enable local video preview\n"
      remarks: "\nOnly custom video rendering is supported currently. You need to call `setLocalVideoRenderCallback` first and then `startLocalPreview` to publish the local stream. The video frames will be returned via the `onRenderFrame` callback.\n<p>Rendering method: new Texture2D((int)_textureWidth, (int)_textureHeight, TextureFormat.BGRA32, false);</p>\nFor more information, refer to `Demo/TRTCVideoRender.cs`.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void startLocalPreview(bool frontCamera, object rendObj)
          VB: Public MustOverride Sub startLocalPreview(frontCamera As Boolean, rendObj As Object)
        parameters:
        - id: frontCamera
          type: System.Boolean
          description: '`true`: front camera; `false`: rear camera. This parameter takes effect only on Android and iOS. The front camera is used by default on Windows.'
        - id: rendObj
          type: System.Object
          description: Only custom rendering is supported currently. Set this parameter to `null`.
      overload: trtc.ITRTCCloud.startLocalPreview*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.GetVideoRenderData(System.String,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Boolean)
      commentId: M:trtc.ITRTCCloud.GetVideoRenderData(System.String,System.Int32@,System.Int32@,System.Int32@,System.Int32@,System.Boolean)
      language: CSharp
      name:
        CSharp: GetVideoRenderData(String, ref Int32, ref Int32, ref Int32, ref Int32, Boolean)
        VB: GetVideoRenderData(String, ByRef Int32, ByRef Int32, ByRef Int32, ByRef Int32, Boolean)
      nameWithType:
        CSharp: ITRTCCloud.GetVideoRenderData(String, ref Int32, ref Int32, ref Int32, ref Int32, Boolean)
        VB: ITRTCCloud.GetVideoRenderData(String, ByRef Int32, ByRef Int32, ByRef Int32, ByRef Int32, Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.GetVideoRenderData(System.String, ref System.Int32, ref System.Int32, ref System.Int32, ref System.Int32, System.Boolean)
        VB: trtc.ITRTCCloud.GetVideoRenderData(System.String, ByRef System.Int32, ByRef System.Int32, ByRef System.Int32, ByRef System.Int32, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: GetVideoRenderData
        path: ''
        startLine: 2860
      syntax:
        content:
          CSharp: public abstract IntPtr GetVideoRenderData(string userId, ref int rotation, ref int width, ref int height, ref int length, bool isNeedDestroy)
          VB: Public MustOverride Function GetVideoRenderData(userId As String, ByRef rotation As Integer, ByRef width As Integer, ByRef height As Integer, ByRef length As Integer, isNeedDestroy As Boolean) As IntPtr
        parameters:
        - id: userId
          type: System.String
        - id: rotation
          type: System.Int32
        - id: width
          type: System.Int32
        - id: height
          type: System.Int32
        - id: length
          type: System.Int32
        - id: isNeedDestroy
          type: System.Boolean
        return:
          type: IntPtr
      overload: trtc.ITRTCCloud.GetVideoRenderData*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.stopLocalPreview
      commentId: M:trtc.ITRTCCloud.stopLocalPreview
      language: CSharp
      name:
        CSharp: stopLocalPreview()
        VB: stopLocalPreview()
      nameWithType:
        CSharp: ITRTCCloud.stopLocalPreview()
        VB: ITRTCCloud.stopLocalPreview()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.stopLocalPreview()
        VB: trtc.ITRTCCloud.stopLocalPreview()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: stopLocalPreview
        path: ''
        startLine: 2865
      summary: "\n3.2 Stop local video capturing and preview\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void stopLocalPreview()
          VB: Public MustOverride Sub stopLocalPreview
      overload: trtc.ITRTCCloud.stopLocalPreview*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.muteLocalVideo(System.Boolean)
      commentId: M:trtc.ITRTCCloud.muteLocalVideo(System.Boolean)
      language: CSharp
      name:
        CSharp: muteLocalVideo(Boolean)
        VB: muteLocalVideo(Boolean)
      nameWithType:
        CSharp: ITRTCCloud.muteLocalVideo(Boolean)
        VB: ITRTCCloud.muteLocalVideo(Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.muteLocalVideo(System.Boolean)
        VB: trtc.ITRTCCloud.muteLocalVideo(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: muteLocalVideo
        path: ''
        startLine: 2874
      summary: "\n3.3 Pause/Resume publishing local video\n\n<p>After a user pauses publishing local video, other users in the room will receive the `onUserVideoAvailable(userId, false)` callback.</p>\n<p>After a user resumes publishing local video, other users in the room will receive the `onUserVideoAvailable(userId, true)` callback.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void muteLocalVideo(bool mute)
          VB: Public MustOverride Sub muteLocalVideo(mute As Boolean)
        parameters:
        - id: mute
          type: System.Boolean
          description: '`true`: pause; `false` (default): resume'
      overload: trtc.ITRTCCloud.muteLocalVideo*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.startRemoteView(System.String,trtc.TRTCVideoStreamType,System.Object)
      commentId: M:trtc.ITRTCCloud.startRemoteView(System.String,trtc.TRTCVideoStreamType,System.Object)
      language: CSharp
      name:
        CSharp: startRemoteView(String, TRTCVideoStreamType, Object)
        VB: startRemoteView(String, TRTCVideoStreamType, Object)
      nameWithType:
        CSharp: ITRTCCloud.startRemoteView(String, TRTCVideoStreamType, Object)
        VB: ITRTCCloud.startRemoteView(String, TRTCVideoStreamType, Object)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.startRemoteView(System.String, trtc.TRTCVideoStreamType, System.Object)
        VB: trtc.ITRTCCloud.startRemoteView(System.String, trtc.TRTCVideoStreamType, System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: startRemoteView
        path: ''
        startLine: 2895
      summary: "\n3.4 Start playing the video of a remote user\n<p>\nThe `onUserVideoAvailable(userId, true)` callback indicates that a remote user has enabled video.\nAfter receiving this callback, call `startRemoteView(userId)` to load the user’s video. You can use a loading animation to improve user experience during the waiting period.\nWhen the first video frame of the remote user is rendered, you will receive the `onFirstVideoFrame(userId)` callback.\n</p>\n"
      remarks: "\nOnly custom video rendering is supported currently. You need to call `setRemoteVideoRenderCallback` first and then `startRemoteView` to pull the remote stream. The video frames will be returned via the `onRenderFrame` callback.\n<p>Rendering method: new Texture2D((int)_textureWidth, (int)_textureHeight, TextureFormat.BGRA32, false);</p>\nFor more information, refer to `Demo/TRTCVideoRender.cs`.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void startRemoteView(string userId, TRTCVideoStreamType streamType, object rendObj)
          VB: Public MustOverride Sub startRemoteView(userId As String, streamType As TRTCVideoStreamType, rendObj As Object)
        parameters:
        - id: userId
          type: System.String
          description: User ID of the remote user
        - id: streamType
          type: trtc.TRTCVideoStreamType
          description: >
            Type of the remote user’s stream to play:

            - HD big image: {@link TRTCVideoStreamTypeBig}

            - Smooth small image: {@link TRTCVideoStreamTypeSmall}
        - id: rendObj
          type: System.Object
          description: Only custom rendering is supported currently. Set this parameter to `null`.
      overload: trtc.ITRTCCloud.startRemoteView*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.stopRemoteView(System.String,trtc.TRTCVideoStreamType)
      commentId: M:trtc.ITRTCCloud.stopRemoteView(System.String,trtc.TRTCVideoStreamType)
      language: CSharp
      name:
        CSharp: stopRemoteView(String, TRTCVideoStreamType)
        VB: stopRemoteView(String, TRTCVideoStreamType)
      nameWithType:
        CSharp: ITRTCCloud.stopRemoteView(String, TRTCVideoStreamType)
        VB: ITRTCCloud.stopRemoteView(String, TRTCVideoStreamType)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.stopRemoteView(System.String, trtc.TRTCVideoStreamType)
        VB: trtc.ITRTCCloud.stopRemoteView(System.String, trtc.TRTCVideoStreamType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: stopRemoteView
        path: ''
        startLine: 2907
      summary: "\n3.5 Stop playing and pulling the video of a remote user\n\n<p>After this API is called, the SDK will stop receiving the video of the specified user and release the resources used to display the video.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void stopRemoteView(string userId, TRTCVideoStreamType streamType)
          VB: Public MustOverride Sub stopRemoteView(userId As String, streamType As TRTCVideoStreamType)
        parameters:
        - id: userId
          type: System.String
          description: User ID of the remote user
        - id: streamType
          type: trtc.TRTCVideoStreamType
          description: >
            Type of the remote user’s stream to stop playing:

            - HD big image: {@link TRTCVideoStreamTypeBig}

            - Smooth small image: {@link TRTCVideoStreamTypeSmall}
      overload: trtc.ITRTCCloud.stopRemoteView*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.stopAllRemoteView
      commentId: M:trtc.ITRTCCloud.stopAllRemoteView
      language: CSharp
      name:
        CSharp: stopAllRemoteView()
        VB: stopAllRemoteView()
      nameWithType:
        CSharp: ITRTCCloud.stopAllRemoteView()
        VB: ITRTCCloud.stopAllRemoteView()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.stopAllRemoteView()
        VB: trtc.ITRTCCloud.stopAllRemoteView()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: stopAllRemoteView
        path: ''
        startLine: 2915
      summary: "\nStop playing and pulling the videos of all remote users\n"
      remarks: "\nThe playing and pulling of the screen sharing stream, if any, will stop too.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void stopAllRemoteView()
          VB: Public MustOverride Sub stopAllRemoteView
      overload: trtc.ITRTCCloud.stopAllRemoteView*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.muteRemoteVideoStream(System.String,System.Boolean)
      commentId: M:trtc.ITRTCCloud.muteRemoteVideoStream(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: muteRemoteVideoStream(String, Boolean)
        VB: muteRemoteVideoStream(String, Boolean)
      nameWithType:
        CSharp: ITRTCCloud.muteRemoteVideoStream(String, Boolean)
        VB: ITRTCCloud.muteRemoteVideoStream(String, Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.muteRemoteVideoStream(System.String, System.Boolean)
        VB: trtc.ITRTCCloud.muteRemoteVideoStream(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: muteRemoteVideoStream
        path: ''
        startLine: 2924
      summary: "\nPause/Resume receiving the video of a remote user\n\n<p>This API will pause/resume receiving the video of the specified remote user, but will not release the resources used to display the video. After pause, the last frame of video before the pause will be displayed.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void muteRemoteVideoStream(string userId, bool mute)
          VB: Public MustOverride Sub muteRemoteVideoStream(userId As String, mute As Boolean)
        parameters:
        - id: userId
          type: System.String
          description: User ID of the remote user
        - id: mute
          type: System.Boolean
          description: Whether to pause receiving video
      overload: trtc.ITRTCCloud.muteRemoteVideoStream*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.muteAllRemoteVideoStreams(System.Boolean)
      commentId: M:trtc.ITRTCCloud.muteAllRemoteVideoStreams(System.Boolean)
      language: CSharp
      name:
        CSharp: muteAllRemoteVideoStreams(Boolean)
        VB: muteAllRemoteVideoStreams(Boolean)
      nameWithType:
        CSharp: ITRTCCloud.muteAllRemoteVideoStreams(Boolean)
        VB: ITRTCCloud.muteAllRemoteVideoStreams(Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.muteAllRemoteVideoStreams(System.Boolean)
        VB: trtc.ITRTCCloud.muteAllRemoteVideoStreams(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: muteAllRemoteVideoStreams
        path: ''
        startLine: 2931
      summary: "\nPause/Resume receiving the videos of all remote users\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void muteAllRemoteVideoStreams(bool mute)
          VB: Public MustOverride Sub muteAllRemoteVideoStreams(mute As Boolean)
        parameters:
        - id: mute
          type: System.Boolean
          description: Whether to pause receiving video
      overload: trtc.ITRTCCloud.muteAllRemoteVideoStreams*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setVideoEncoderParam(trtc.TRTCVideoEncParam@)
      commentId: M:trtc.ITRTCCloud.setVideoEncoderParam(trtc.TRTCVideoEncParam@)
      language: CSharp
      name:
        CSharp: setVideoEncoderParam(ref TRTCVideoEncParam)
        VB: setVideoEncoderParam(ByRef TRTCVideoEncParam)
      nameWithType:
        CSharp: ITRTCCloud.setVideoEncoderParam(ref TRTCVideoEncParam)
        VB: ITRTCCloud.setVideoEncoderParam(ByRef TRTCVideoEncParam)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setVideoEncoderParam(ref trtc.TRTCVideoEncParam)
        VB: trtc.ITRTCCloud.setVideoEncoderParam(ByRef trtc.TRTCVideoEncParam)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setVideoEncoderParam
        path: ''
        startLine: 2939
      summary: "\n3.9 Set video encoder parameters (not supported on Android and iOS)\n\n<p>Encoder parameters determine the quality of video watched by remote users and recorded in the cloud.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setVideoEncoderParam(ref TRTCVideoEncParam param)
          VB: Public MustOverride Sub setVideoEncoderParam(ByRef param As TRTCVideoEncParam)
        parameters:
        - id: param
          type: trtc.TRTCVideoEncParam
      overload: trtc.ITRTCCloud.setVideoEncoderParam*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setNetworkQosParam(trtc.TRTCNetworkQosParam@)
      commentId: M:trtc.ITRTCCloud.setNetworkQosParam(trtc.TRTCNetworkQosParam@)
      language: CSharp
      name:
        CSharp: setNetworkQosParam(ref TRTCNetworkQosParam)
        VB: setNetworkQosParam(ByRef TRTCNetworkQosParam)
      nameWithType:
        CSharp: ITRTCCloud.setNetworkQosParam(ref TRTCNetworkQosParam)
        VB: ITRTCCloud.setNetworkQosParam(ByRef TRTCNetworkQosParam)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setNetworkQosParam(ref trtc.TRTCNetworkQosParam)
        VB: trtc.ITRTCCloud.setNetworkQosParam(ByRef trtc.TRTCNetworkQosParam)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setNetworkQosParam
        path: ''
        startLine: 2947
      summary: "\nSet QoS parameters\n\n<p>The setting determines the SDK’s QoS policy under different network conditions, for example, whether to prioritize clarity or smoothness under poor network conditions.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setNetworkQosParam(ref TRTCNetworkQosParam param)
          VB: Public MustOverride Sub setNetworkQosParam(ByRef param As TRTCNetworkQosParam)
        parameters:
        - id: param
          type: trtc.TRTCNetworkQosParam
      overload: trtc.ITRTCCloud.setNetworkQosParam*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setVideoEncoderMirror(System.Boolean)
      commentId: M:trtc.ITRTCCloud.setVideoEncoderMirror(System.Boolean)
      language: CSharp
      name:
        CSharp: setVideoEncoderMirror(Boolean)
        VB: setVideoEncoderMirror(Boolean)
      nameWithType:
        CSharp: ITRTCCloud.setVideoEncoderMirror(Boolean)
        VB: ITRTCCloud.setVideoEncoderMirror(Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setVideoEncoderMirror(System.Boolean)
        VB: trtc.ITRTCCloud.setVideoEncoderMirror(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setVideoEncoderMirror
        path: ''
        startLine: 2956
      summary: "\nSet the mirror mode of encoded video (not supported on Windows)\n"
      remarks: "\nThis API does not change the mirror mode of local video preview, but affects the video presented to remote users and recorded by the server.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setVideoEncoderMirror(bool mirror)
          VB: Public MustOverride Sub setVideoEncoderMirror(mirror As Boolean)
        parameters:
        - id: mirror
          type: System.Boolean
          description: 'Whether to mirror video for remote users. `true`: mirror; `false` (default): do not mirror'
      overload: trtc.ITRTCCloud.setVideoEncoderMirror*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.enableSmallVideoStream(System.Boolean,trtc.TRTCVideoEncParam@)
      commentId: M:trtc.ITRTCCloud.enableSmallVideoStream(System.Boolean,trtc.TRTCVideoEncParam@)
      language: CSharp
      name:
        CSharp: enableSmallVideoStream(Boolean, ref TRTCVideoEncParam)
        VB: enableSmallVideoStream(Boolean, ByRef TRTCVideoEncParam)
      nameWithType:
        CSharp: ITRTCCloud.enableSmallVideoStream(Boolean, ref TRTCVideoEncParam)
        VB: ITRTCCloud.enableSmallVideoStream(Boolean, ByRef TRTCVideoEncParam)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.enableSmallVideoStream(System.Boolean, ref trtc.TRTCVideoEncParam)
        VB: trtc.ITRTCCloud.enableSmallVideoStream(System.Boolean, ByRef trtc.TRTCVideoEncParam)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: enableSmallVideoStream
        path: ''
        startLine: 2971
      summary: "\nEnable/Disable dual-channel (big and small images) encoding\n"
      remarks: "\n<pre><code>You can enable the dual-channel encoding mode for users in the major role (such as anchor, teacher, or host) and using PC or Mac. In this mode, a user will output one audio stream and two video streams: an **HD** stream and a **smooth** stream. This mode consumes more bandwidth and CPU computing resources.\nFor the audience in the room:\n    Select the **HD** stream to watch if the user’s downstream network conditions are good.\n    Select the **smooth** stream to watch if the user’s downstream network conditions are poor.</code></pre>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void enableSmallVideoStream(bool enable, ref TRTCVideoEncParam smallVideoParam)
          VB: Public MustOverride Sub enableSmallVideoStream(enable As Boolean, ByRef smallVideoParam As TRTCVideoEncParam)
        parameters:
        - id: enable
          type: System.Boolean
          description: 'Whether to enable dual-channel encoding. Default value: `false`'
        - id: smallVideoParam
          type: trtc.TRTCVideoEncParam
          description: Parameters of the small image
      overload: trtc.ITRTCCloud.enableSmallVideoStream*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setRemoteVideoStreamType(System.String,trtc.TRTCVideoStreamType)
      commentId: M:trtc.ITRTCCloud.setRemoteVideoStreamType(System.String,trtc.TRTCVideoStreamType)
      language: CSharp
      name:
        CSharp: setRemoteVideoStreamType(String, TRTCVideoStreamType)
        VB: setRemoteVideoStreamType(String, TRTCVideoStreamType)
      nameWithType:
        CSharp: ITRTCCloud.setRemoteVideoStreamType(String, TRTCVideoStreamType)
        VB: ITRTCCloud.setRemoteVideoStreamType(String, TRTCVideoStreamType)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setRemoteVideoStreamType(System.String, trtc.TRTCVideoStreamType)
        VB: trtc.ITRTCCloud.setRemoteVideoStreamType(System.String, trtc.TRTCVideoStreamType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setRemoteVideoStreamType
        path: ''
        startLine: 2981
      summary: "\nSpecify whether to play a remote user’s big or small image\n"
      remarks: "\nFor this API to work, the remote user must first call `enableEncSmallVideoStream` to enable dual-channel encoding.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setRemoteVideoStreamType(string userId, TRTCVideoStreamType type)
          VB: Public MustOverride Sub setRemoteVideoStreamType(userId As String, type As TRTCVideoStreamType)
        parameters:
        - id: userId
          type: System.String
          description: ID of the remote user
        - id: type
          type: trtc.TRTCVideoStreamType
          description: 'Type of the remote user’s video stream (big or small image) to play. Default value: `TRTCVideoStreamTypeBig`'
      overload: trtc.ITRTCCloud.setRemoteVideoStreamType*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.startLocalAudio(trtc.TRTCAudioQuality)
      commentId: M:trtc.ITRTCCloud.startLocalAudio(trtc.TRTCAudioQuality)
      language: CSharp
      name:
        CSharp: startLocalAudio(TRTCAudioQuality)
        VB: startLocalAudio(TRTCAudioQuality)
      nameWithType:
        CSharp: ITRTCCloud.startLocalAudio(TRTCAudioQuality)
        VB: ITRTCCloud.startLocalAudio(TRTCAudioQuality)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.startLocalAudio(trtc.TRTCAudioQuality)
        VB: trtc.ITRTCCloud.startLocalAudio(trtc.TRTCAudioQuality)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: startLocalAudio
        path: ''
        startLine: 3001
      summary: "\n4.2 Enable local audio capturing and publishing\n\n<p>This API will start mic capturing and send audio data to other users in the room.</p>\n<p>The SDK does not publish local audio automatically, so if you do not call this API, other users in the room will not hear your audio.</p>\n"
      remarks: "\nThe TRTC SDK does not enable local mic capturing automatically.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void startLocalAudio(TRTCAudioQuality quality)
          VB: Public MustOverride Sub startLocalAudio(quality As TRTCAudioQuality)
        parameters:
        - id: quality
          type: trtc.TRTCAudioQuality
          description: Audio quality. For details, please see `TRTCAudioQuality`.
      overload: trtc.ITRTCCloud.startLocalAudio*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.stopLocalAudio
      commentId: M:trtc.ITRTCCloud.stopLocalAudio
      language: CSharp
      name:
        CSharp: stopLocalAudio()
        VB: stopLocalAudio()
      nameWithType:
        CSharp: ITRTCCloud.stopLocalAudio()
        VB: ITRTCCloud.stopLocalAudio()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.stopLocalAudio()
        VB: trtc.ITRTCCloud.stopLocalAudio()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: stopLocalAudio
        path: ''
        startLine: 3008
      summary: "\n4.3 Disable local audio capturing and publishing\n\n<p>After local audio capturing and publishing are disabled, other users in the room will receive the `onUserAudioAvailable(false)` callback.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void stopLocalAudio()
          VB: Public MustOverride Sub stopLocalAudio
      overload: trtc.ITRTCCloud.stopLocalAudio*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.muteLocalAudio(System.Boolean)
      commentId: M:trtc.ITRTCCloud.muteLocalAudio(System.Boolean)
      language: CSharp
      name:
        CSharp: muteLocalAudio(Boolean)
        VB: muteLocalAudio(Boolean)
      nameWithType:
        CSharp: ITRTCCloud.muteLocalAudio(Boolean)
        VB: ITRTCCloud.muteLocalAudio(Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.muteLocalAudio(System.Boolean)
        VB: trtc.ITRTCCloud.muteLocalAudio(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: muteLocalAudio
        path: ''
        startLine: 3020
      summary: "\n4.4 Mute/Unmute local audio\n\n<p>After local audio is muted, other users in the room will receive the `onUserAudioAvailable(userId, false)` callback.</p>\n<p>After local audio is unmuted, other users in the room will receive the `onUserAudioAvailable(userId, true)` callback.</p>\n<p>Different from `stopLocalAudio`, `muteLocalAudio(true)` does not stop the sending of audio or video data. Data packets continue to be sent, although without audio and at extremely low bitrate.</p>\n<p>As MP4 and other video formats have high requirements on audio continuity, `stopLocalAudio` may make an MP4 recording file fail to be played smoothly.</p>\n<p>`muteLocalAudio` has less impact on the compatibility of MP4 recording files. Therefore, you are advised to use `muteLocalAudio` in scenarios with high requirements on recording quality.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void muteLocalAudio(bool mute)
          VB: Public MustOverride Sub muteLocalAudio(mute As Boolean)
        parameters:
        - id: mute
          type: System.Boolean
          description: '`true`: mute; `false` (default): unmute'
      overload: trtc.ITRTCCloud.muteLocalAudio*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.muteRemoteAudio(System.String,System.Boolean)
      commentId: M:trtc.ITRTCCloud.muteRemoteAudio(System.String,System.Boolean)
      language: CSharp
      name:
        CSharp: muteRemoteAudio(String, Boolean)
        VB: muteRemoteAudio(String, Boolean)
      nameWithType:
        CSharp: ITRTCCloud.muteRemoteAudio(String, Boolean)
        VB: ITRTCCloud.muteRemoteAudio(String, Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.muteRemoteAudio(System.String, System.Boolean)
        VB: trtc.ITRTCCloud.muteRemoteAudio(System.String, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: muteRemoteAudio
        path: ''
        startLine: 3030
      summary: "\n4.5 Mute/Unmute a remote user&apos;s audio\n"
      remarks: "\nIf `mute` is `true`, the SDK will stop receiving and playing the remote user’s audio; if `mute` is `false`, it will start receiving and playing the remote user’s audio.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void muteRemoteAudio(string userId, bool mute)
          VB: Public MustOverride Sub muteRemoteAudio(userId As String, mute As Boolean)
        parameters:
        - id: userId
          type: System.String
          description: ID of the remote user
        - id: mute
          type: System.Boolean
          description: '`true`: mute; `false`: unmute'
      overload: trtc.ITRTCCloud.muteRemoteAudio*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.muteAllRemoteAudio(System.Boolean)
      commentId: M:trtc.ITRTCCloud.muteAllRemoteAudio(System.Boolean)
      language: CSharp
      name:
        CSharp: muteAllRemoteAudio(Boolean)
        VB: muteAllRemoteAudio(Boolean)
      nameWithType:
        CSharp: ITRTCCloud.muteAllRemoteAudio(Boolean)
        VB: ITRTCCloud.muteAllRemoteAudio(Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.muteAllRemoteAudio(System.Boolean)
        VB: trtc.ITRTCCloud.muteAllRemoteAudio(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: muteAllRemoteAudio
        path: ''
        startLine: 3039
      summary: "\n4.6 Mute/Unmute all users&apos; audio\n"
      remarks: "\nIf `mute` is `true`, the SDK will stop receiving and playing all remote users’ audio; if `mute` is `false`, it will start receiving and playing all remote users’ audio.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void muteAllRemoteAudio(bool mute)
          VB: Public MustOverride Sub muteAllRemoteAudio(mute As Boolean)
        parameters:
        - id: mute
          type: System.Boolean
          description: '`true`: mute; `false`: unmute'
      overload: trtc.ITRTCCloud.muteAllRemoteAudio*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setRemoteAudioVolume(System.String,System.Int32)
      commentId: M:trtc.ITRTCCloud.setRemoteAudioVolume(System.String,System.Int32)
      language: CSharp
      name:
        CSharp: setRemoteAudioVolume(String, Int32)
        VB: setRemoteAudioVolume(String, Int32)
      nameWithType:
        CSharp: ITRTCCloud.setRemoteAudioVolume(String, Int32)
        VB: ITRTCCloud.setRemoteAudioVolume(String, Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setRemoteAudioVolume(System.String, System.Int32)
        VB: trtc.ITRTCCloud.setRemoteAudioVolume(System.String, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setRemoteAudioVolume
        path: ''
        startLine: 3048
      summary: "\nSet the playback volume of a remote user\nThis API controls the volume of audio delivered to the system for playback. It affects the volume of local recording files, but not the volume of in-ear monitoring.\nIf you want to set the volume to a value greater than `100`, please contact technical support.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setRemoteAudioVolume(string userId, int volume)
          VB: Public MustOverride Sub setRemoteAudioVolume(userId As String, volume As Integer)
        parameters:
        - id: userId
          type: System.String
          description: ID of the remote user
        - id: volume
          type: System.Int32
          description: 'Volume. Value range: 0-100'
      overload: trtc.ITRTCCloud.setRemoteAudioVolume*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setAudioPlayoutVolume(System.Int32)
      commentId: M:trtc.ITRTCCloud.setAudioPlayoutVolume(System.Int32)
      language: CSharp
      name:
        CSharp: setAudioPlayoutVolume(Int32)
        VB: setAudioPlayoutVolume(Int32)
      nameWithType:
        CSharp: ITRTCCloud.setAudioPlayoutVolume(Int32)
        VB: ITRTCCloud.setAudioPlayoutVolume(Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setAudioPlayoutVolume(System.Int32)
        VB: trtc.ITRTCCloud.setAudioPlayoutVolume(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setAudioPlayoutVolume
        path: ''
        startLine: 3054
      summary: "\nSet the playback volume of the SDK\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setAudioPlayoutVolume(int volume)
          VB: Public MustOverride Sub setAudioPlayoutVolume(volume As Integer)
        parameters:
        - id: volume
          type: System.Int32
          description: 'Volume. Value range: 0-150; default: `100`'
      overload: trtc.ITRTCCloud.setAudioPlayoutVolume*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.getAudioPlayoutVolume
      commentId: M:trtc.ITRTCCloud.getAudioPlayoutVolume
      language: CSharp
      name:
        CSharp: getAudioPlayoutVolume()
        VB: getAudioPlayoutVolume()
      nameWithType:
        CSharp: ITRTCCloud.getAudioPlayoutVolume()
        VB: ITRTCCloud.getAudioPlayoutVolume()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.getAudioPlayoutVolume()
        VB: trtc.ITRTCCloud.getAudioPlayoutVolume()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: getAudioPlayoutVolume
        path: ''
        startLine: 3060
      summary: "\nGet the playback volume of the SDK\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int getAudioPlayoutVolume()
          VB: Public MustOverride Function getAudioPlayoutVolume As Integer
        return:
          type: System.Int32
          description: ''
      overload: trtc.ITRTCCloud.getAudioPlayoutVolume*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.startAudioRecording(trtc.TRTCAudioRecordingParams@)
      commentId: M:trtc.ITRTCCloud.startAudioRecording(trtc.TRTCAudioRecordingParams@)
      language: CSharp
      name:
        CSharp: startAudioRecording(ref TRTCAudioRecordingParams)
        VB: startAudioRecording(ByRef TRTCAudioRecordingParams)
      nameWithType:
        CSharp: ITRTCCloud.startAudioRecording(ref TRTCAudioRecordingParams)
        VB: ITRTCCloud.startAudioRecording(ByRef TRTCAudioRecordingParams)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.startAudioRecording(ref trtc.TRTCAudioRecordingParams)
        VB: trtc.ITRTCCloud.startAudioRecording(ByRef trtc.TRTCAudioRecordingParams)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: startAudioRecording
        path: ''
        startLine: 3068
      summary: "\nStart audio recording\nAfter this API is called, the SDK will record all audio of a call, including local audio, remote audio, and background music, into a file. This API works regardless of whether the user is in the room. When `exitRoom` is called, audio recording will stop automatically.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int startAudioRecording(ref TRTCAudioRecordingParams audioRecordingParams)
          VB: Public MustOverride Function startAudioRecording(ByRef audioRecordingParams As TRTCAudioRecordingParams) As Integer
        parameters:
        - id: audioRecordingParams
          type: trtc.TRTCAudioRecordingParams
          description: Audio recording parameters. For details, please see `TRTCAudioRecordingParams`.
        return:
          type: System.Int32
          description: '`0`: recording successful; `-1`: recording has started; `-2`: failed to create the file or directory; `-3`: unsupported audio format'
      overload: trtc.ITRTCCloud.startAudioRecording*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.stopAudioRecording
      commentId: M:trtc.ITRTCCloud.stopAudioRecording
      language: CSharp
      name:
        CSharp: stopAudioRecording()
        VB: stopAudioRecording()
      nameWithType:
        CSharp: ITRTCCloud.stopAudioRecording()
        VB: ITRTCCloud.stopAudioRecording()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.stopAudioRecording()
        VB: trtc.ITRTCCloud.stopAudioRecording()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: stopAudioRecording
        path: ''
        startLine: 3074
      summary: "\nStop audio recording\nWhen `exitRoom` is called, audio recording will stop automatically.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void stopAudioRecording()
          VB: Public MustOverride Sub stopAudioRecording
      overload: trtc.ITRTCCloud.stopAudioRecording*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.startLocalRecording(trtc.TRTCLocalRecordingParams@)
      commentId: M:trtc.ITRTCCloud.startLocalRecording(trtc.TRTCLocalRecordingParams@)
      language: CSharp
      name:
        CSharp: startLocalRecording(ref TRTCLocalRecordingParams)
        VB: startLocalRecording(ByRef TRTCLocalRecordingParams)
      nameWithType:
        CSharp: ITRTCCloud.startLocalRecording(ref TRTCLocalRecordingParams)
        VB: ITRTCCloud.startLocalRecording(ByRef TRTCLocalRecordingParams)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.startLocalRecording(ref trtc.TRTCLocalRecordingParams)
        VB: trtc.ITRTCCloud.startLocalRecording(ByRef trtc.TRTCLocalRecordingParams)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: startLocalRecording
        path: ''
        startLine: 3085
      summary: "\nStart local recording\nThis API records the audio and video data during live streaming into a file and saves it locally. Use cases:\n1. If no streams are published, you can record local audio and video into a file after calling `startLocalPreview`.\n2. If streams are published, you can record the entire live streaming session into a file and save it locally.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void startLocalRecording(ref TRTCLocalRecordingParams localRecordingParams)
          VB: Public MustOverride Sub startLocalRecording(ByRef localRecordingParams As TRTCLocalRecordingParams)
        parameters:
        - id: localRecordingParams
          type: trtc.TRTCLocalRecordingParams
          description: Recording parameters. For details, please see `TRTCLocalRecordingParams`.
      overload: trtc.ITRTCCloud.startLocalRecording*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.stopLocalRecording
      commentId: M:trtc.ITRTCCloud.stopLocalRecording
      language: CSharp
      name:
        CSharp: stopLocalRecording()
        VB: stopLocalRecording()
      nameWithType:
        CSharp: ITRTCCloud.stopLocalRecording()
        VB: ITRTCCloud.stopLocalRecording()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.stopLocalRecording()
        VB: trtc.ITRTCCloud.stopLocalRecording()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: stopLocalRecording
        path: ''
        startLine: 3091
      summary: "\nStop local recording\nWhen `exitRoom` is called, recording will stop automatically.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void stopLocalRecording()
          VB: Public MustOverride Sub stopLocalRecording
      overload: trtc.ITRTCCloud.stopLocalRecording*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setAudioCaptureVolume(System.Int32)
      commentId: M:trtc.ITRTCCloud.setAudioCaptureVolume(System.Int32)
      language: CSharp
      name:
        CSharp: setAudioCaptureVolume(Int32)
        VB: setAudioCaptureVolume(Int32)
      nameWithType:
        CSharp: ITRTCCloud.setAudioCaptureVolume(Int32)
        VB: ITRTCCloud.setAudioCaptureVolume(Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setAudioCaptureVolume(System.Int32)
        VB: trtc.ITRTCCloud.setAudioCaptureVolume(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setAudioCaptureVolume
        path: ''
        startLine: 3097
      summary: "\nSet the capturing volume of the SDK\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setAudioCaptureVolume(int volume)
          VB: Public MustOverride Sub setAudioCaptureVolume(volume As Integer)
        parameters:
        - id: volume
          type: System.Int32
          description: 'Volume. Value range: 0-100'
      overload: trtc.ITRTCCloud.setAudioCaptureVolume*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.getAudioCaptureVolume
      commentId: M:trtc.ITRTCCloud.getAudioCaptureVolume
      language: CSharp
      name:
        CSharp: getAudioCaptureVolume()
        VB: getAudioCaptureVolume()
      nameWithType:
        CSharp: ITRTCCloud.getAudioCaptureVolume()
        VB: ITRTCCloud.getAudioCaptureVolume()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.getAudioCaptureVolume()
        VB: trtc.ITRTCCloud.getAudioCaptureVolume()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: getAudioCaptureVolume
        path: ''
        startLine: 3102
      summary: "\nGet the capturing volume of the SDK\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int getAudioCaptureVolume()
          VB: Public MustOverride Function getAudioCaptureVolume As Integer
        return:
          type: System.Int32
      overload: trtc.ITRTCCloud.getAudioCaptureVolume*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.enableAudioVolumeEvaluation(System.UInt32)
      commentId: M:trtc.ITRTCCloud.enableAudioVolumeEvaluation(System.UInt32)
      language: CSharp
      name:
        CSharp: enableAudioVolumeEvaluation(UInt32)
        VB: enableAudioVolumeEvaluation(UInt32)
      nameWithType:
        CSharp: ITRTCCloud.enableAudioVolumeEvaluation(UInt32)
        VB: ITRTCCloud.enableAudioVolumeEvaluation(UInt32)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.enableAudioVolumeEvaluation(System.UInt32)
        VB: trtc.ITRTCCloud.enableAudioVolumeEvaluation(System.UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: enableAudioVolumeEvaluation
        path: ''
        startLine: 3112
      summary: "\nEnable/Disable the volume reminder\n\n<p>After this feature is enabled, the SDK will return its evaluation of the volume of each stream via `onUserVoiceVolume()`.</p>\n<p>The volume bar in our demo is implemented using this API.</p>\n<p>To enable the volume reminder, please call this API before `startLocalAudio()`.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void enableAudioVolumeEvaluation(uint interval)
          VB: Public MustOverride Sub enableAudioVolumeEvaluation(interval As UInteger)
        parameters:
        - id: interval
          type: System.UInt32
          description: Set the interval (ms) for triggering the `onUserVoiceVolume` callback. The minimum interval allowed is 100 ms. 300 ms is recommended. If the value is `0` or smaller, the callback will be disabled.
      overload: trtc.ITRTCCloud.enableAudioVolumeEvaluation*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.getDeviceManager
      commentId: M:trtc.ITRTCCloud.getDeviceManager
      language: CSharp
      name:
        CSharp: getDeviceManager()
        VB: getDeviceManager()
      nameWithType:
        CSharp: ITRTCCloud.getDeviceManager()
        VB: ITRTCCloud.getDeviceManager()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.getDeviceManager()
        VB: trtc.ITRTCCloud.getDeviceManager()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: getDeviceManager
        path: ''
        startLine: 3135
      summary: "\nGet the device management module (supported on Android and iOS)\n"
      example: []
      syntax:
        content:
          CSharp: public abstract ITXDeviceManager getDeviceManager()
          VB: Public MustOverride Function getDeviceManager As ITXDeviceManager
        return:
          type: trtc.ITXDeviceManager
          description: Device management class
      overload: trtc.ITRTCCloud.getDeviceManager*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setBeautyStyle(trtc.TRTCBeautyStyle,System.UInt32,System.UInt32,System.UInt32)
      commentId: M:trtc.ITRTCCloud.setBeautyStyle(trtc.TRTCBeautyStyle,System.UInt32,System.UInt32,System.UInt32)
      language: CSharp
      name:
        CSharp: setBeautyStyle(TRTCBeautyStyle, UInt32, UInt32, UInt32)
        VB: setBeautyStyle(TRTCBeautyStyle, UInt32, UInt32, UInt32)
      nameWithType:
        CSharp: ITRTCCloud.setBeautyStyle(TRTCBeautyStyle, UInt32, UInt32, UInt32)
        VB: ITRTCCloud.setBeautyStyle(TRTCBeautyStyle, UInt32, UInt32, UInt32)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setBeautyStyle(trtc.TRTCBeautyStyle, System.UInt32, System.UInt32, System.UInt32)
        VB: trtc.ITRTCCloud.setBeautyStyle(trtc.TRTCBeautyStyle, System.UInt32, System.UInt32, System.UInt32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setBeautyStyle
        path: ''
        startLine: 3151
      summary: "\nSet the strength of the beauty, skin brightening, and rosy skin filters (not supported on Windows)\nThe SDK has two built-in skin smoothing algorithms. One is &quot;smooth&quot;, which features more obvious smoothing effect and is designed for showrooms. The other is &quot;natural&quot;, which retains more facial details and is more natural.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setBeautyStyle(TRTCBeautyStyle style, uint beauty, uint white, uint ruddiness)
          VB: Public MustOverride Sub setBeautyStyle(style As TRTCBeautyStyle, beauty As UInteger, white As UInteger, ruddiness As UInteger)
        parameters:
        - id: style
          type: trtc.TRTCBeautyStyle
          description: Beauty style, which may be smooth or natural. The former features more obvious skin smoothing effect and is suitable for entertainment scenarios.
        - id: beauty
          type: System.UInt32
        - id: white
          type: System.UInt32
        - id: ruddiness
          type: System.UInt32
      overload: trtc.ITRTCCloud.setBeautyStyle*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setWaterMark(trtc.TRTCVideoStreamType,System.String,trtc.TRTCWaterMarkSrcType,System.UInt32,System.UInt32,System.Single,System.Single,System.Single)
      commentId: M:trtc.ITRTCCloud.setWaterMark(trtc.TRTCVideoStreamType,System.String,trtc.TRTCWaterMarkSrcType,System.UInt32,System.UInt32,System.Single,System.Single,System.Single)
      language: CSharp
      name:
        CSharp: setWaterMark(TRTCVideoStreamType, String, TRTCWaterMarkSrcType, UInt32, UInt32, Single, Single, Single)
        VB: setWaterMark(TRTCVideoStreamType, String, TRTCWaterMarkSrcType, UInt32, UInt32, Single, Single, Single)
      nameWithType:
        CSharp: ITRTCCloud.setWaterMark(TRTCVideoStreamType, String, TRTCWaterMarkSrcType, UInt32, UInt32, Single, Single, Single)
        VB: ITRTCCloud.setWaterMark(TRTCVideoStreamType, String, TRTCWaterMarkSrcType, UInt32, UInt32, Single, Single, Single)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setWaterMark(trtc.TRTCVideoStreamType, System.String, trtc.TRTCWaterMarkSrcType, System.UInt32, System.UInt32, System.Single, System.Single, System.Single)
        VB: trtc.ITRTCCloud.setWaterMark(trtc.TRTCVideoStreamType, System.String, trtc.TRTCWaterMarkSrcType, System.UInt32, System.UInt32, System.Single, System.Single, System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setWaterMark
        path: ''
        startLine: 3164
      summary: "\nSet a watermark (not supported on Android and Windows)\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setWaterMark(TRTCVideoStreamType streamType, string srcData, TRTCWaterMarkSrcType srcType, uint nWidth, uint nHeight, float xOffset, float yOffset, float fWidthRatio)
          VB: Public MustOverride Sub setWaterMark(streamType As TRTCVideoStreamType, srcData As String, srcType As TRTCWaterMarkSrcType, nWidth As UInteger, nHeight As UInteger, xOffset As Single, yOffset As Single, fWidthRatio As Single)
        parameters:
        - id: streamType
          type: trtc.TRTCVideoStreamType
          description: 'Type of stream to watermark. Valid values: `TRTCVideoStreamTypeBig, `TRTCVideoStreamTypeSub`'
        - id: srcData
          type: System.String
          description: Source of the watermark image. `null` means to remove the watermark.
        - id: srcType
          type: trtc.TRTCWaterMarkSrcType
          description: Data type of the watermark source
        - id: nWidth
          type: System.UInt32
          description: Pixel width of the watermark. This parameter is ignored if the watermark source is a file path.
        - id: nHeight
          type: System.UInt32
          description: Pixel height of the watermark. This parameter is ignored if the watermark source is a file path.
        - id: xOffset
          type: System.Single
          description: 'X-axis offset of the top-left corner of the watermark image. Value range: 0-1 (floating point number)'
        - id: yOffset
          type: System.Single
          description: 'Y-axis offset of the top-left corner of the watermark image. Value range: 0-1 (floating point number)'
        - id: fWidthRatio
          type: System.Single
          description: 'Ratio of the width of the watermark image to that of the video (the watermark image will be scaled by this ratio). Value range: 0-1 (floating point number)'
      overload: trtc.ITRTCCloud.setWaterMark*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.getAudioEffectManager
      commentId: M:trtc.ITRTCCloud.getAudioEffectManager
      language: CSharp
      name:
        CSharp: getAudioEffectManager()
        VB: getAudioEffectManager()
      nameWithType:
        CSharp: ITRTCCloud.getAudioEffectManager()
        VB: ITRTCCloud.getAudioEffectManager()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.getAudioEffectManager()
        VB: trtc.ITRTCCloud.getAudioEffectManager()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: getAudioEffectManager
        path: ''
        startLine: 3184
      summary: "\nGet the audio effect management class (supported on Android, iOS, and macOS)\n"
      remarks: "\nThis is the SDK’s audio effect management module. It supports the following features:\nIn-ear monitoring: play the audio captured by the mic through headphones in real time\nReverb effect: add reverb effects such as karaoke, room, hall, deep, and resonant\nVoice changing effect: add voice changing effects such as little girl, middle-aged man, metal, and punk\nBackground music: play online or local music (support speed and pitch adjustment, playback with and without vocals, as well as looping)\nShort audio effect: add short audio effects such as applause and laughter. For files shorter than 10 seconds, set the `isShortFile` parameter to `YES`.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract ITXAudioEffectManager getAudioEffectManager()
          VB: Public MustOverride Function getAudioEffectManager As ITXAudioEffectManager
        return:
          type: trtc.ITXAudioEffectManager
          description: Audio effect management class
      overload: trtc.ITRTCCloud.getAudioEffectManager*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.startScreenCapture(trtc.TRTCVideoStreamType,trtc.TRTCVideoEncParam@)
      commentId: M:trtc.ITRTCCloud.startScreenCapture(trtc.TRTCVideoStreamType,trtc.TRTCVideoEncParam@)
      language: CSharp
      name:
        CSharp: startScreenCapture(TRTCVideoStreamType, ref TRTCVideoEncParam)
        VB: startScreenCapture(TRTCVideoStreamType, ByRef TRTCVideoEncParam)
      nameWithType:
        CSharp: ITRTCCloud.startScreenCapture(TRTCVideoStreamType, ref TRTCVideoEncParam)
        VB: ITRTCCloud.startScreenCapture(TRTCVideoStreamType, ByRef TRTCVideoEncParam)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.startScreenCapture(trtc.TRTCVideoStreamType, ref trtc.TRTCVideoEncParam)
        VB: trtc.ITRTCCloud.startScreenCapture(trtc.TRTCVideoStreamType, ByRef trtc.TRTCVideoEncParam)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: startScreenCapture
        path: ''
        startLine: 3203
      summary: "\n9.1 Start screen sharing\n"
      remarks: "\nA user can publish at most one primary stream (`TRTCVideoStreamTypeBig`) and one substream (`TRTCVideoStreamTypeSub`) at the same time.\nBy default, the screen is shared via the substream. If you use the primary stream, we recommend that you stop camera capturing (`stopLocalPreview`) to avoid conflicts.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void startScreenCapture(TRTCVideoStreamType type, ref TRTCVideoEncParam param)
          VB: Public MustOverride Sub startScreenCapture(type As TRTCVideoStreamType, ByRef param As TRTCVideoEncParam)
        parameters:
        - id: type
          type: trtc.TRTCVideoStreamType
          description: 'Type of stream to use for screen sharing. Valid values: `TRTCVideoStreamTypeBig`: primary stream; `TRTCVideoStreamTypeSub` (default): substream'
        - id: param
          type: trtc.TRTCVideoEncParam
          description: Encoding parameters for screen sharing images
      overload: trtc.ITRTCCloud.startScreenCapture*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.stopScreenCapture
      commentId: M:trtc.ITRTCCloud.stopScreenCapture
      language: CSharp
      name:
        CSharp: stopScreenCapture()
        VB: stopScreenCapture()
      nameWithType:
        CSharp: ITRTCCloud.stopScreenCapture()
        VB: ITRTCCloud.stopScreenCapture()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.stopScreenCapture()
        VB: trtc.ITRTCCloud.stopScreenCapture()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: stopScreenCapture
        path: ''
        startLine: 3208
      summary: "\n9.2 Stop screen sharing\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void stopScreenCapture()
          VB: Public MustOverride Sub stopScreenCapture
      overload: trtc.ITRTCCloud.stopScreenCapture*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.pauseScreenCapture
      commentId: M:trtc.ITRTCCloud.pauseScreenCapture
      language: CSharp
      name:
        CSharp: pauseScreenCapture()
        VB: pauseScreenCapture()
      nameWithType:
        CSharp: ITRTCCloud.pauseScreenCapture()
        VB: ITRTCCloud.pauseScreenCapture()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.pauseScreenCapture()
        VB: trtc.ITRTCCloud.pauseScreenCapture()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: pauseScreenCapture
        path: ''
        startLine: 3213
      summary: "\n9.3 Pause screen sharing\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void pauseScreenCapture()
          VB: Public MustOverride Sub pauseScreenCapture
      overload: trtc.ITRTCCloud.pauseScreenCapture*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.resumeScreenCapture
      commentId: M:trtc.ITRTCCloud.resumeScreenCapture
      language: CSharp
      name:
        CSharp: resumeScreenCapture()
        VB: resumeScreenCapture()
      nameWithType:
        CSharp: ITRTCCloud.resumeScreenCapture()
        VB: ITRTCCloud.resumeScreenCapture()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.resumeScreenCapture()
        VB: trtc.ITRTCCloud.resumeScreenCapture()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: resumeScreenCapture
        path: ''
        startLine: 3218
      summary: "\n9.4 Resume screen sharing\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void resumeScreenCapture()
          VB: Public MustOverride Sub resumeScreenCapture
      overload: trtc.ITRTCCloud.resumeScreenCapture*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.getScreenCaptureSources
      commentId: M:trtc.ITRTCCloud.getScreenCaptureSources
      language: CSharp
      name:
        CSharp: getScreenCaptureSources()
        VB: getScreenCaptureSources()
      nameWithType:
        CSharp: ITRTCCloud.getScreenCaptureSources()
        VB: ITRTCCloud.getScreenCaptureSources()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.getScreenCaptureSources()
        VB: trtc.ITRTCCloud.getScreenCaptureSources()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: getScreenCaptureSources
        path: ''
        startLine: 3229
      summary: "\n9.5 Enumerate shareable sources (preferably called before `startScreenCapture`)\n\n<p>You can use this API to get the ID, type, and name of sharable sources.</p>\n"
      remarks: "\nInformation of shareable sources\n"
      example: []
      syntax:
        content:
          CSharp: public abstract TRTCScreenCaptureSourceInfo[] getScreenCaptureSources()
          VB: Public MustOverride Function getScreenCaptureSources As TRTCScreenCaptureSourceInfo()
        return:
          type: trtc.TRTCScreenCaptureSourceInfo[]
          description: Only screen-type sources are returned currently.
      overload: trtc.ITRTCCloud.getScreenCaptureSources*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.selectScreenCaptureTarget(trtc.TRTCScreenCaptureSourceInfo,Rect,trtc.TRTCScreenCaptureProperty)
      commentId: M:trtc.ITRTCCloud.selectScreenCaptureTarget(trtc.TRTCScreenCaptureSourceInfo,Rect,trtc.TRTCScreenCaptureProperty)
      language: CSharp
      name:
        CSharp: selectScreenCaptureTarget(TRTCScreenCaptureSourceInfo, Rect, TRTCScreenCaptureProperty)
        VB: selectScreenCaptureTarget(TRTCScreenCaptureSourceInfo, Rect, TRTCScreenCaptureProperty)
      nameWithType:
        CSharp: ITRTCCloud.selectScreenCaptureTarget(TRTCScreenCaptureSourceInfo, Rect, TRTCScreenCaptureProperty)
        VB: ITRTCCloud.selectScreenCaptureTarget(TRTCScreenCaptureSourceInfo, Rect, TRTCScreenCaptureProperty)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.selectScreenCaptureTarget(trtc.TRTCScreenCaptureSourceInfo, Rect, trtc.TRTCScreenCaptureProperty)
        VB: trtc.ITRTCCloud.selectScreenCaptureTarget(trtc.TRTCScreenCaptureSourceInfo, Rect, trtc.TRTCScreenCaptureProperty)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: selectScreenCaptureTarget
        path: ''
        startLine: 3243
      summary: "\n9.6 Set screen sharing parameters (can be called during screen sharing)\n\n<p>During screen sharing, you can call this API to switch the screen to share. You don’t need to start screen sharing again.</p>\n\n<p>You can:</p>\n<p>-Share an entire screen: select a source whose `type` is `Screen` from `sourceInfoList` and set `captureRect` to `{0, 0, 0, 0}`</p>\n<p>-Share a portion of a screen: select a source whose `type` is `Screen` from `sourceInfoList` and set `captureRect` to a non-null value, e.g., {100, 100, 300, 300}</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void selectScreenCaptureTarget(TRTCScreenCaptureSourceInfo source, Rect captureRect, TRTCScreenCaptureProperty property)
          VB: Public MustOverride Sub selectScreenCaptureTarget(source As TRTCScreenCaptureSourceInfo, captureRect As Rect, property As TRTCScreenCaptureProperty)
        parameters:
        - id: source
          type: trtc.TRTCScreenCaptureSourceInfo
          description: The source to share
        - id: captureRect
          type: Rect
          description: The portion of the screen to share
        - id: property
          type: trtc.TRTCScreenCaptureProperty
          description: Screen sharing properties, such as whether to enable mouse cursor capturing or show a bright border around the shared content. For details, please see the definition of `TRTCScreenCaptureProperty`.
      overload: trtc.ITRTCCloud.selectScreenCaptureTarget*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setSubStreamEncoderParam(trtc.TRTCVideoEncParam@)
      commentId: M:trtc.ITRTCCloud.setSubStreamEncoderParam(trtc.TRTCVideoEncParam@)
      language: CSharp
      name:
        CSharp: setSubStreamEncoderParam(ref TRTCVideoEncParam)
        VB: setSubStreamEncoderParam(ByRef TRTCVideoEncParam)
      nameWithType:
        CSharp: ITRTCCloud.setSubStreamEncoderParam(ref TRTCVideoEncParam)
        VB: ITRTCCloud.setSubStreamEncoderParam(ByRef TRTCVideoEncParam)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setSubStreamEncoderParam(ref trtc.TRTCVideoEncParam)
        VB: trtc.ITRTCCloud.setSubStreamEncoderParam(ByRef trtc.TRTCVideoEncParam)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setSubStreamEncoderParam
        path: ''
        startLine: 3253
      summary: "\n9.7 Set encoding parameters for screen sharing\n"
      remarks: You need to use the API to set encoding parameters for screen sharing even if you use the primary stream for screen sharing (by setting `type` to `TRTCVideoStreamTypeBig` when calling `startScreenCapture`).
      example: []
      syntax:
        content:
          CSharp: public abstract void setSubStreamEncoderParam(ref TRTCVideoEncParam param)
          VB: Public MustOverride Sub setSubStreamEncoderParam(ByRef param As TRTCVideoEncParam)
        parameters:
        - id: param
          type: trtc.TRTCVideoEncParam
          description: Substream encoding parameters. For details, please see the definition of `TRTCVideoEncParam` in `TRTCCloudDef.h`.
      overload: trtc.ITRTCCloud.setSubStreamEncoderParam*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.enableCustomVideoCapture(System.Boolean)
      commentId: M:trtc.ITRTCCloud.enableCustomVideoCapture(System.Boolean)
      language: CSharp
      name:
        CSharp: enableCustomVideoCapture(Boolean)
        VB: enableCustomVideoCapture(Boolean)
      nameWithType:
        CSharp: ITRTCCloud.enableCustomVideoCapture(Boolean)
        VB: ITRTCCloud.enableCustomVideoCapture(Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.enableCustomVideoCapture(System.Boolean)
        VB: trtc.ITRTCCloud.enableCustomVideoCapture(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: enableCustomVideoCapture
        path: ''
        startLine: 3271
      summary: "\nEnable/Disable custom video capturing\n\n<p>After custom video capturing is enabled, the SDK will skip video capturing but will continue to encode and send video data.</p>\n<p>You need to keep feeding custom video data to the SDK using `sendCustomVideoData()`.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void enableCustomVideoCapture(bool enable)
          VB: Public MustOverride Sub enableCustomVideoCapture(enable As Boolean)
        parameters:
        - id: enable
          type: System.Boolean
          description: 'Whether to enable custom video capturing. Default value: `false`'
      overload: trtc.ITRTCCloud.enableCustomVideoCapture*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.sendCustomVideoData(trtc.TRTCVideoFrame)
      commentId: M:trtc.ITRTCCloud.sendCustomVideoData(trtc.TRTCVideoFrame)
      language: CSharp
      name:
        CSharp: sendCustomVideoData(TRTCVideoFrame)
        VB: sendCustomVideoData(TRTCVideoFrame)
      nameWithType:
        CSharp: ITRTCCloud.sendCustomVideoData(TRTCVideoFrame)
        VB: ITRTCCloud.sendCustomVideoData(TRTCVideoFrame)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.sendCustomVideoData(trtc.TRTCVideoFrame)
        VB: trtc.ITRTCCloud.sendCustomVideoData(trtc.TRTCVideoFrame)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: sendCustomVideoData
        path: ''
        startLine: 3292
      summary: "\nSend custom video data to the SDK\n\n<p>We recommend the following settings for the parameters of `TRTCVideoFrame` (other parameters can be left empty).</p>\n<p>-pixelFormat: only `LiteAVVideoPixelFormat_I420` is supported.</p>\n<p>-bufferType: only `LiteAVVideoBufferType_Buffer` is supported.</p>\n<p>-data: video frame buffer</p>\n<p>-length: video frame size, whose value in I420 format is `width × height × 3/2`</p>\n<p>-width: video width</p>\n<p>-height: video height</p>\n<p>-timestamp: Separate timestamps equally; otherwise, an audio-to-video sync error will occur and the quality of MP4 recording files will be severely compromised.</p>\n\n<p>For more information, please see [Custom Capturing and Rendering](https://cloud.tencent.com/document/product/647/34066).</p>\n"
      remarks: "\n- The SDK has an internal frame rate control logic. It drops frames if the frame rate is higher than the target specified in `setVideoEncoderParam` and inserts frames if the frame rate is lower than the target.\n<p>- You can leave the setting of timestamps to the SDK by setting `timestamp` to `0`, but to avoid unstable frame rate, make sure that you call `sendCustomVideoData` at regular intervals.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void sendCustomVideoData(TRTCVideoFrame frame)
          VB: Public MustOverride Sub sendCustomVideoData(frame As TRTCVideoFrame)
        parameters:
        - id: frame
          type: trtc.TRTCVideoFrame
          description: Video data in I420 format
      overload: trtc.ITRTCCloud.sendCustomVideoData*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.enableCustomAudioCapture(System.Boolean)
      commentId: M:trtc.ITRTCCloud.enableCustomAudioCapture(System.Boolean)
      language: CSharp
      name:
        CSharp: enableCustomAudioCapture(Boolean)
        VB: enableCustomAudioCapture(Boolean)
      nameWithType:
        CSharp: ITRTCCloud.enableCustomAudioCapture(Boolean)
        VB: ITRTCCloud.enableCustomAudioCapture(Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.enableCustomAudioCapture(System.Boolean)
        VB: trtc.ITRTCCloud.enableCustomAudioCapture(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: enableCustomAudioCapture
        path: ''
        startLine: 3301
      summary: "\nEnable/Disable custom audio capturing (not supported on Android)\n\n<p>After custom audio capturing is enabled, the SDK will skip audio capturing but will continue to encode and send audio data.</p>\n<p>You need to keep feeding custom audio data to the SDK using `sendCustomAudioData()`.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void enableCustomAudioCapture(bool enable)
          VB: Public MustOverride Sub enableCustomAudioCapture(enable As Boolean)
        parameters:
        - id: enable
          type: System.Boolean
          description: 'Whether to enable custom audio capturing. Default value: `false`'
      overload: trtc.ITRTCCloud.enableCustomAudioCapture*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.sendCustomAudioData(trtc.TRTCAudioFrame)
      commentId: M:trtc.ITRTCCloud.sendCustomAudioData(trtc.TRTCAudioFrame)
      language: CSharp
      name:
        CSharp: sendCustomAudioData(TRTCAudioFrame)
        VB: sendCustomAudioData(TRTCAudioFrame)
      nameWithType:
        CSharp: ITRTCCloud.sendCustomAudioData(TRTCAudioFrame)
        VB: ITRTCCloud.sendCustomAudioData(TRTCAudioFrame)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.sendCustomAudioData(trtc.TRTCAudioFrame)
        VB: trtc.ITRTCCloud.sendCustomAudioData(trtc.TRTCAudioFrame)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: sendCustomAudioData
        path: ''
        startLine: 3319
      summary: "\nSend custom audio data to the SDK (not supported on Android)\n<p>We recommend the following settings for the parameters of `TRTCAudioFrame` (other parameters can be left empty).</p>\n<p>-audioFormat: only `LiteAVAudioFrameFormatPCM` is supported.</p>\n<p>-data: audio frame buffer</p>\n<p>-length: audio frame size. We recommend a frame duration of 20 ms. **Assume that the PCM format is used, the sample rate is 48000 Hz, and the audio mono. The size of an audio frame would be 48000 × 0.02s × 1 × 16 bits = 15360 bits = 1920 bytes.</p>\n<p>-sampleRate: sample rate, which can only be `48000`</p>\n<p>-channel: number of sound channels. Valid values: `1`: mono-channel; `2`: dual-channel. If dual channels are used, data will be interleaved.</p>\n<p>-timestamp: Separate timestamps equally; otherwise, an audio-to-video sync error will occur and the quality of MP4 recording files will be severely compromised.</p>\n\n<p>For more information, please see [Custom Capturing and Rendering](https://cloud.tencent.com/document/product/647/34066).</p>\n"
      remarks: "\nYou can leave the setting of timestamps to the SDK by setting `timestamp` to `0`, but to avoid choppy audio, make sure that you call `sendCustomAudioData` at regular intervals.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void sendCustomAudioData(TRTCAudioFrame frame)
          VB: Public MustOverride Sub sendCustomAudioData(frame As TRTCAudioFrame)
        parameters:
        - id: frame
          type: trtc.TRTCAudioFrame
          description: Audio frame. Currently, only mono audio, 48 kHz sample rate, and the `LiteAVAudioFrameFormatPCM` format are supported.
      overload: trtc.ITRTCCloud.sendCustomAudioData*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setLocalVideoRenderCallback(trtc.TRTCVideoStreamType,trtc.TRTCVideoPixelFormat,trtc.TRTCVideoBufferType,trtc.ITRTCVideoRenderCallback)
      commentId: M:trtc.ITRTCCloud.setLocalVideoRenderCallback(trtc.TRTCVideoStreamType,trtc.TRTCVideoPixelFormat,trtc.TRTCVideoBufferType,trtc.ITRTCVideoRenderCallback)
      language: CSharp
      name:
        CSharp: setLocalVideoRenderCallback(TRTCVideoStreamType, TRTCVideoPixelFormat, TRTCVideoBufferType, ITRTCVideoRenderCallback)
        VB: setLocalVideoRenderCallback(TRTCVideoStreamType, TRTCVideoPixelFormat, TRTCVideoBufferType, ITRTCVideoRenderCallback)
      nameWithType:
        CSharp: ITRTCCloud.setLocalVideoRenderCallback(TRTCVideoStreamType, TRTCVideoPixelFormat, TRTCVideoBufferType, ITRTCVideoRenderCallback)
        VB: ITRTCCloud.setLocalVideoRenderCallback(TRTCVideoStreamType, TRTCVideoPixelFormat, TRTCVideoBufferType, ITRTCVideoRenderCallback)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setLocalVideoRenderCallback(trtc.TRTCVideoStreamType, trtc.TRTCVideoPixelFormat, trtc.TRTCVideoBufferType, trtc.ITRTCVideoRenderCallback)
        VB: trtc.ITRTCCloud.setLocalVideoRenderCallback(trtc.TRTCVideoStreamType, trtc.TRTCVideoPixelFormat, trtc.TRTCVideoBufferType, trtc.ITRTCVideoRenderCallback)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setLocalVideoRenderCallback
        path: ''
        startLine: 3335
      summary: "\nConfigure the custom rendering of local video\n"
      remarks: "\nAfter this API is called, the SDK will return the video data captured via a callback, which is then rendered by Unity’s `Texture2D`.\n<p>Call `setLocalVideoRenderCallback(TRTCVideoPixelFormat_Unknown, TRTCVideoBufferType_Unknown, null)` to disable the callback.</p>\n<p>iOS, macOS, and Windows support only video frames in the pixel format of `TRTCVideoPixelFormat_BGRA32`. Unity can render data in BGRA32 format. Method: new Texture2D((int)_textureWidth, (int)_textureHeight, TextureFormat.BGRA32, false);</p>\n<p>Android supports only video frames in the pixel format of `TRTCVideoPixelFormat_RGBA32`. Unity can render data in RGBA32 format. Method: new Texture2D((int)_textureWidth, (int)_textureHeight, TextureFormat.RGBA32, false);</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int setLocalVideoRenderCallback(TRTCVideoStreamType streamType, TRTCVideoPixelFormat pixelFormat, TRTCVideoBufferType bufferType, ITRTCVideoRenderCallback callback)
          VB: Public MustOverride Function setLocalVideoRenderCallback(streamType As TRTCVideoStreamType, pixelFormat As TRTCVideoPixelFormat, bufferType As TRTCVideoBufferType, callback As ITRTCVideoRenderCallback) As Integer
        parameters:
        - id: streamType
          type: trtc.TRTCVideoStreamType
          description: Stream type
        - id: pixelFormat
          type: trtc.TRTCVideoPixelFormat
          description: Pixel format of the data returned
        - id: bufferType
          type: trtc.TRTCVideoBufferType
          description: Buffer type of the data returned
        - id: callback
          type: trtc.ITRTCVideoRenderCallback
          description: Custom rendering callback
        return:
          type: System.Int32
          description: '`0`: successful; &lt; 0: error'
      overload: trtc.ITRTCCloud.setLocalVideoRenderCallback*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setRemoteVideoRenderCallback(System.String,trtc.TRTCVideoStreamType,trtc.TRTCVideoPixelFormat,trtc.TRTCVideoBufferType,trtc.ITRTCVideoRenderCallback)
      commentId: M:trtc.ITRTCCloud.setRemoteVideoRenderCallback(System.String,trtc.TRTCVideoStreamType,trtc.TRTCVideoPixelFormat,trtc.TRTCVideoBufferType,trtc.ITRTCVideoRenderCallback)
      language: CSharp
      name:
        CSharp: setRemoteVideoRenderCallback(String, TRTCVideoStreamType, TRTCVideoPixelFormat, TRTCVideoBufferType, ITRTCVideoRenderCallback)
        VB: setRemoteVideoRenderCallback(String, TRTCVideoStreamType, TRTCVideoPixelFormat, TRTCVideoBufferType, ITRTCVideoRenderCallback)
      nameWithType:
        CSharp: ITRTCCloud.setRemoteVideoRenderCallback(String, TRTCVideoStreamType, TRTCVideoPixelFormat, TRTCVideoBufferType, ITRTCVideoRenderCallback)
        VB: ITRTCCloud.setRemoteVideoRenderCallback(String, TRTCVideoStreamType, TRTCVideoPixelFormat, TRTCVideoBufferType, ITRTCVideoRenderCallback)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setRemoteVideoRenderCallback(System.String, trtc.TRTCVideoStreamType, trtc.TRTCVideoPixelFormat, trtc.TRTCVideoBufferType, trtc.ITRTCVideoRenderCallback)
        VB: trtc.ITRTCCloud.setRemoteVideoRenderCallback(System.String, trtc.TRTCVideoStreamType, trtc.TRTCVideoPixelFormat, trtc.TRTCVideoBufferType, trtc.ITRTCVideoRenderCallback)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setRemoteVideoRenderCallback
        path: ''
        startLine: 3354
      summary: "\nConfigure the custom rendering of remote video\n\n<p>This API is similar to `setLocalVideoRenderDelegate`, but it sets the callback of remote video rather than local video.</p>\n"
      remarks: "\nAfter this API is called, the SDK will return decoded remote video data via a callback, which is then rendered by Unity’s `Texture2D`.\n<p>Call `setRemoteVideoRenderCallback(userId, TRTCVideoPixelFormat_Unknown, TRTCVideoBufferType_Unknown, nullptr)` to disable the callback.</p>\n<p>iOS, macOS, and Windows support only video frames in the pixel format of `TRTCVideoPixelFormat_BGRA32`. Unity can render data in BGRA32 format. Method: new Texture2D((int)_textureWidth, (int)_textureHeight, TextureFormat.BGRA32, false);</p>\n<p>Android supports only video frames in the pixel format of `TRTCVideoPixelFormat_RGBA32`. Unity can render data in RGBA32 format. Method: new Texture2D((int)_textureWidth, (int)_textureHeight, TextureFormat.RGBA32, false);</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int setRemoteVideoRenderCallback(string userId, TRTCVideoStreamType streamType, TRTCVideoPixelFormat pixelFormat, TRTCVideoBufferType bufferType, ITRTCVideoRenderCallback callback)
          VB: Public MustOverride Function setRemoteVideoRenderCallback(userId As String, streamType As TRTCVideoStreamType, pixelFormat As TRTCVideoPixelFormat, bufferType As TRTCVideoBufferType, callback As ITRTCVideoRenderCallback) As Integer
        parameters:
        - id: userId
          type: System.String
          description: User ID
        - id: streamType
          type: trtc.TRTCVideoStreamType
          description: Stream type
        - id: pixelFormat
          type: trtc.TRTCVideoPixelFormat
          description: Pixel format of the data returned
        - id: bufferType
          type: trtc.TRTCVideoBufferType
          description: Buffer type of the data returned
        - id: callback
          type: trtc.ITRTCVideoRenderCallback
          description: Custom rendering callback
        return:
          type: System.Int32
          description: '`0`: successful; &lt; 0: error'
      overload: trtc.ITRTCCloud.setRemoteVideoRenderCallback*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.sendSEIMsg(System.Byte[],System.Int32,System.Int32)
      commentId: M:trtc.ITRTCCloud.sendSEIMsg(System.Byte[],System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: sendSEIMsg(Byte[], Int32, Int32)
        VB: sendSEIMsg(Byte(), Int32, Int32)
      nameWithType:
        CSharp: ITRTCCloud.sendSEIMsg(Byte[], Int32, Int32)
        VB: ITRTCCloud.sendSEIMsg(Byte(), Int32, Int32)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.sendSEIMsg(System.Byte[], System.Int32, System.Int32)
        VB: trtc.ITRTCCloud.sendSEIMsg(System.Byte(), System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: sendSEIMsg
        path: ''
        startLine: 3386
      summary: "\nInsert small-volume custom data into video frames\n<p>\nUnlike `sendCustomCmdMsg`, `sendSEIMsg` inserts data directly into the header of video data. As a result, the data is retained even after the video frames are relayed to live streaming CDNs.\nHowever, the size of inserted data should be kept small, preferably several bytes.\n</p>\n<p>The most common practice is using `sendSEIMsg` to insert custom timestamps into video frames, which can ensure that the messages and video images are in sync.</p>\n"
      remarks: "\nThis API has the following limitations:\n<p>    -The data is not sent the moment the API is called, but inserted into the next video frame.</p>\n<p>    -You can send at most 30 messages per second to all users in the room. This limit also applies to `sendCustomCmdMsg`.</p>\n<p>    -A data packet must not exceed 1 KB. Data packets too large may reduce video quality or cause video stutter. This limit also applies to `sendCustomCmdMsg`.</p>\n<p>    -Each client can send up to 8 KB of data per second. This limit also applies to `sendCustomCmdMsg`.</p>\n<p>    -If you send a message multiple times (`repeatCount` > 1), the data will be inserted into multiple subsequent frames (whose number equals `repeatCount`). This will drive up the video bitrate.</p>\n<p>    -If `repeatCount` is greater than 1, the same message may be returned via the `onRecvSEIMsg` callback multiple times, making deduplication necessary.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool sendSEIMsg(byte[] data, int dataSize, int repeatCount)
          VB: Public MustOverride Function sendSEIMsg(data As Byte(), dataSize As Integer, repeatCount As Integer) As Boolean
        parameters:
        - id: data
          type: System.Byte[]
          description: Data to send, which cannot exceed 1 KB
        - id: dataSize
          type: System.Int32
          description: Size of the data to send
        - id: repeatCount
          type: System.Int32
          description: Number of times to send the data
        return:
          type: System.Boolean
          description: '`true`: the message meets the requirements and will be inserted into subsequent video frames; `false`: the message does not meet the requirements'
      overload: trtc.ITRTCCloud.sendSEIMsg*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.sendCustomCmdMsg(System.Int32,System.Byte[],System.Int32,System.Boolean,System.Boolean)
      commentId: M:trtc.ITRTCCloud.sendCustomCmdMsg(System.Int32,System.Byte[],System.Int32,System.Boolean,System.Boolean)
      language: CSharp
      name:
        CSharp: sendCustomCmdMsg(Int32, Byte[], Int32, Boolean, Boolean)
        VB: sendCustomCmdMsg(Int32, Byte(), Int32, Boolean, Boolean)
      nameWithType:
        CSharp: ITRTCCloud.sendCustomCmdMsg(Int32, Byte[], Int32, Boolean, Boolean)
        VB: ITRTCCloud.sendCustomCmdMsg(Int32, Byte(), Int32, Boolean, Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.sendCustomCmdMsg(System.Int32, System.Byte[], System.Int32, System.Boolean, System.Boolean)
        VB: trtc.ITRTCCloud.sendCustomCmdMsg(System.Int32, System.Byte(), System.Int32, System.Boolean, System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: sendCustomCmdMsg
        path: ''
        startLine: 3406
      summary: "\nSend a custom message to all users in the room\n<p>This API allows you to broadcast custom data to other users in the room through the audio/video data channel. Due to the use of this channel, it’s important that you control the message sending frequency and message size to avoid affecting the quality control logic of audio/video data.</p>\n"
      remarks: "\nThis API has the following limitations:\nYou can send at most 30 messages to all users in the room (not supported on web and WeChat Mini Program).\nA data packet must not exceed 1 KB, or it may be dropped by an intermediate router or the server.\nEach client can send up to 8 KB of data per second.\nYou must set both `reliable` and `ordered` to `true` or `false`.\nWe strongly recommend that you use different `cmdID` for messages of different types. This can reduce message latency when ordered messaging is enabled.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract bool sendCustomCmdMsg(int cmdId, byte[] data, int dataSize, bool reliable, bool ordered)
          VB: Public MustOverride Function sendCustomCmdMsg(cmdId As Integer, data As Byte(), dataSize As Integer, reliable As Boolean, ordered As Boolean) As Boolean
        parameters:
        - id: cmdId
          type: System.Int32
          description: 'Message ID. Value range: 1-10'
        - id: data
          type: System.Byte[]
          description: Message to send, which cannot exceed 1 KB
        - id: dataSize
          type: System.Int32
          description: Size of the data to send
        - id: reliable
          type: System.Boolean
          description: Whether to enable reliable messaging, which may cause latency as the recipient needs to retain the data for a while in case resending is required.
        - id: ordered
          type: System.Boolean
          description: Whether to enable ordered messaging, i.e., whether to require that data arrive in the same order as it is sent. This may cause latency as the recipient needs to retain the data for a while to sort it.
        return:
          type: System.Boolean
          description: '`true`: the message is sent successfully; `false`: failed to send the message'
      overload: trtc.ITRTCCloud.sendCustomCmdMsg*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.startSpeedTest(System.Int32,System.String,System.String)
      commentId: M:trtc.ITRTCCloud.startSpeedTest(System.Int32,System.String,System.String)
      language: CSharp
      name:
        CSharp: startSpeedTest(Int32, String, String)
        VB: startSpeedTest(Int32, String, String)
      nameWithType:
        CSharp: ITRTCCloud.startSpeedTest(Int32, String, String)
        VB: ITRTCCloud.startSpeedTest(Int32, String, String)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.startSpeedTest(System.Int32, System.String, System.String)
        VB: trtc.ITRTCCloud.startSpeedTest(System.Int32, System.String, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: startSpeedTest
        path: ''
        startLine: 3425
      summary: "\nStart network speed testing (which should be avoided during video calls to ensure call quality)\n<p>The test result can be used to optimize the SDK&apos;s server selection policy, so you are advised to run the test before the first call, which will help the SDK select the optimal server.</p>\n<p>In addition, if the test result is not satisfactory, you can show a UI message asking users to change to a better network.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void startSpeedTest(int sdkAppId, string userId, string userSig)
          VB: Public MustOverride Sub startSpeedTest(sdkAppId As Integer, userId As String, userSig As String)
        parameters:
        - id: sdkAppId
          type: System.Int32
          description: Application ID
        - id: userId
          type: System.String
          description: User ID
        - id: userSig
          type: System.String
          description: User signature
      overload: trtc.ITRTCCloud.startSpeedTest*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.stopSpeedTest
      commentId: M:trtc.ITRTCCloud.stopSpeedTest
      language: CSharp
      name:
        CSharp: stopSpeedTest()
        VB: stopSpeedTest()
      nameWithType:
        CSharp: ITRTCCloud.stopSpeedTest()
        VB: ITRTCCloud.stopSpeedTest()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.stopSpeedTest()
        VB: trtc.ITRTCCloud.stopSpeedTest()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: stopSpeedTest
        path: ''
        startLine: 3430
      summary: "\nStop network speed testing\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void stopSpeedTest()
          VB: Public MustOverride Sub stopSpeedTest
      overload: trtc.ITRTCCloud.stopSpeedTest*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.getSDKVersion
      commentId: M:trtc.ITRTCCloud.getSDKVersion
      language: CSharp
      name:
        CSharp: getSDKVersion()
        VB: getSDKVersion()
      nameWithType:
        CSharp: ITRTCCloud.getSDKVersion()
        VB: ITRTCCloud.getSDKVersion()
      qualifiedName:
        CSharp: trtc.ITRTCCloud.getSDKVersion()
        VB: trtc.ITRTCCloud.getSDKVersion()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: getSDKVersion
        path: ''
        startLine: 3446
      summary: "\nGet the SDK version\n"
      example: []
      syntax:
        content:
          CSharp: public abstract string getSDKVersion()
          VB: Public MustOverride Function getSDKVersion As String
        return:
          type: System.String
          description: UTF-8-encoded version number
      overload: trtc.ITRTCCloud.getSDKVersion*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setLogLevel(trtc.TRTCLogLevel)
      commentId: M:trtc.ITRTCCloud.setLogLevel(trtc.TRTCLogLevel)
      language: CSharp
      name:
        CSharp: setLogLevel(TRTCLogLevel)
        VB: setLogLevel(TRTCLogLevel)
      nameWithType:
        CSharp: ITRTCCloud.setLogLevel(TRTCLogLevel)
        VB: ITRTCCloud.setLogLevel(TRTCLogLevel)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setLogLevel(trtc.TRTCLogLevel)
        VB: trtc.ITRTCCloud.setLogLevel(trtc.TRTCLogLevel)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setLogLevel
        path: ''
        startLine: 3452
      summary: "\nSet the log output level\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setLogLevel(TRTCLogLevel level)
          VB: Public MustOverride Sub setLogLevel(level As TRTCLogLevel)
        parameters:
        - id: level
          type: trtc.TRTCLogLevel
          description: 'Log output level. For details, please see `TRTCLogLevel`. Default value: `TRTCLogLevelNone`'
      overload: trtc.ITRTCCloud.setLogLevel*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setConsoleEnabled(System.Boolean)
      commentId: M:trtc.ITRTCCloud.setConsoleEnabled(System.Boolean)
      language: CSharp
      name:
        CSharp: setConsoleEnabled(Boolean)
        VB: setConsoleEnabled(Boolean)
      nameWithType:
        CSharp: ITRTCCloud.setConsoleEnabled(Boolean)
        VB: ITRTCCloud.setConsoleEnabled(Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setConsoleEnabled(System.Boolean)
        VB: trtc.ITRTCCloud.setConsoleEnabled(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setConsoleEnabled
        path: ''
        startLine: 3458
      summary: "\nEnable/Disable console log printing\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setConsoleEnabled(bool enabled)
          VB: Public MustOverride Sub setConsoleEnabled(enabled As Boolean)
        parameters:
        - id: enabled
          type: System.Boolean
          description: Whether to enable console log printing. It is disabled by default.
      overload: trtc.ITRTCCloud.setConsoleEnabled*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setLogCompressEnabled(System.Boolean)
      commentId: M:trtc.ITRTCCloud.setLogCompressEnabled(System.Boolean)
      language: CSharp
      name:
        CSharp: setLogCompressEnabled(Boolean)
        VB: setLogCompressEnabled(Boolean)
      nameWithType:
        CSharp: ITRTCCloud.setLogCompressEnabled(Boolean)
        VB: ITRTCCloud.setLogCompressEnabled(Boolean)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setLogCompressEnabled(System.Boolean)
        VB: trtc.ITRTCCloud.setLogCompressEnabled(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setLogCompressEnabled
        path: ''
        startLine: 3467
      summary: "\nEnable/Disable local log compression\n\n<p>Compression can significantly reduce log size, but compressed logs can be read only after being decompressed by the Python script provided by Tencent Cloud.</p>\n<p>If compression is disabled, logs will be stored in plaintext and will take up more storage space, but they can be read directly in Notepad.</p>\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setLogCompressEnabled(bool enabled)
          VB: Public MustOverride Sub setLogCompressEnabled(enabled As Boolean)
        parameters:
        - id: enabled
          type: System.Boolean
          description: Whether to enable local log compression. It is disabled by default.
      overload: trtc.ITRTCCloud.setLogCompressEnabled*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setLogDirPath(System.String)
      commentId: M:trtc.ITRTCCloud.setLogDirPath(System.String)
      language: CSharp
      name:
        CSharp: setLogDirPath(String)
        VB: setLogDirPath(String)
      nameWithType:
        CSharp: ITRTCCloud.setLogDirPath(String)
        VB: ITRTCCloud.setLogDirPath(String)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setLogDirPath(System.String)
        VB: trtc.ITRTCCloud.setLogDirPath(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setLogDirPath
        path: ''
        startLine: 3476
      summary: "\nSet the path to save logs\n"
      remarks: "\nLog files are stored in &quot;C:/Users/[system username]/AppData/Roaming/Tencent/liteav/log&quot; (&quot;%appdata%/Tencent/liteav/log&quot;) by default. To change the path, you need to call this API before calling other APIs.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setLogDirPath(string path)
          VB: Public MustOverride Sub setLogDirPath(path As String)
        parameters:
        - id: path
          type: System.String
          description: Path to save log files, e.g., &quot;D:\\Log&quot;, which must be converted to UTF-8
      overload: trtc.ITRTCCloud.setLogDirPath*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.setLogCallback(trtc.ITRTCLogCallback)
      commentId: M:trtc.ITRTCCloud.setLogCallback(trtc.ITRTCLogCallback)
      language: CSharp
      name:
        CSharp: setLogCallback(ITRTCLogCallback)
        VB: setLogCallback(ITRTCLogCallback)
      nameWithType:
        CSharp: ITRTCCloud.setLogCallback(ITRTCLogCallback)
        VB: ITRTCCloud.setLogCallback(ITRTCLogCallback)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.setLogCallback(trtc.ITRTCLogCallback)
        VB: trtc.ITRTCCloud.setLogCallback(trtc.ITRTCLogCallback)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setLogCallback
        path: ''
        startLine: 3482
      summary: "\nSet the log callback\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setLogCallback(ITRTCLogCallback callback)
          VB: Public MustOverride Sub setLogCallback(callback As ITRTCLogCallback)
        parameters:
        - id: callback
          type: trtc.ITRTCLogCallback
          description: Log callback
      overload: trtc.ITRTCCloud.setLogCallback*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITRTCCloud.callExperimentalAPI(System.String)
      commentId: M:trtc.ITRTCCloud.callExperimentalAPI(System.String)
      language: CSharp
      name:
        CSharp: callExperimentalAPI(String)
        VB: callExperimentalAPI(String)
      nameWithType:
        CSharp: ITRTCCloud.callExperimentalAPI(String)
        VB: ITRTCCloud.callExperimentalAPI(String)
      qualifiedName:
        CSharp: trtc.ITRTCCloud.callExperimentalAPI(System.String)
        VB: trtc.ITRTCCloud.callExperimentalAPI(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: callExperimentalAPI
        path: ''
        startLine: 3491
      summary: "\nCall experimental APIs\n"
      remarks: "\nThis API is used to call experimental APIs.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void callExperimentalAPI(string jsonStr)
          VB: Public MustOverride Sub callExperimentalAPI(jsonStr As String)
        parameters:
        - id: jsonStr
          type: System.String
          description: JSON-string API name and parameter description
      overload: trtc.ITRTCCloud.callExperimentalAPI*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
  - id: trtc.ITXMusicPlayObserver
    commentId: T:trtc.ITXMusicPlayObserver
    language: CSharp
    name:
      CSharp: ITXMusicPlayObserver
      VB: ITXMusicPlayObserver
    nameWithType:
      CSharp: ITXMusicPlayObserver
      VB: ITXMusicPlayObserver
    qualifiedName:
      CSharp: trtc.ITXMusicPlayObserver
      VB: trtc.ITXMusicPlayObserver
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: ITXMusicPlayObserver
      path: ''
      startLine: 3503
    summary: "\nBackground music callbacks\n"
    example: []
    syntax:
      content:
        CSharp: public interface ITXMusicPlayObserver
        VB: Public Interface ITXMusicPlayObserver
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: trtc.ITXMusicPlayObserver.onStart(System.Int32,System.Int32)
      commentId: M:trtc.ITXMusicPlayObserver.onStart(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: onStart(Int32, Int32)
        VB: onStart(Int32, Int32)
      nameWithType:
        CSharp: ITXMusicPlayObserver.onStart(Int32, Int32)
        VB: ITXMusicPlayObserver.onStart(Int32, Int32)
      qualifiedName:
        CSharp: trtc.ITXMusicPlayObserver.onStart(System.Int32, System.Int32)
        VB: trtc.ITXMusicPlayObserver.onStart(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onStart
        path: ''
        startLine: 3510
      summary: "\nBackground music started\n"
      example: []
      syntax:
        content:
          CSharp: void onStart(int id, int errCode)
          VB: Sub onStart(id As Integer, errCode As Integer)
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
        - id: errCode
          type: System.Int32
          description: Error code
      overload: trtc.ITXMusicPlayObserver.onStart*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITXMusicPlayObserver.onPlayProgress(System.Int32,System.Int64,System.Int64)
      commentId: M:trtc.ITXMusicPlayObserver.onPlayProgress(System.Int32,System.Int64,System.Int64)
      language: CSharp
      name:
        CSharp: onPlayProgress(Int32, Int64, Int64)
        VB: onPlayProgress(Int32, Int64, Int64)
      nameWithType:
        CSharp: ITXMusicPlayObserver.onPlayProgress(Int32, Int64, Int64)
        VB: ITXMusicPlayObserver.onPlayProgress(Int32, Int64, Int64)
      qualifiedName:
        CSharp: trtc.ITXMusicPlayObserver.onPlayProgress(System.Int32, System.Int64, System.Int64)
        VB: trtc.ITXMusicPlayObserver.onPlayProgress(System.Int32, System.Int64, System.Int64)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onPlayProgress
        path: ''
        startLine: 3518
      summary: "\nPlayback progress of background music\n"
      example: []
      syntax:
        content:
          CSharp: void onPlayProgress(int id, long curPtsMS, long durationMS)
          VB: Sub onPlayProgress(id As Integer, curPtsMS As Long, durationMS As Long)
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
        - id: curPtsMS
          type: System.Int64
          description: Current playback time
        - id: durationMS
          type: System.Int64
          description: Total music length
      overload: trtc.ITXMusicPlayObserver.onPlayProgress*
      modifiers:
        CSharp: []
        VB: []
    - id: trtc.ITXMusicPlayObserver.onComplete(System.Int32,System.Int32)
      commentId: M:trtc.ITXMusicPlayObserver.onComplete(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: onComplete(Int32, Int32)
        VB: onComplete(Int32, Int32)
      nameWithType:
        CSharp: ITXMusicPlayObserver.onComplete(Int32, Int32)
        VB: ITXMusicPlayObserver.onComplete(Int32, Int32)
      qualifiedName:
        CSharp: trtc.ITXMusicPlayObserver.onComplete(System.Int32, System.Int32)
        VB: trtc.ITXMusicPlayObserver.onComplete(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: onComplete
        path: ''
        startLine: 3525
      summary: "\nBackground music ended\n"
      example: []
      syntax:
        content:
          CSharp: void onComplete(int id, int errCode)
          VB: Sub onComplete(id As Integer, errCode As Integer)
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
        - id: errCode
          type: System.Int32
          description: Error code
      overload: trtc.ITXMusicPlayObserver.onComplete*
      modifiers:
        CSharp: []
        VB: []
  - id: trtc.ITXAudioEffectManager
    commentId: T:trtc.ITXAudioEffectManager
    language: CSharp
    name:
      CSharp: ITXAudioEffectManager
      VB: ITXAudioEffectManager
    nameWithType:
      CSharp: ITXAudioEffectManager
      VB: ITXAudioEffectManager
    qualifiedName:
      CSharp: trtc.ITXAudioEffectManager
      VB: trtc.ITXAudioEffectManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: trtc
    source:
      id: ITXAudioEffectManager
      path: ''
      startLine: 3531
    summary: "\nTRTC music and audio effect APIs\n"
    example: []
    syntax:
      content:
        CSharp: public abstract class ITXAudioEffectManager
        VB: Public MustInherit Class ITXAudioEffectManager
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    - System.Object.ToString
    - System.Object.ReferenceEquals(System.Object,System.Object)
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: trtc.ITXAudioEffectManager.setVoiceReverbType(trtc.TXVoiceReverbType)
      commentId: M:trtc.ITXAudioEffectManager.setVoiceReverbType(trtc.TXVoiceReverbType)
      language: CSharp
      name:
        CSharp: setVoiceReverbType(TXVoiceReverbType)
        VB: setVoiceReverbType(TXVoiceReverbType)
      nameWithType:
        CSharp: ITXAudioEffectManager.setVoiceReverbType(TXVoiceReverbType)
        VB: ITXAudioEffectManager.setVoiceReverbType(TXVoiceReverbType)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.setVoiceReverbType(trtc.TXVoiceReverbType)
        VB: trtc.ITXAudioEffectManager.setVoiceReverbType(trtc.TXVoiceReverbType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setVoiceReverbType
        path: ''
        startLine: 3561
      summary: "\n1.3 Set a reverb effect (karaoke, room, hall, deep, resonant, etc.)\n"
      remarks: An effect becomes invalid after you leave the room. If you want to use the same effect the next time, you need to call this API again after room entry.
      example: []
      syntax:
        content:
          CSharp: public abstract void setVoiceReverbType(TXVoiceReverbType reverbType)
          VB: Public MustOverride Sub setVoiceReverbType(reverbType As TXVoiceReverbType)
        parameters:
        - id: reverbType
          type: trtc.TXVoiceReverbType
      overload: trtc.ITXAudioEffectManager.setVoiceReverbType*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.setVoiceCaptureVolume(System.Int32)
      commentId: M:trtc.ITXAudioEffectManager.setVoiceCaptureVolume(System.Int32)
      language: CSharp
      name:
        CSharp: setVoiceCaptureVolume(Int32)
        VB: setVoiceCaptureVolume(Int32)
      nameWithType:
        CSharp: ITXAudioEffectManager.setVoiceCaptureVolume(Int32)
        VB: ITXAudioEffectManager.setVoiceCaptureVolume(Int32)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.setVoiceCaptureVolume(System.Int32)
        VB: trtc.ITXAudioEffectManager.setVoiceCaptureVolume(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setVoiceCaptureVolume
        path: ''
        startLine: 3578
      summary: "\n1.5 Set the mic capturing volume\n"
      remarks: "\nYou need to contact technical support to use a value higher than `100`.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setVoiceCaptureVolume(int volume)
          VB: Public MustOverride Sub setVoiceCaptureVolume(volume As Integer)
        parameters:
        - id: volume
          type: System.Int32
          description: 'Volume. Value range: 0-150. Default value: `100`'
      overload: trtc.ITXAudioEffectManager.setVoiceCaptureVolume*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.setMusicObserver(System.Int32,trtc.ITXMusicPlayObserver)
      commentId: M:trtc.ITXAudioEffectManager.setMusicObserver(System.Int32,trtc.ITXMusicPlayObserver)
      language: CSharp
      name:
        CSharp: setMusicObserver(Int32, ITXMusicPlayObserver)
        VB: setMusicObserver(Int32, ITXMusicPlayObserver)
      nameWithType:
        CSharp: ITXAudioEffectManager.setMusicObserver(Int32, ITXMusicPlayObserver)
        VB: ITXAudioEffectManager.setMusicObserver(Int32, ITXMusicPlayObserver)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.setMusicObserver(System.Int32, trtc.ITXMusicPlayObserver)
        VB: trtc.ITXAudioEffectManager.setMusicObserver(System.Int32, trtc.ITXMusicPlayObserver)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setMusicObserver
        path: ''
        startLine: 3591
      summary: "\nSet the callback of the playback progress of background music\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setMusicObserver(int musicId, ITXMusicPlayObserver observer)
          VB: Public MustOverride Sub setMusicObserver(musicId As Integer, observer As ITXMusicPlayObserver)
        parameters:
        - id: musicId
          type: System.Int32
          description: Music ID
        - id: observer
          type: trtc.ITXMusicPlayObserver
          description: For more information, please see the APIs defined in `ITXMusicPlayObserver`.
      overload: trtc.ITXAudioEffectManager.setMusicObserver*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.startPlayMusic(trtc.AudioMusicParam)
      commentId: M:trtc.ITXAudioEffectManager.startPlayMusic(trtc.AudioMusicParam)
      language: CSharp
      name:
        CSharp: startPlayMusic(AudioMusicParam)
        VB: startPlayMusic(AudioMusicParam)
      nameWithType:
        CSharp: ITXAudioEffectManager.startPlayMusic(AudioMusicParam)
        VB: ITXAudioEffectManager.startPlayMusic(AudioMusicParam)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.startPlayMusic(trtc.AudioMusicParam)
        VB: trtc.ITXAudioEffectManager.startPlayMusic(trtc.AudioMusicParam)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: startPlayMusic
        path: ''
        startLine: 3602
      summary: "\n2.1 Start background music\n<p>You must assign an ID to each music track so that you can start, stop, or set the volume of music tracks by ID.</p>\n"
      remarks: "\nTo play multiple music tracks at the same time, assign different IDs to them.\nIf you use the same ID to play a music track different from the current one, the SDK will stop the current one before playing the new one.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void startPlayMusic(AudioMusicParam musicParam)
          VB: Public MustOverride Sub startPlayMusic(musicParam As AudioMusicParam)
        parameters:
        - id: musicParam
          type: trtc.AudioMusicParam
          description: Music parameters
      overload: trtc.ITXAudioEffectManager.startPlayMusic*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.stopPlayMusic(System.Int32)
      commentId: M:trtc.ITXAudioEffectManager.stopPlayMusic(System.Int32)
      language: CSharp
      name:
        CSharp: stopPlayMusic(Int32)
        VB: stopPlayMusic(Int32)
      nameWithType:
        CSharp: ITXAudioEffectManager.stopPlayMusic(Int32)
        VB: ITXAudioEffectManager.stopPlayMusic(Int32)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.stopPlayMusic(System.Int32)
        VB: trtc.ITXAudioEffectManager.stopPlayMusic(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: stopPlayMusic
        path: ''
        startLine: 3612
      summary: "\n2.2 Stop background music\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void stopPlayMusic(int id)
          VB: Public MustOverride Sub stopPlayMusic(id As Integer)
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
      overload: trtc.ITXAudioEffectManager.stopPlayMusic*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.pausePlayMusic(System.Int32)
      commentId: M:trtc.ITXAudioEffectManager.pausePlayMusic(System.Int32)
      language: CSharp
      name:
        CSharp: pausePlayMusic(Int32)
        VB: pausePlayMusic(Int32)
      nameWithType:
        CSharp: ITXAudioEffectManager.pausePlayMusic(Int32)
        VB: ITXAudioEffectManager.pausePlayMusic(Int32)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.pausePlayMusic(System.Int32)
        VB: trtc.ITXAudioEffectManager.pausePlayMusic(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: pausePlayMusic
        path: ''
        startLine: 3618
      summary: "\n2.3 Pause background music\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void pausePlayMusic(int id)
          VB: Public MustOverride Sub pausePlayMusic(id As Integer)
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
      overload: trtc.ITXAudioEffectManager.pausePlayMusic*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.resumePlayMusic(System.Int32)
      commentId: M:trtc.ITXAudioEffectManager.resumePlayMusic(System.Int32)
      language: CSharp
      name:
        CSharp: resumePlayMusic(Int32)
        VB: resumePlayMusic(Int32)
      nameWithType:
        CSharp: ITXAudioEffectManager.resumePlayMusic(Int32)
        VB: ITXAudioEffectManager.resumePlayMusic(Int32)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.resumePlayMusic(System.Int32)
        VB: trtc.ITXAudioEffectManager.resumePlayMusic(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: resumePlayMusic
        path: ''
        startLine: 3624
      summary: "\n2.4 Resume background music\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void resumePlayMusic(int id)
          VB: Public MustOverride Sub resumePlayMusic(id As Integer)
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
      overload: trtc.ITXAudioEffectManager.resumePlayMusic*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.setMusicPublishVolume(System.Int32,System.Int32)
      commentId: M:trtc.ITXAudioEffectManager.setMusicPublishVolume(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: setMusicPublishVolume(Int32, Int32)
        VB: setMusicPublishVolume(Int32, Int32)
      nameWithType:
        CSharp: ITXAudioEffectManager.setMusicPublishVolume(Int32, Int32)
        VB: ITXAudioEffectManager.setMusicPublishVolume(Int32, Int32)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.setMusicPublishVolume(System.Int32, System.Int32)
        VB: trtc.ITXAudioEffectManager.setMusicPublishVolume(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setMusicPublishVolume
        path: ''
        startLine: 3634
      summary: "\n2.5 Set the volume of the anchor’s background music heard by remote users\n"
      remarks: "\nYou need to contact technical support to use a value higher than `100`.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setMusicPublishVolume(int id, int volume)
          VB: Public MustOverride Sub setMusicPublishVolume(id As Integer, volume As Integer)
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
        - id: volume
          type: System.Int32
          description: 'Volume. Value range: 0-150. Default value: `100`'
      overload: trtc.ITXAudioEffectManager.setMusicPublishVolume*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.setMusicPlayoutVolume(System.Int32,System.Int32)
      commentId: M:trtc.ITXAudioEffectManager.setMusicPlayoutVolume(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: setMusicPlayoutVolume(Int32, Int32)
        VB: setMusicPlayoutVolume(Int32, Int32)
      nameWithType:
        CSharp: ITXAudioEffectManager.setMusicPlayoutVolume(Int32, Int32)
        VB: ITXAudioEffectManager.setMusicPlayoutVolume(Int32, Int32)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.setMusicPlayoutVolume(System.Int32, System.Int32)
        VB: trtc.ITXAudioEffectManager.setMusicPlayoutVolume(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setMusicPlayoutVolume
        path: ''
        startLine: 3644
      summary: "\n2.6 Set the volume of background music heard by the anchor\n"
      remarks: "\nYou need to contact technical support to use a value higher than `100`.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setMusicPlayoutVolume(int id, int volume)
          VB: Public MustOverride Sub setMusicPlayoutVolume(id As Integer, volume As Integer)
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
        - id: volume
          type: System.Int32
          description: 'Volume. Value range: 0-150. Default value: `100`'
      overload: trtc.ITXAudioEffectManager.setMusicPlayoutVolume*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.setAllMusicVolume(System.Int32)
      commentId: M:trtc.ITXAudioEffectManager.setAllMusicVolume(System.Int32)
      language: CSharp
      name:
        CSharp: setAllMusicVolume(Int32)
        VB: setAllMusicVolume(Int32)
      nameWithType:
        CSharp: ITXAudioEffectManager.setAllMusicVolume(Int32)
        VB: ITXAudioEffectManager.setAllMusicVolume(Int32)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.setAllMusicVolume(System.Int32)
        VB: trtc.ITXAudioEffectManager.setAllMusicVolume(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setAllMusicVolume
        path: ''
        startLine: 3653
      summary: "\n2.7 Set the global (local and remote) volume of background music\n"
      remarks: "\nYou need to contact technical support to use a value higher than `100`.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setAllMusicVolume(int volume)
          VB: Public MustOverride Sub setAllMusicVolume(volume As Integer)
        parameters:
        - id: volume
          type: System.Int32
          description: 'Volume. Value range: 0-150. Default value: `100`'
      overload: trtc.ITXAudioEffectManager.setAllMusicVolume*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.setMusicPitch(System.Int32,System.Double)
      commentId: M:trtc.ITXAudioEffectManager.setMusicPitch(System.Int32,System.Double)
      language: CSharp
      name:
        CSharp: setMusicPitch(Int32, Double)
        VB: setMusicPitch(Int32, Double)
      nameWithType:
        CSharp: ITXAudioEffectManager.setMusicPitch(Int32, Double)
        VB: ITXAudioEffectManager.setMusicPitch(Int32, Double)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.setMusicPitch(System.Int32, System.Double)
        VB: trtc.ITXAudioEffectManager.setMusicPitch(System.Int32, System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setMusicPitch
        path: ''
        startLine: 3660
      summary: "\n2.8 Adjust the pitch of background music\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setMusicPitch(int id, double pitch)
          VB: Public MustOverride Sub setMusicPitch(id As Integer, pitch As Double)
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
        - id: pitch
          type: System.Double
          description: 'Pitch. Value range: [-1, 1] (floating point number). Default value: 0.0f'
      overload: trtc.ITXAudioEffectManager.setMusicPitch*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.setMusicSpeedRate(System.Int32,System.Double)
      commentId: M:trtc.ITXAudioEffectManager.setMusicSpeedRate(System.Int32,System.Double)
      language: CSharp
      name:
        CSharp: setMusicSpeedRate(Int32, Double)
        VB: setMusicSpeedRate(Int32, Double)
      nameWithType:
        CSharp: ITXAudioEffectManager.setMusicSpeedRate(Int32, Double)
        VB: ITXAudioEffectManager.setMusicSpeedRate(Int32, Double)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.setMusicSpeedRate(System.Int32, System.Double)
        VB: trtc.ITXAudioEffectManager.setMusicSpeedRate(System.Int32, System.Double)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: setMusicSpeedRate
        path: ''
        startLine: 3667
      summary: "\n2.9 Change the speed of background music\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void setMusicSpeedRate(int id, double speedRate)
          VB: Public MustOverride Sub setMusicSpeedRate(id As Integer, speedRate As Double)
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
        - id: speedRate
          type: System.Double
      overload: trtc.ITXAudioEffectManager.setMusicSpeedRate*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.getMusicCurrentPosInMS(System.Int32)
      commentId: M:trtc.ITXAudioEffectManager.getMusicCurrentPosInMS(System.Int32)
      language: CSharp
      name:
        CSharp: getMusicCurrentPosInMS(Int32)
        VB: getMusicCurrentPosInMS(Int32)
      nameWithType:
        CSharp: ITXAudioEffectManager.getMusicCurrentPosInMS(Int32)
        VB: ITXAudioEffectManager.getMusicCurrentPosInMS(Int32)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.getMusicCurrentPosInMS(System.Int32)
        VB: trtc.ITXAudioEffectManager.getMusicCurrentPosInMS(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: getMusicCurrentPosInMS
        path: ''
        startLine: 3676
      summary: "\n2.10 Get the playback progress (ms) of background music\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int getMusicCurrentPosInMS(int id)
          VB: Public MustOverride Function getMusicCurrentPosInMS(id As Integer) As Integer
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
        return:
          type: System.Int32
          description: "\nThe current playback time (ms) is returned if this API is called successfully; otherwise, `-1` is returned.\n"
      overload: trtc.ITXAudioEffectManager.getMusicCurrentPosInMS*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.seekMusicToPosInMS(System.Int32,System.Int32)
      commentId: M:trtc.ITXAudioEffectManager.seekMusicToPosInMS(System.Int32,System.Int32)
      language: CSharp
      name:
        CSharp: seekMusicToPosInMS(Int32, Int32)
        VB: seekMusicToPosInMS(Int32, Int32)
      nameWithType:
        CSharp: ITXAudioEffectManager.seekMusicToPosInMS(Int32, Int32)
        VB: ITXAudioEffectManager.seekMusicToPosInMS(Int32, Int32)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.seekMusicToPosInMS(System.Int32, System.Int32)
        VB: trtc.ITXAudioEffectManager.seekMusicToPosInMS(System.Int32, System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: seekMusicToPosInMS
        path: ''
        startLine: 3687
      summary: "\n2.11 Set the playback progress (ms) of background music\n"
      remarks: "\nDo not call this API frequently as the music file may be read and written each time the API is called, which can be time-consuming.\nIf you use this API to implement a draggable progress bar, do not call it during dragging, but after receiving the callback that indicates the completion of dragging.\n"
      example: []
      syntax:
        content:
          CSharp: public abstract void seekMusicToPosInMS(int id, int pts)
          VB: Public MustOverride Sub seekMusicToPosInMS(id As Integer, pts As Integer)
        parameters:
        - id: id
          type: System.Int32
          description: Music ID
        - id: pts
          type: System.Int32
          description: Playback progress (ms)
      overload: trtc.ITXAudioEffectManager.seekMusicToPosInMS*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
    - id: trtc.ITXAudioEffectManager.getMusicDurationInMS(System.String)
      commentId: M:trtc.ITXAudioEffectManager.getMusicDurationInMS(System.String)
      language: CSharp
      name:
        CSharp: getMusicDurationInMS(String)
        VB: getMusicDurationInMS(String)
      nameWithType:
        CSharp: ITXAudioEffectManager.getMusicDurationInMS(String)
        VB: ITXAudioEffectManager.getMusicDurationInMS(String)
      qualifiedName:
        CSharp: trtc.ITXAudioEffectManager.getMusicDurationInMS(System.String)
        VB: trtc.ITXAudioEffectManager.getMusicDurationInMS(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: trtc
      source:
        id: getMusicDurationInMS
        path: ''
        startLine: 3696
      summary: "\n2.12 Get the total music length (ms)\n"
      example: []
      syntax:
        content:
          CSharp: public abstract int getMusicDurationInMS(string path)
          VB: Public MustOverride Function getMusicDurationInMS(path As String) As Integer
        parameters:
        - id: path
          type: System.String
          description: Path of the music file. If it is not specified, the length of the music file being played is returned.
        return:
          type: System.Int32
          description: "\nThe total music length is returned if this API is called successfully; otherwise, `-1` is returned.\n"
      overload: trtc.ITXAudioEffectManager.getMusicDurationInMS*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
references:
  trtc:
    name:
      CSharp:
      - name: trtc
        nameWithType: trtc
        qualifiedName: trtc
      VB:
      - name: trtc
        nameWithType: trtc
        qualifiedName: trtc
    isDefinition: true
    commentId: N:trtc
  trtc.TXLiteAVError:
    name:
      CSharp:
      - id: trtc.TXLiteAVError
        name: TXLiteAVError
        nameWithType: TXLiteAVError
        qualifiedName: trtc.TXLiteAVError
      VB:
      - id: trtc.TXLiteAVError
        name: TXLiteAVError
        nameWithType: TXLiteAVError
        qualifiedName: trtc.TXLiteAVError
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TXLiteAVError
  trtc.TXLiteAVWarning:
    name:
      CSharp:
      - id: trtc.TXLiteAVWarning
        name: TXLiteAVWarning
        nameWithType: TXLiteAVWarning
        qualifiedName: trtc.TXLiteAVWarning
      VB:
      - id: trtc.TXLiteAVWarning
        name: TXLiteAVWarning
        nameWithType: TXLiteAVWarning
        qualifiedName: trtc.TXLiteAVWarning
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TXLiteAVWarning
  trtc.TRTCVideoResolution:
    name:
      CSharp:
      - id: trtc.TRTCVideoResolution
        name: TRTCVideoResolution
        nameWithType: TRTCVideoResolution
        qualifiedName: trtc.TRTCVideoResolution
      VB:
      - id: trtc.TRTCVideoResolution
        name: TRTCVideoResolution
        nameWithType: TRTCVideoResolution
        qualifiedName: trtc.TRTCVideoResolution
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCVideoResolution
  trtc.TRTCVideoResolutionMode:
    name:
      CSharp:
      - id: trtc.TRTCVideoResolutionMode
        name: TRTCVideoResolutionMode
        nameWithType: TRTCVideoResolutionMode
        qualifiedName: trtc.TRTCVideoResolutionMode
      VB:
      - id: trtc.TRTCVideoResolutionMode
        name: TRTCVideoResolutionMode
        nameWithType: TRTCVideoResolutionMode
        qualifiedName: trtc.TRTCVideoResolutionMode
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCVideoResolutionMode
  trtc.TRTCVideoStreamType:
    name:
      CSharp:
      - id: trtc.TRTCVideoStreamType
        name: TRTCVideoStreamType
        nameWithType: TRTCVideoStreamType
        qualifiedName: trtc.TRTCVideoStreamType
      VB:
      - id: trtc.TRTCVideoStreamType
        name: TRTCVideoStreamType
        nameWithType: TRTCVideoStreamType
        qualifiedName: trtc.TRTCVideoStreamType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCVideoStreamType
  trtc.TRTCQuality:
    name:
      CSharp:
      - id: trtc.TRTCQuality
        name: TRTCQuality
        nameWithType: TRTCQuality
        qualifiedName: trtc.TRTCQuality
      VB:
      - id: trtc.TRTCQuality
        name: TRTCQuality
        nameWithType: TRTCQuality
        qualifiedName: trtc.TRTCQuality
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCQuality
  trtc.TRTCVideoFillMode:
    name:
      CSharp:
      - id: trtc.TRTCVideoFillMode
        name: TRTCVideoFillMode
        nameWithType: TRTCVideoFillMode
        qualifiedName: trtc.TRTCVideoFillMode
      VB:
      - id: trtc.TRTCVideoFillMode
        name: TRTCVideoFillMode
        nameWithType: TRTCVideoFillMode
        qualifiedName: trtc.TRTCVideoFillMode
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCVideoFillMode
  trtc.TRTCVideoRotation:
    name:
      CSharp:
      - id: trtc.TRTCVideoRotation
        name: TRTCVideoRotation
        nameWithType: TRTCVideoRotation
        qualifiedName: trtc.TRTCVideoRotation
      VB:
      - id: trtc.TRTCVideoRotation
        name: TRTCVideoRotation
        nameWithType: TRTCVideoRotation
        qualifiedName: trtc.TRTCVideoRotation
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCVideoRotation
  trtc.TRTCBeautyStyle:
    name:
      CSharp:
      - id: trtc.TRTCBeautyStyle
        name: TRTCBeautyStyle
        nameWithType: TRTCBeautyStyle
        qualifiedName: trtc.TRTCBeautyStyle
      VB:
      - id: trtc.TRTCBeautyStyle
        name: TRTCBeautyStyle
        nameWithType: TRTCBeautyStyle
        qualifiedName: trtc.TRTCBeautyStyle
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCBeautyStyle
  trtc.TRTCWaterMarkSrcType:
    name:
      CSharp:
      - id: trtc.TRTCWaterMarkSrcType
        name: TRTCWaterMarkSrcType
        nameWithType: TRTCWaterMarkSrcType
        qualifiedName: trtc.TRTCWaterMarkSrcType
      VB:
      - id: trtc.TRTCWaterMarkSrcType
        name: TRTCWaterMarkSrcType
        nameWithType: TRTCWaterMarkSrcType
        qualifiedName: trtc.TRTCWaterMarkSrcType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCWaterMarkSrcType
  trtc.TRTCVideoPixelFormat:
    name:
      CSharp:
      - id: trtc.TRTCVideoPixelFormat
        name: TRTCVideoPixelFormat
        nameWithType: TRTCVideoPixelFormat
        qualifiedName: trtc.TRTCVideoPixelFormat
      VB:
      - id: trtc.TRTCVideoPixelFormat
        name: TRTCVideoPixelFormat
        nameWithType: TRTCVideoPixelFormat
        qualifiedName: trtc.TRTCVideoPixelFormat
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCVideoPixelFormat
  trtc.TRTCVideoBufferType:
    name:
      CSharp:
      - id: trtc.TRTCVideoBufferType
        name: TRTCVideoBufferType
        nameWithType: TRTCVideoBufferType
        qualifiedName: trtc.TRTCVideoBufferType
      VB:
      - id: trtc.TRTCVideoBufferType
        name: TRTCVideoBufferType
        nameWithType: TRTCVideoBufferType
        qualifiedName: trtc.TRTCVideoBufferType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCVideoBufferType
  trtc.TRTCAppScene:
    name:
      CSharp:
      - id: trtc.TRTCAppScene
        name: TRTCAppScene
        nameWithType: TRTCAppScene
        qualifiedName: trtc.TRTCAppScene
      VB:
      - id: trtc.TRTCAppScene
        name: TRTCAppScene
        nameWithType: TRTCAppScene
        qualifiedName: trtc.TRTCAppScene
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCAppScene
  trtc.TRTCRoleType:
    name:
      CSharp:
      - id: trtc.TRTCRoleType
        name: TRTCRoleType
        nameWithType: TRTCRoleType
        qualifiedName: trtc.TRTCRoleType
      VB:
      - id: trtc.TRTCRoleType
        name: TRTCRoleType
        nameWithType: TRTCRoleType
        qualifiedName: trtc.TRTCRoleType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCRoleType
  trtc.TRTCQosControlMode:
    name:
      CSharp:
      - id: trtc.TRTCQosControlMode
        name: TRTCQosControlMode
        nameWithType: TRTCQosControlMode
        qualifiedName: trtc.TRTCQosControlMode
      VB:
      - id: trtc.TRTCQosControlMode
        name: TRTCQosControlMode
        nameWithType: TRTCQosControlMode
        qualifiedName: trtc.TRTCQosControlMode
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCQosControlMode
  trtc.TRTCVideoQosPreference:
    name:
      CSharp:
      - id: trtc.TRTCVideoQosPreference
        name: TRTCVideoQosPreference
        nameWithType: TRTCVideoQosPreference
        qualifiedName: trtc.TRTCVideoQosPreference
      VB:
      - id: trtc.TRTCVideoQosPreference
        name: TRTCVideoQosPreference
        nameWithType: TRTCVideoQosPreference
        qualifiedName: trtc.TRTCVideoQosPreference
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCVideoQosPreference
  trtc.TRTCAudioFrameFormat:
    name:
      CSharp:
      - id: trtc.TRTCAudioFrameFormat
        name: TRTCAudioFrameFormat
        nameWithType: TRTCAudioFrameFormat
        qualifiedName: trtc.TRTCAudioFrameFormat
      VB:
      - id: trtc.TRTCAudioFrameFormat
        name: TRTCAudioFrameFormat
        nameWithType: TRTCAudioFrameFormat
        qualifiedName: trtc.TRTCAudioFrameFormat
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCAudioFrameFormat
  trtc.TRTCAudioQuality:
    name:
      CSharp:
      - id: trtc.TRTCAudioQuality
        name: TRTCAudioQuality
        nameWithType: TRTCAudioQuality
        qualifiedName: trtc.TRTCAudioQuality
      VB:
      - id: trtc.TRTCAudioQuality
        name: TRTCAudioQuality
        nameWithType: TRTCAudioQuality
        qualifiedName: trtc.TRTCAudioQuality
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCAudioQuality
  trtc.TXVoiceChangeType:
    name:
      CSharp:
      - id: trtc.TXVoiceChangeType
        name: TXVoiceChangeType
        nameWithType: TXVoiceChangeType
        qualifiedName: trtc.TXVoiceChangeType
      VB:
      - id: trtc.TXVoiceChangeType
        name: TXVoiceChangeType
        nameWithType: TXVoiceChangeType
        qualifiedName: trtc.TXVoiceChangeType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TXVoiceChangeType
  trtc.TXVoiceReverbType:
    name:
      CSharp:
      - id: trtc.TXVoiceReverbType
        name: TXVoiceReverbType
        nameWithType: TXVoiceReverbType
        qualifiedName: trtc.TXVoiceReverbType
      VB:
      - id: trtc.TXVoiceReverbType
        name: TXVoiceReverbType
        nameWithType: TXVoiceReverbType
        qualifiedName: trtc.TXVoiceReverbType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TXVoiceReverbType
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  trtc.TRTCSwitchRoomConfig:
    name:
      CSharp:
      - id: trtc.TRTCSwitchRoomConfig
        name: TRTCSwitchRoomConfig
        nameWithType: TRTCSwitchRoomConfig
        qualifiedName: trtc.TRTCSwitchRoomConfig
      VB:
      - id: trtc.TRTCSwitchRoomConfig
        name: TRTCSwitchRoomConfig
        nameWithType: TRTCSwitchRoomConfig
        qualifiedName: trtc.TRTCSwitchRoomConfig
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCSwitchRoomConfig
  String:
    name:
      CSharp:
      - id: String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
      VB:
      - id: String
        name: String
        nameWithType: String
        qualifiedName: String
        isExternal: true
    isDefinition: true
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  trtc.AudioMusicParam:
    name:
      CSharp:
      - id: trtc.AudioMusicParam
        name: AudioMusicParam
        nameWithType: AudioMusicParam
        qualifiedName: trtc.AudioMusicParam
      VB:
      - id: trtc.AudioMusicParam
        name: AudioMusicParam
        nameWithType: AudioMusicParam
        qualifiedName: trtc.AudioMusicParam
    isDefinition: true
    parent: trtc
    commentId: T:trtc.AudioMusicParam
  trtc.TRTCLogLevel:
    name:
      CSharp:
      - id: trtc.TRTCLogLevel
        name: TRTCLogLevel
        nameWithType: TRTCLogLevel
        qualifiedName: trtc.TRTCLogLevel
      VB:
      - id: trtc.TRTCLogLevel
        name: TRTCLogLevel
        nameWithType: TRTCLogLevel
        qualifiedName: trtc.TRTCLogLevel
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCLogLevel
  trtc.TRTCDeviceState:
    name:
      CSharp:
      - id: trtc.TRTCDeviceState
        name: TRTCDeviceState
        nameWithType: TRTCDeviceState
        qualifiedName: trtc.TRTCDeviceState
      VB:
      - id: trtc.TRTCDeviceState
        name: TRTCDeviceState
        nameWithType: TRTCDeviceState
        qualifiedName: trtc.TRTCDeviceState
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCDeviceState
  trtc.TRTCDeviceType:
    name:
      CSharp:
      - id: trtc.TRTCDeviceType
        name: TRTCDeviceType
        nameWithType: TRTCDeviceType
        qualifiedName: trtc.TRTCDeviceType
      VB:
      - id: trtc.TRTCDeviceType
        name: TRTCDeviceType
        nameWithType: TRTCDeviceType
        qualifiedName: trtc.TRTCDeviceType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCDeviceType
  trtc.TXSystemVolumeType:
    name:
      CSharp:
      - id: trtc.TXSystemVolumeType
        name: TXSystemVolumeType
        nameWithType: TXSystemVolumeType
        qualifiedName: trtc.TXSystemVolumeType
      VB:
      - id: trtc.TXSystemVolumeType
        name: TXSystemVolumeType
        nameWithType: TXSystemVolumeType
        qualifiedName: trtc.TXSystemVolumeType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TXSystemVolumeType
  trtc.TXAudioRoute:
    name:
      CSharp:
      - id: trtc.TXAudioRoute
        name: TXAudioRoute
        nameWithType: TXAudioRoute
        qualifiedName: trtc.TXAudioRoute
      VB:
      - id: trtc.TXAudioRoute
        name: TXAudioRoute
        nameWithType: TXAudioRoute
        qualifiedName: trtc.TXAudioRoute
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TXAudioRoute
  UInt32:
    name:
      CSharp:
      - id: UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: UInt32
        isExternal: true
      VB:
      - id: UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: UInt32
        isExternal: true
    isDefinition: true
  trtc.TRTCParams:
    name:
      CSharp:
      - id: trtc.TRTCParams
        name: TRTCParams
        nameWithType: TRTCParams
        qualifiedName: trtc.TRTCParams
      VB:
      - id: trtc.TRTCParams
        name: TRTCParams
        nameWithType: TRTCParams
        qualifiedName: trtc.TRTCParams
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCParams
  trtc.TRTCVideoEncParam:
    name:
      CSharp:
      - id: trtc.TRTCVideoEncParam
        name: TRTCVideoEncParam
        nameWithType: TRTCVideoEncParam
        qualifiedName: trtc.TRTCVideoEncParam
      VB:
      - id: trtc.TRTCVideoEncParam
        name: TRTCVideoEncParam
        nameWithType: TRTCVideoEncParam
        qualifiedName: trtc.TRTCVideoEncParam
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCVideoEncParam
  trtc.TRTCAudioRecordingParams:
    name:
      CSharp:
      - id: trtc.TRTCAudioRecordingParams
        name: TRTCAudioRecordingParams
        nameWithType: TRTCAudioRecordingParams
        qualifiedName: trtc.TRTCAudioRecordingParams
      VB:
      - id: trtc.TRTCAudioRecordingParams
        name: TRTCAudioRecordingParams
        nameWithType: TRTCAudioRecordingParams
        qualifiedName: trtc.TRTCAudioRecordingParams
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCAudioRecordingParams
  trtc.TRTCLocalRecordType:
    name:
      CSharp:
      - id: trtc.TRTCLocalRecordType
        name: TRTCLocalRecordType
        nameWithType: TRTCLocalRecordType
        qualifiedName: trtc.TRTCLocalRecordType
      VB:
      - id: trtc.TRTCLocalRecordType
        name: TRTCLocalRecordType
        nameWithType: TRTCLocalRecordType
        qualifiedName: trtc.TRTCLocalRecordType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCLocalRecordType
  trtc.TRTCLocalRecordingParams:
    name:
      CSharp:
      - id: trtc.TRTCLocalRecordingParams
        name: TRTCLocalRecordingParams
        nameWithType: TRTCLocalRecordingParams
        qualifiedName: trtc.TRTCLocalRecordingParams
      VB:
      - id: trtc.TRTCLocalRecordingParams
        name: TRTCLocalRecordingParams
        nameWithType: TRTCLocalRecordingParams
        qualifiedName: trtc.TRTCLocalRecordingParams
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCLocalRecordingParams
  trtc.TRTCNetworkQosParam:
    name:
      CSharp:
      - id: trtc.TRTCNetworkQosParam
        name: TRTCNetworkQosParam
        nameWithType: TRTCNetworkQosParam
        qualifiedName: trtc.TRTCNetworkQosParam
      VB:
      - id: trtc.TRTCNetworkQosParam
        name: TRTCNetworkQosParam
        nameWithType: TRTCNetworkQosParam
        qualifiedName: trtc.TRTCNetworkQosParam
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCNetworkQosParam
  trtc.TRTCVideoMirrorType:
    name:
      CSharp:
      - id: trtc.TRTCVideoMirrorType
        name: TRTCVideoMirrorType
        nameWithType: TRTCVideoMirrorType
        qualifiedName: trtc.TRTCVideoMirrorType
      VB:
      - id: trtc.TRTCVideoMirrorType
        name: TRTCVideoMirrorType
        nameWithType: TRTCVideoMirrorType
        qualifiedName: trtc.TRTCVideoMirrorType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCVideoMirrorType
  trtc.TRTCRenderParams:
    name:
      CSharp:
      - id: trtc.TRTCRenderParams
        name: TRTCRenderParams
        nameWithType: TRTCRenderParams
        qualifiedName: trtc.TRTCRenderParams
      VB:
      - id: trtc.TRTCRenderParams
        name: TRTCRenderParams
        nameWithType: TRTCRenderParams
        qualifiedName: trtc.TRTCRenderParams
    isDefinition: true
    commentId: T:trtc.TRTCRenderParams
  trtc.TRTCSnapshotSourceType:
    name:
      CSharp:
      - id: trtc.TRTCSnapshotSourceType
        name: TRTCSnapshotSourceType
        nameWithType: TRTCSnapshotSourceType
        qualifiedName: trtc.TRTCSnapshotSourceType
      VB:
      - id: trtc.TRTCSnapshotSourceType
        name: TRTCSnapshotSourceType
        nameWithType: TRTCSnapshotSourceType
        qualifiedName: trtc.TRTCSnapshotSourceType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCSnapshotSourceType
  trtc.TRTCQualityInfo:
    name:
      CSharp:
      - id: trtc.TRTCQualityInfo
        name: TRTCQualityInfo
        nameWithType: TRTCQualityInfo
        qualifiedName: trtc.TRTCQualityInfo
      VB:
      - id: trtc.TRTCQualityInfo
        name: TRTCQualityInfo
        nameWithType: TRTCQualityInfo
        qualifiedName: trtc.TRTCQualityInfo
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCQualityInfo
  trtc.TRTCVolumeInfo:
    name:
      CSharp:
      - id: trtc.TRTCVolumeInfo
        name: TRTCVolumeInfo
        nameWithType: TRTCVolumeInfo
        qualifiedName: trtc.TRTCVolumeInfo
      VB:
      - id: trtc.TRTCVolumeInfo
        name: TRTCVolumeInfo
        nameWithType: TRTCVolumeInfo
        qualifiedName: trtc.TRTCVolumeInfo
    isDefinition: true
    commentId: T:trtc.TRTCVolumeInfo
  System.Byte[]:
    name:
      CSharp:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: System.Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: System.Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  UInt64:
    name:
      CSharp:
      - id: UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: UInt64
        isExternal: true
      VB:
      - id: UInt64
        name: UInt64
        nameWithType: UInt64
        qualifiedName: UInt64
        isExternal: true
    isDefinition: true
  trtc.TRTCVideoFrame:
    name:
      CSharp:
      - id: trtc.TRTCVideoFrame
        name: TRTCVideoFrame
        nameWithType: TRTCVideoFrame
        qualifiedName: trtc.TRTCVideoFrame
      VB:
      - id: trtc.TRTCVideoFrame
        name: TRTCVideoFrame
        nameWithType: TRTCVideoFrame
        qualifiedName: trtc.TRTCVideoFrame
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCVideoFrame
  trtc.TRTCAudioFrame:
    name:
      CSharp:
      - id: trtc.TRTCAudioFrame
        name: TRTCAudioFrame
        nameWithType: TRTCAudioFrame
        qualifiedName: trtc.TRTCAudioFrame
      VB:
      - id: trtc.TRTCAudioFrame
        name: TRTCAudioFrame
        nameWithType: TRTCAudioFrame
        qualifiedName: trtc.TRTCAudioFrame
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCAudioFrame
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  trtc.TRTCSpeedTestResult:
    name:
      CSharp:
      - id: trtc.TRTCSpeedTestResult
        name: TRTCSpeedTestResult
        nameWithType: TRTCSpeedTestResult
        qualifiedName: trtc.TRTCSpeedTestResult
      VB:
      - id: trtc.TRTCSpeedTestResult
        name: TRTCSpeedTestResult
        nameWithType: TRTCSpeedTestResult
        qualifiedName: trtc.TRTCSpeedTestResult
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCSpeedTestResult
  trtc.TRTCPublishCDNParam:
    name:
      CSharp:
      - id: trtc.TRTCPublishCDNParam
        name: TRTCPublishCDNParam
        nameWithType: TRTCPublishCDNParam
        qualifiedName: trtc.TRTCPublishCDNParam
      VB:
      - id: trtc.TRTCPublishCDNParam
        name: TRTCPublishCDNParam
        nameWithType: TRTCPublishCDNParam
        qualifiedName: trtc.TRTCPublishCDNParam
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCPublishCDNParam
  trtc.TRTCTranscodingConfigMode:
    name:
      CSharp:
      - id: trtc.TRTCTranscodingConfigMode
        name: TRTCTranscodingConfigMode
        nameWithType: TRTCTranscodingConfigMode
        qualifiedName: trtc.TRTCTranscodingConfigMode
      VB:
      - id: trtc.TRTCTranscodingConfigMode
        name: TRTCTranscodingConfigMode
        nameWithType: TRTCTranscodingConfigMode
        qualifiedName: trtc.TRTCTranscodingConfigMode
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCTranscodingConfigMode
  trtc.RECT:
    name:
      CSharp:
      - id: trtc.RECT
        name: RECT
        nameWithType: RECT
        qualifiedName: trtc.RECT
      VB:
      - id: trtc.RECT
        name: RECT
        nameWithType: RECT
        qualifiedName: trtc.RECT
    isDefinition: true
    parent: trtc
    commentId: T:trtc.RECT
  trtc.TRTCMixInputType:
    name:
      CSharp:
      - id: trtc.TRTCMixInputType
        name: TRTCMixInputType
        nameWithType: TRTCMixInputType
        qualifiedName: trtc.TRTCMixInputType
      VB:
      - id: trtc.TRTCMixInputType
        name: TRTCMixInputType
        nameWithType: TRTCMixInputType
        qualifiedName: trtc.TRTCMixInputType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCMixInputType
  trtc.TRTCMixUser:
    name:
      CSharp:
      - id: trtc.TRTCMixUser
        name: TRTCMixUser
        nameWithType: TRTCMixUser
        qualifiedName: trtc.TRTCMixUser
      VB:
      - id: trtc.TRTCMixUser
        name: TRTCMixUser
        nameWithType: TRTCMixUser
        qualifiedName: trtc.TRTCMixUser
    isDefinition: true
    commentId: T:trtc.TRTCMixUser
  trtc.TRTCMixUser[]:
    name:
      CSharp:
      - id: trtc.TRTCMixUser
        name: TRTCMixUser
        nameWithType: TRTCMixUser
        qualifiedName: trtc.TRTCMixUser
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: trtc.TRTCMixUser
        name: TRTCMixUser
        nameWithType: TRTCMixUser
        qualifiedName: trtc.TRTCMixUser
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  trtc.TRTCTranscodingConfig:
    name:
      CSharp:
      - id: trtc.TRTCTranscodingConfig
        name: TRTCTranscodingConfig
        nameWithType: TRTCTranscodingConfig
        qualifiedName: trtc.TRTCTranscodingConfig
      VB:
      - id: trtc.TRTCTranscodingConfig
        name: TRTCTranscodingConfig
        nameWithType: TRTCTranscodingConfig
        qualifiedName: trtc.TRTCTranscodingConfig
    isDefinition: true
    commentId: T:trtc.TRTCTranscodingConfig
  trtc.TRTCLocalStatistics:
    name:
      CSharp:
      - id: trtc.TRTCLocalStatistics
        name: TRTCLocalStatistics
        nameWithType: TRTCLocalStatistics
        qualifiedName: trtc.TRTCLocalStatistics
      VB:
      - id: trtc.TRTCLocalStatistics
        name: TRTCLocalStatistics
        nameWithType: TRTCLocalStatistics
        qualifiedName: trtc.TRTCLocalStatistics
    isDefinition: true
    commentId: T:trtc.TRTCLocalStatistics
  trtc.TRTCRemoteStatistics:
    name:
      CSharp:
      - id: trtc.TRTCRemoteStatistics
        name: TRTCRemoteStatistics
        nameWithType: TRTCRemoteStatistics
        qualifiedName: trtc.TRTCRemoteStatistics
      VB:
      - id: trtc.TRTCRemoteStatistics
        name: TRTCRemoteStatistics
        nameWithType: TRTCRemoteStatistics
        qualifiedName: trtc.TRTCRemoteStatistics
    isDefinition: true
    commentId: T:trtc.TRTCRemoteStatistics
  trtc.TRTCLocalStatistics[]:
    name:
      CSharp:
      - id: trtc.TRTCLocalStatistics
        name: TRTCLocalStatistics
        nameWithType: TRTCLocalStatistics
        qualifiedName: trtc.TRTCLocalStatistics
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: trtc.TRTCLocalStatistics
        name: TRTCLocalStatistics
        nameWithType: TRTCLocalStatistics
        qualifiedName: trtc.TRTCLocalStatistics
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  trtc.TRTCRemoteStatistics[]:
    name:
      CSharp:
      - id: trtc.TRTCRemoteStatistics
        name: TRTCRemoteStatistics
        nameWithType: TRTCRemoteStatistics
        qualifiedName: trtc.TRTCRemoteStatistics
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: trtc.TRTCRemoteStatistics
        name: TRTCRemoteStatistics
        nameWithType: TRTCRemoteStatistics
        qualifiedName: trtc.TRTCRemoteStatistics
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  trtc.TRTCStatistics:
    name:
      CSharp:
      - id: trtc.TRTCStatistics
        name: TRTCStatistics
        nameWithType: TRTCStatistics
        qualifiedName: trtc.TRTCStatistics
      VB:
      - id: trtc.TRTCStatistics
        name: TRTCStatistics
        nameWithType: TRTCStatistics
        qualifiedName: trtc.TRTCStatistics
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCStatistics
  trtc.TRTCScreenCaptureSourceType:
    name:
      CSharp:
      - id: trtc.TRTCScreenCaptureSourceType
        name: TRTCScreenCaptureSourceType
        nameWithType: TRTCScreenCaptureSourceType
        qualifiedName: trtc.TRTCScreenCaptureSourceType
      VB:
      - id: trtc.TRTCScreenCaptureSourceType
        name: TRTCScreenCaptureSourceType
        nameWithType: TRTCScreenCaptureSourceType
        qualifiedName: trtc.TRTCScreenCaptureSourceType
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCScreenCaptureSourceType
  IntPtr:
    name:
      CSharp:
      - id: IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: IntPtr
        isExternal: true
      VB:
      - id: IntPtr
        name: IntPtr
        nameWithType: IntPtr
        qualifiedName: IntPtr
        isExternal: true
    isDefinition: true
  trtc.TRTCScreenCaptureSourceInfo:
    name:
      CSharp:
      - id: trtc.TRTCScreenCaptureSourceInfo
        name: TRTCScreenCaptureSourceInfo
        nameWithType: TRTCScreenCaptureSourceInfo
        qualifiedName: trtc.TRTCScreenCaptureSourceInfo
      VB:
      - id: trtc.TRTCScreenCaptureSourceInfo
        name: TRTCScreenCaptureSourceInfo
        nameWithType: TRTCScreenCaptureSourceInfo
        qualifiedName: trtc.TRTCScreenCaptureSourceInfo
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCScreenCaptureSourceInfo
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  trtc.TRTCScreenCaptureProperty:
    name:
      CSharp:
      - id: trtc.TRTCScreenCaptureProperty
        name: TRTCScreenCaptureProperty
        nameWithType: TRTCScreenCaptureProperty
        qualifiedName: trtc.TRTCScreenCaptureProperty
      VB:
      - id: trtc.TRTCScreenCaptureProperty
        name: TRTCScreenCaptureProperty
        nameWithType: TRTCScreenCaptureProperty
        qualifiedName: trtc.TRTCScreenCaptureProperty
    isDefinition: true
    parent: trtc
    commentId: T:trtc.TRTCScreenCaptureProperty
  trtc.ITRTCCloudCallback.onError*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onError*
        name: onError
        nameWithType: ITRTCCloudCallback.onError
        qualifiedName: trtc.ITRTCCloudCallback.onError
      VB:
      - id: trtc.ITRTCCloudCallback.onError*
        name: onError
        nameWithType: ITRTCCloudCallback.onError
        qualifiedName: trtc.ITRTCCloudCallback.onError
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onError
  trtc.ITRTCCloudCallback.onWarning*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onWarning*
        name: onWarning
        nameWithType: ITRTCCloudCallback.onWarning
        qualifiedName: trtc.ITRTCCloudCallback.onWarning
      VB:
      - id: trtc.ITRTCCloudCallback.onWarning*
        name: onWarning
        nameWithType: ITRTCCloudCallback.onWarning
        qualifiedName: trtc.ITRTCCloudCallback.onWarning
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onWarning
  trtc.ITRTCCloudCallback.onEnterRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onEnterRoom*
        name: onEnterRoom
        nameWithType: ITRTCCloudCallback.onEnterRoom
        qualifiedName: trtc.ITRTCCloudCallback.onEnterRoom
      VB:
      - id: trtc.ITRTCCloudCallback.onEnterRoom*
        name: onEnterRoom
        nameWithType: ITRTCCloudCallback.onEnterRoom
        qualifiedName: trtc.ITRTCCloudCallback.onEnterRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onEnterRoom
  trtc.ITRTCCloudCallback.onExitRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onExitRoom*
        name: onExitRoom
        nameWithType: ITRTCCloudCallback.onExitRoom
        qualifiedName: trtc.ITRTCCloudCallback.onExitRoom
      VB:
      - id: trtc.ITRTCCloudCallback.onExitRoom*
        name: onExitRoom
        nameWithType: ITRTCCloudCallback.onExitRoom
        qualifiedName: trtc.ITRTCCloudCallback.onExitRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onExitRoom
  trtc.ITRTCCloudCallback.onSwitchRole*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onSwitchRole*
        name: onSwitchRole
        nameWithType: ITRTCCloudCallback.onSwitchRole
        qualifiedName: trtc.ITRTCCloudCallback.onSwitchRole
      VB:
      - id: trtc.ITRTCCloudCallback.onSwitchRole*
        name: onSwitchRole
        nameWithType: ITRTCCloudCallback.onSwitchRole
        qualifiedName: trtc.ITRTCCloudCallback.onSwitchRole
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onSwitchRole
  trtc.ITRTCCloudCallback.onConnectOtherRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onConnectOtherRoom*
        name: onConnectOtherRoom
        nameWithType: ITRTCCloudCallback.onConnectOtherRoom
        qualifiedName: trtc.ITRTCCloudCallback.onConnectOtherRoom
      VB:
      - id: trtc.ITRTCCloudCallback.onConnectOtherRoom*
        name: onConnectOtherRoom
        nameWithType: ITRTCCloudCallback.onConnectOtherRoom
        qualifiedName: trtc.ITRTCCloudCallback.onConnectOtherRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onConnectOtherRoom
  trtc.ITRTCCloudCallback.onDisconnectOtherRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onDisconnectOtherRoom*
        name: onDisconnectOtherRoom
        nameWithType: ITRTCCloudCallback.onDisconnectOtherRoom
        qualifiedName: trtc.ITRTCCloudCallback.onDisconnectOtherRoom
      VB:
      - id: trtc.ITRTCCloudCallback.onDisconnectOtherRoom*
        name: onDisconnectOtherRoom
        nameWithType: ITRTCCloudCallback.onDisconnectOtherRoom
        qualifiedName: trtc.ITRTCCloudCallback.onDisconnectOtherRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onDisconnectOtherRoom
  trtc.ITRTCCloudCallback.onSwitchRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onSwitchRoom*
        name: onSwitchRoom
        nameWithType: ITRTCCloudCallback.onSwitchRoom
        qualifiedName: trtc.ITRTCCloudCallback.onSwitchRoom
      VB:
      - id: trtc.ITRTCCloudCallback.onSwitchRoom*
        name: onSwitchRoom
        nameWithType: ITRTCCloudCallback.onSwitchRoom
        qualifiedName: trtc.ITRTCCloudCallback.onSwitchRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onSwitchRoom
  trtc.ITRTCCloudCallback.onRemoteUserEnterRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onRemoteUserEnterRoom*
        name: onRemoteUserEnterRoom
        nameWithType: ITRTCCloudCallback.onRemoteUserEnterRoom
        qualifiedName: trtc.ITRTCCloudCallback.onRemoteUserEnterRoom
      VB:
      - id: trtc.ITRTCCloudCallback.onRemoteUserEnterRoom*
        name: onRemoteUserEnterRoom
        nameWithType: ITRTCCloudCallback.onRemoteUserEnterRoom
        qualifiedName: trtc.ITRTCCloudCallback.onRemoteUserEnterRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onRemoteUserEnterRoom
  trtc.ITRTCCloudCallback.onRemoteUserLeaveRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onRemoteUserLeaveRoom*
        name: onRemoteUserLeaveRoom
        nameWithType: ITRTCCloudCallback.onRemoteUserLeaveRoom
        qualifiedName: trtc.ITRTCCloudCallback.onRemoteUserLeaveRoom
      VB:
      - id: trtc.ITRTCCloudCallback.onRemoteUserLeaveRoom*
        name: onRemoteUserLeaveRoom
        nameWithType: ITRTCCloudCallback.onRemoteUserLeaveRoom
        qualifiedName: trtc.ITRTCCloudCallback.onRemoteUserLeaveRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onRemoteUserLeaveRoom
  trtc.ITRTCCloudCallback.onUserVideoAvailable*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onUserVideoAvailable*
        name: onUserVideoAvailable
        nameWithType: ITRTCCloudCallback.onUserVideoAvailable
        qualifiedName: trtc.ITRTCCloudCallback.onUserVideoAvailable
      VB:
      - id: trtc.ITRTCCloudCallback.onUserVideoAvailable*
        name: onUserVideoAvailable
        nameWithType: ITRTCCloudCallback.onUserVideoAvailable
        qualifiedName: trtc.ITRTCCloudCallback.onUserVideoAvailable
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onUserVideoAvailable
  trtc.ITRTCCloudCallback.onUserSubStreamAvailable*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onUserSubStreamAvailable*
        name: onUserSubStreamAvailable
        nameWithType: ITRTCCloudCallback.onUserSubStreamAvailable
        qualifiedName: trtc.ITRTCCloudCallback.onUserSubStreamAvailable
      VB:
      - id: trtc.ITRTCCloudCallback.onUserSubStreamAvailable*
        name: onUserSubStreamAvailable
        nameWithType: ITRTCCloudCallback.onUserSubStreamAvailable
        qualifiedName: trtc.ITRTCCloudCallback.onUserSubStreamAvailable
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onUserSubStreamAvailable
  trtc.ITRTCCloudCallback.onUserAudioAvailable*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onUserAudioAvailable*
        name: onUserAudioAvailable
        nameWithType: ITRTCCloudCallback.onUserAudioAvailable
        qualifiedName: trtc.ITRTCCloudCallback.onUserAudioAvailable
      VB:
      - id: trtc.ITRTCCloudCallback.onUserAudioAvailable*
        name: onUserAudioAvailable
        nameWithType: ITRTCCloudCallback.onUserAudioAvailable
        qualifiedName: trtc.ITRTCCloudCallback.onUserAudioAvailable
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onUserAudioAvailable
  trtc.ITRTCCloudCallback.onFirstVideoFrame*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onFirstVideoFrame*
        name: onFirstVideoFrame
        nameWithType: ITRTCCloudCallback.onFirstVideoFrame
        qualifiedName: trtc.ITRTCCloudCallback.onFirstVideoFrame
      VB:
      - id: trtc.ITRTCCloudCallback.onFirstVideoFrame*
        name: onFirstVideoFrame
        nameWithType: ITRTCCloudCallback.onFirstVideoFrame
        qualifiedName: trtc.ITRTCCloudCallback.onFirstVideoFrame
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onFirstVideoFrame
  trtc.ITRTCCloudCallback.onFirstAudioFrame*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onFirstAudioFrame*
        name: onFirstAudioFrame
        nameWithType: ITRTCCloudCallback.onFirstAudioFrame
        qualifiedName: trtc.ITRTCCloudCallback.onFirstAudioFrame
      VB:
      - id: trtc.ITRTCCloudCallback.onFirstAudioFrame*
        name: onFirstAudioFrame
        nameWithType: ITRTCCloudCallback.onFirstAudioFrame
        qualifiedName: trtc.ITRTCCloudCallback.onFirstAudioFrame
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onFirstAudioFrame
  trtc.ITRTCCloudCallback.onSendFirstLocalVideoFrame*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onSendFirstLocalVideoFrame*
        name: onSendFirstLocalVideoFrame
        nameWithType: ITRTCCloudCallback.onSendFirstLocalVideoFrame
        qualifiedName: trtc.ITRTCCloudCallback.onSendFirstLocalVideoFrame
      VB:
      - id: trtc.ITRTCCloudCallback.onSendFirstLocalVideoFrame*
        name: onSendFirstLocalVideoFrame
        nameWithType: ITRTCCloudCallback.onSendFirstLocalVideoFrame
        qualifiedName: trtc.ITRTCCloudCallback.onSendFirstLocalVideoFrame
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onSendFirstLocalVideoFrame
  trtc.ITRTCCloudCallback.onSendFirstLocalAudioFrame*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onSendFirstLocalAudioFrame*
        name: onSendFirstLocalAudioFrame
        nameWithType: ITRTCCloudCallback.onSendFirstLocalAudioFrame
        qualifiedName: trtc.ITRTCCloudCallback.onSendFirstLocalAudioFrame
      VB:
      - id: trtc.ITRTCCloudCallback.onSendFirstLocalAudioFrame*
        name: onSendFirstLocalAudioFrame
        nameWithType: ITRTCCloudCallback.onSendFirstLocalAudioFrame
        qualifiedName: trtc.ITRTCCloudCallback.onSendFirstLocalAudioFrame
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onSendFirstLocalAudioFrame
  trtc.TRTCQualityInfo[]:
    name:
      CSharp:
      - id: trtc.TRTCQualityInfo
        name: TRTCQualityInfo
        nameWithType: TRTCQualityInfo
        qualifiedName: trtc.TRTCQualityInfo
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: trtc.TRTCQualityInfo
        name: TRTCQualityInfo
        nameWithType: TRTCQualityInfo
        qualifiedName: trtc.TRTCQualityInfo
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  trtc.ITRTCCloudCallback.onNetworkQuality*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onNetworkQuality*
        name: onNetworkQuality
        nameWithType: ITRTCCloudCallback.onNetworkQuality
        qualifiedName: trtc.ITRTCCloudCallback.onNetworkQuality
      VB:
      - id: trtc.ITRTCCloudCallback.onNetworkQuality*
        name: onNetworkQuality
        nameWithType: ITRTCCloudCallback.onNetworkQuality
        qualifiedName: trtc.ITRTCCloudCallback.onNetworkQuality
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onNetworkQuality
  trtc.ITRTCCloudCallback.onStatistics*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onStatistics*
        name: onStatistics
        nameWithType: ITRTCCloudCallback.onStatistics
        qualifiedName: trtc.ITRTCCloudCallback.onStatistics
      VB:
      - id: trtc.ITRTCCloudCallback.onStatistics*
        name: onStatistics
        nameWithType: ITRTCCloudCallback.onStatistics
        qualifiedName: trtc.ITRTCCloudCallback.onStatistics
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onStatistics
  trtc.ITRTCCloudCallback.onConnectionLost*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onConnectionLost*
        name: onConnectionLost
        nameWithType: ITRTCCloudCallback.onConnectionLost
        qualifiedName: trtc.ITRTCCloudCallback.onConnectionLost
      VB:
      - id: trtc.ITRTCCloudCallback.onConnectionLost*
        name: onConnectionLost
        nameWithType: ITRTCCloudCallback.onConnectionLost
        qualifiedName: trtc.ITRTCCloudCallback.onConnectionLost
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onConnectionLost
  trtc.ITRTCCloudCallback.onTryToReconnect*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onTryToReconnect*
        name: onTryToReconnect
        nameWithType: ITRTCCloudCallback.onTryToReconnect
        qualifiedName: trtc.ITRTCCloudCallback.onTryToReconnect
      VB:
      - id: trtc.ITRTCCloudCallback.onTryToReconnect*
        name: onTryToReconnect
        nameWithType: ITRTCCloudCallback.onTryToReconnect
        qualifiedName: trtc.ITRTCCloudCallback.onTryToReconnect
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onTryToReconnect
  trtc.ITRTCCloudCallback.onConnectionRecovery*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onConnectionRecovery*
        name: onConnectionRecovery
        nameWithType: ITRTCCloudCallback.onConnectionRecovery
        qualifiedName: trtc.ITRTCCloudCallback.onConnectionRecovery
      VB:
      - id: trtc.ITRTCCloudCallback.onConnectionRecovery*
        name: onConnectionRecovery
        nameWithType: ITRTCCloudCallback.onConnectionRecovery
        qualifiedName: trtc.ITRTCCloudCallback.onConnectionRecovery
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onConnectionRecovery
  trtc.ITRTCCloudCallback.onSpeedTest*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onSpeedTest*
        name: onSpeedTest
        nameWithType: ITRTCCloudCallback.onSpeedTest
        qualifiedName: trtc.ITRTCCloudCallback.onSpeedTest
      VB:
      - id: trtc.ITRTCCloudCallback.onSpeedTest*
        name: onSpeedTest
        nameWithType: ITRTCCloudCallback.onSpeedTest
        qualifiedName: trtc.ITRTCCloudCallback.onSpeedTest
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onSpeedTest
  trtc.ITRTCCloudCallback.onCameraDidReady*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onCameraDidReady*
        name: onCameraDidReady
        nameWithType: ITRTCCloudCallback.onCameraDidReady
        qualifiedName: trtc.ITRTCCloudCallback.onCameraDidReady
      VB:
      - id: trtc.ITRTCCloudCallback.onCameraDidReady*
        name: onCameraDidReady
        nameWithType: ITRTCCloudCallback.onCameraDidReady
        qualifiedName: trtc.ITRTCCloudCallback.onCameraDidReady
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onCameraDidReady
  trtc.ITRTCCloudCallback.onMicDidReady*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onMicDidReady*
        name: onMicDidReady
        nameWithType: ITRTCCloudCallback.onMicDidReady
        qualifiedName: trtc.ITRTCCloudCallback.onMicDidReady
      VB:
      - id: trtc.ITRTCCloudCallback.onMicDidReady*
        name: onMicDidReady
        nameWithType: ITRTCCloudCallback.onMicDidReady
        qualifiedName: trtc.ITRTCCloudCallback.onMicDidReady
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onMicDidReady
  trtc.TRTCVolumeInfo[]:
    name:
      CSharp:
      - id: trtc.TRTCVolumeInfo
        name: TRTCVolumeInfo
        nameWithType: TRTCVolumeInfo
        qualifiedName: trtc.TRTCVolumeInfo
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: trtc.TRTCVolumeInfo
        name: TRTCVolumeInfo
        nameWithType: TRTCVolumeInfo
        qualifiedName: trtc.TRTCVolumeInfo
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  trtc.ITRTCCloudCallback.onUserVoiceVolume*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onUserVoiceVolume*
        name: onUserVoiceVolume
        nameWithType: ITRTCCloudCallback.onUserVoiceVolume
        qualifiedName: trtc.ITRTCCloudCallback.onUserVoiceVolume
      VB:
      - id: trtc.ITRTCCloudCallback.onUserVoiceVolume*
        name: onUserVoiceVolume
        nameWithType: ITRTCCloudCallback.onUserVoiceVolume
        qualifiedName: trtc.ITRTCCloudCallback.onUserVoiceVolume
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onUserVoiceVolume
  trtc.ITRTCCloudCallback.onDeviceChange*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onDeviceChange*
        name: onDeviceChange
        nameWithType: ITRTCCloudCallback.onDeviceChange
        qualifiedName: trtc.ITRTCCloudCallback.onDeviceChange
      VB:
      - id: trtc.ITRTCCloudCallback.onDeviceChange*
        name: onDeviceChange
        nameWithType: ITRTCCloudCallback.onDeviceChange
        qualifiedName: trtc.ITRTCCloudCallback.onDeviceChange
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onDeviceChange
  trtc.ITRTCCloudCallback.onTestMicVolume*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onTestMicVolume*
        name: onTestMicVolume
        nameWithType: ITRTCCloudCallback.onTestMicVolume
        qualifiedName: trtc.ITRTCCloudCallback.onTestMicVolume
      VB:
      - id: trtc.ITRTCCloudCallback.onTestMicVolume*
        name: onTestMicVolume
        nameWithType: ITRTCCloudCallback.onTestMicVolume
        qualifiedName: trtc.ITRTCCloudCallback.onTestMicVolume
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onTestMicVolume
  trtc.ITRTCCloudCallback.onTestSpeakerVolume*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onTestSpeakerVolume*
        name: onTestSpeakerVolume
        nameWithType: ITRTCCloudCallback.onTestSpeakerVolume
        qualifiedName: trtc.ITRTCCloudCallback.onTestSpeakerVolume
      VB:
      - id: trtc.ITRTCCloudCallback.onTestSpeakerVolume*
        name: onTestSpeakerVolume
        nameWithType: ITRTCCloudCallback.onTestSpeakerVolume
        qualifiedName: trtc.ITRTCCloudCallback.onTestSpeakerVolume
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onTestSpeakerVolume
  trtc.ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged*
        name: onAudioDeviceCaptureVolumeChanged
        nameWithType: ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged
        qualifiedName: trtc.ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged
      VB:
      - id: trtc.ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged*
        name: onAudioDeviceCaptureVolumeChanged
        nameWithType: ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged
        qualifiedName: trtc.ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onAudioDeviceCaptureVolumeChanged
  trtc.ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged*
        name: onAudioDevicePlayoutVolumeChanged
        nameWithType: ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged
        qualifiedName: trtc.ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged
      VB:
      - id: trtc.ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged*
        name: onAudioDevicePlayoutVolumeChanged
        nameWithType: ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged
        qualifiedName: trtc.ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onAudioDevicePlayoutVolumeChanged
  Byte[]:
    name:
      CSharp:
      - id: Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: Byte
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: Byte
        name: Byte
        nameWithType: Byte
        qualifiedName: Byte
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  trtc.ITRTCCloudCallback.onRecvCustomCmdMsg*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onRecvCustomCmdMsg*
        name: onRecvCustomCmdMsg
        nameWithType: ITRTCCloudCallback.onRecvCustomCmdMsg
        qualifiedName: trtc.ITRTCCloudCallback.onRecvCustomCmdMsg
      VB:
      - id: trtc.ITRTCCloudCallback.onRecvCustomCmdMsg*
        name: onRecvCustomCmdMsg
        nameWithType: ITRTCCloudCallback.onRecvCustomCmdMsg
        qualifiedName: trtc.ITRTCCloudCallback.onRecvCustomCmdMsg
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onRecvCustomCmdMsg
  trtc.ITRTCCloudCallback.onMissCustomCmdMsg*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onMissCustomCmdMsg*
        name: onMissCustomCmdMsg
        nameWithType: ITRTCCloudCallback.onMissCustomCmdMsg
        qualifiedName: trtc.ITRTCCloudCallback.onMissCustomCmdMsg
      VB:
      - id: trtc.ITRTCCloudCallback.onMissCustomCmdMsg*
        name: onMissCustomCmdMsg
        nameWithType: ITRTCCloudCallback.onMissCustomCmdMsg
        qualifiedName: trtc.ITRTCCloudCallback.onMissCustomCmdMsg
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onMissCustomCmdMsg
  trtc.ITRTCCloudCallback.onRecvSEIMsg*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onRecvSEIMsg*
        name: onRecvSEIMsg
        nameWithType: ITRTCCloudCallback.onRecvSEIMsg
        qualifiedName: trtc.ITRTCCloudCallback.onRecvSEIMsg
      VB:
      - id: trtc.ITRTCCloudCallback.onRecvSEIMsg*
        name: onRecvSEIMsg
        nameWithType: ITRTCCloudCallback.onRecvSEIMsg
        qualifiedName: trtc.ITRTCCloudCallback.onRecvSEIMsg
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onRecvSEIMsg
  trtc.ITRTCCloudCallback.onStartPublishing*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onStartPublishing*
        name: onStartPublishing
        nameWithType: ITRTCCloudCallback.onStartPublishing
        qualifiedName: trtc.ITRTCCloudCallback.onStartPublishing
      VB:
      - id: trtc.ITRTCCloudCallback.onStartPublishing*
        name: onStartPublishing
        nameWithType: ITRTCCloudCallback.onStartPublishing
        qualifiedName: trtc.ITRTCCloudCallback.onStartPublishing
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onStartPublishing
  trtc.ITRTCCloudCallback.onStopPublishing*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onStopPublishing*
        name: onStopPublishing
        nameWithType: ITRTCCloudCallback.onStopPublishing
        qualifiedName: trtc.ITRTCCloudCallback.onStopPublishing
      VB:
      - id: trtc.ITRTCCloudCallback.onStopPublishing*
        name: onStopPublishing
        nameWithType: ITRTCCloudCallback.onStopPublishing
        qualifiedName: trtc.ITRTCCloudCallback.onStopPublishing
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onStopPublishing
  trtc.ITRTCCloudCallback.onStartPublishCDNStream*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onStartPublishCDNStream*
        name: onStartPublishCDNStream
        nameWithType: ITRTCCloudCallback.onStartPublishCDNStream
        qualifiedName: trtc.ITRTCCloudCallback.onStartPublishCDNStream
      VB:
      - id: trtc.ITRTCCloudCallback.onStartPublishCDNStream*
        name: onStartPublishCDNStream
        nameWithType: ITRTCCloudCallback.onStartPublishCDNStream
        qualifiedName: trtc.ITRTCCloudCallback.onStartPublishCDNStream
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onStartPublishCDNStream
  trtc.ITRTCCloudCallback.onStopPublishCDNStream*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onStopPublishCDNStream*
        name: onStopPublishCDNStream
        nameWithType: ITRTCCloudCallback.onStopPublishCDNStream
        qualifiedName: trtc.ITRTCCloudCallback.onStopPublishCDNStream
      VB:
      - id: trtc.ITRTCCloudCallback.onStopPublishCDNStream*
        name: onStopPublishCDNStream
        nameWithType: ITRTCCloudCallback.onStopPublishCDNStream
        qualifiedName: trtc.ITRTCCloudCallback.onStopPublishCDNStream
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onStopPublishCDNStream
  trtc.ITRTCCloudCallback.onSetMixTranscodingConfig*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onSetMixTranscodingConfig*
        name: onSetMixTranscodingConfig
        nameWithType: ITRTCCloudCallback.onSetMixTranscodingConfig
        qualifiedName: trtc.ITRTCCloudCallback.onSetMixTranscodingConfig
      VB:
      - id: trtc.ITRTCCloudCallback.onSetMixTranscodingConfig*
        name: onSetMixTranscodingConfig
        nameWithType: ITRTCCloudCallback.onSetMixTranscodingConfig
        qualifiedName: trtc.ITRTCCloudCallback.onSetMixTranscodingConfig
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onSetMixTranscodingConfig
  trtc.ITRTCCloudCallback.onScreenCaptureStarted*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onScreenCaptureStarted*
        name: onScreenCaptureStarted
        nameWithType: ITRTCCloudCallback.onScreenCaptureStarted
        qualifiedName: trtc.ITRTCCloudCallback.onScreenCaptureStarted
      VB:
      - id: trtc.ITRTCCloudCallback.onScreenCaptureStarted*
        name: onScreenCaptureStarted
        nameWithType: ITRTCCloudCallback.onScreenCaptureStarted
        qualifiedName: trtc.ITRTCCloudCallback.onScreenCaptureStarted
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onScreenCaptureStarted
  trtc.ITRTCCloudCallback.onScreenCapturePaused*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onScreenCapturePaused*
        name: onScreenCapturePaused
        nameWithType: ITRTCCloudCallback.onScreenCapturePaused
        qualifiedName: trtc.ITRTCCloudCallback.onScreenCapturePaused
      VB:
      - id: trtc.ITRTCCloudCallback.onScreenCapturePaused*
        name: onScreenCapturePaused
        nameWithType: ITRTCCloudCallback.onScreenCapturePaused
        qualifiedName: trtc.ITRTCCloudCallback.onScreenCapturePaused
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onScreenCapturePaused
  trtc.ITRTCCloudCallback.onScreenCaptureResumed*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onScreenCaptureResumed*
        name: onScreenCaptureResumed
        nameWithType: ITRTCCloudCallback.onScreenCaptureResumed
        qualifiedName: trtc.ITRTCCloudCallback.onScreenCaptureResumed
      VB:
      - id: trtc.ITRTCCloudCallback.onScreenCaptureResumed*
        name: onScreenCaptureResumed
        nameWithType: ITRTCCloudCallback.onScreenCaptureResumed
        qualifiedName: trtc.ITRTCCloudCallback.onScreenCaptureResumed
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onScreenCaptureResumed
  trtc.ITRTCCloudCallback.onScreenCaptureStoped*:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback.onScreenCaptureStoped*
        name: onScreenCaptureStoped
        nameWithType: ITRTCCloudCallback.onScreenCaptureStoped
        qualifiedName: trtc.ITRTCCloudCallback.onScreenCaptureStoped
      VB:
      - id: trtc.ITRTCCloudCallback.onScreenCaptureStoped*
        name: onScreenCaptureStoped
        nameWithType: ITRTCCloudCallback.onScreenCaptureStoped
        qualifiedName: trtc.ITRTCCloudCallback.onScreenCaptureStoped
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloudCallback.onScreenCaptureStoped
  trtc.ITRTCCloudCallback:
    name:
      CSharp:
      - id: trtc.ITRTCCloudCallback
        name: ITRTCCloudCallback
        nameWithType: ITRTCCloudCallback
        qualifiedName: trtc.ITRTCCloudCallback
      VB:
      - id: trtc.ITRTCCloudCallback
        name: ITRTCCloudCallback
        nameWithType: ITRTCCloudCallback
        qualifiedName: trtc.ITRTCCloudCallback
    isDefinition: true
    parent: trtc
    commentId: T:trtc.ITRTCCloudCallback
  trtc.ITRTCVideoRenderCallback.onRenderVideoFrame*:
    name:
      CSharp:
      - id: trtc.ITRTCVideoRenderCallback.onRenderVideoFrame*
        name: onRenderVideoFrame
        nameWithType: ITRTCVideoRenderCallback.onRenderVideoFrame
        qualifiedName: trtc.ITRTCVideoRenderCallback.onRenderVideoFrame
      VB:
      - id: trtc.ITRTCVideoRenderCallback.onRenderVideoFrame*
        name: onRenderVideoFrame
        nameWithType: ITRTCVideoRenderCallback.onRenderVideoFrame
        qualifiedName: trtc.ITRTCVideoRenderCallback.onRenderVideoFrame
    isDefinition: true
    commentId: Overload:trtc.ITRTCVideoRenderCallback.onRenderVideoFrame
  trtc.ITRTCVideoRenderCallback:
    name:
      CSharp:
      - id: trtc.ITRTCVideoRenderCallback
        name: ITRTCVideoRenderCallback
        nameWithType: ITRTCVideoRenderCallback
        qualifiedName: trtc.ITRTCVideoRenderCallback
      VB:
      - id: trtc.ITRTCVideoRenderCallback
        name: ITRTCVideoRenderCallback
        nameWithType: ITRTCVideoRenderCallback
        qualifiedName: trtc.ITRTCVideoRenderCallback
    isDefinition: true
    parent: trtc
    commentId: T:trtc.ITRTCVideoRenderCallback
  trtc.ITRTCLogCallback.onLog*:
    name:
      CSharp:
      - id: trtc.ITRTCLogCallback.onLog*
        name: onLog
        nameWithType: ITRTCLogCallback.onLog
        qualifiedName: trtc.ITRTCLogCallback.onLog
      VB:
      - id: trtc.ITRTCLogCallback.onLog*
        name: onLog
        nameWithType: ITRTCLogCallback.onLog
        qualifiedName: trtc.ITRTCLogCallback.onLog
    isDefinition: true
    commentId: Overload:trtc.ITRTCLogCallback.onLog
  trtc.ITRTCLogCallback:
    name:
      CSharp:
      - id: trtc.ITRTCLogCallback
        name: ITRTCLogCallback
        nameWithType: ITRTCLogCallback
        qualifiedName: trtc.ITRTCLogCallback
      VB:
      - id: trtc.ITRTCLogCallback
        name: ITRTCLogCallback
        nameWithType: ITRTCLogCallback
        qualifiedName: trtc.ITRTCLogCallback
    isDefinition: true
    parent: trtc
    commentId: T:trtc.ITRTCLogCallback
  trtc.ITXDeviceManager.isFrontCamera*:
    name:
      CSharp:
      - id: trtc.ITXDeviceManager.isFrontCamera*
        name: isFrontCamera
        nameWithType: ITXDeviceManager.isFrontCamera
        qualifiedName: trtc.ITXDeviceManager.isFrontCamera
      VB:
      - id: trtc.ITXDeviceManager.isFrontCamera*
        name: isFrontCamera
        nameWithType: ITXDeviceManager.isFrontCamera
        qualifiedName: trtc.ITXDeviceManager.isFrontCamera
    isDefinition: true
    commentId: Overload:trtc.ITXDeviceManager.isFrontCamera
  trtc.ITXDeviceManager.switchCamera*:
    name:
      CSharp:
      - id: trtc.ITXDeviceManager.switchCamera*
        name: switchCamera
        nameWithType: ITXDeviceManager.switchCamera
        qualifiedName: trtc.ITXDeviceManager.switchCamera
      VB:
      - id: trtc.ITXDeviceManager.switchCamera*
        name: switchCamera
        nameWithType: ITXDeviceManager.switchCamera
        qualifiedName: trtc.ITXDeviceManager.switchCamera
    isDefinition: true
    commentId: Overload:trtc.ITXDeviceManager.switchCamera
  System.Double:
    name:
      CSharp:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
      VB:
      - id: System.Double
        name: Double
        nameWithType: Double
        qualifiedName: System.Double
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Double
  trtc.ITXDeviceManager.getCameraZoomMaxRatio*:
    name:
      CSharp:
      - id: trtc.ITXDeviceManager.getCameraZoomMaxRatio*
        name: getCameraZoomMaxRatio
        nameWithType: ITXDeviceManager.getCameraZoomMaxRatio
        qualifiedName: trtc.ITXDeviceManager.getCameraZoomMaxRatio
      VB:
      - id: trtc.ITXDeviceManager.getCameraZoomMaxRatio*
        name: getCameraZoomMaxRatio
        nameWithType: ITXDeviceManager.getCameraZoomMaxRatio
        qualifiedName: trtc.ITXDeviceManager.getCameraZoomMaxRatio
    isDefinition: true
    commentId: Overload:trtc.ITXDeviceManager.getCameraZoomMaxRatio
  trtc.ITXDeviceManager.setCameraZoomRatio*:
    name:
      CSharp:
      - id: trtc.ITXDeviceManager.setCameraZoomRatio*
        name: setCameraZoomRatio
        nameWithType: ITXDeviceManager.setCameraZoomRatio
        qualifiedName: trtc.ITXDeviceManager.setCameraZoomRatio
      VB:
      - id: trtc.ITXDeviceManager.setCameraZoomRatio*
        name: setCameraZoomRatio
        nameWithType: ITXDeviceManager.setCameraZoomRatio
        qualifiedName: trtc.ITXDeviceManager.setCameraZoomRatio
    isDefinition: true
    commentId: Overload:trtc.ITXDeviceManager.setCameraZoomRatio
  trtc.ITXDeviceManager.isAutoFocusEnabled*:
    name:
      CSharp:
      - id: trtc.ITXDeviceManager.isAutoFocusEnabled*
        name: isAutoFocusEnabled
        nameWithType: ITXDeviceManager.isAutoFocusEnabled
        qualifiedName: trtc.ITXDeviceManager.isAutoFocusEnabled
      VB:
      - id: trtc.ITXDeviceManager.isAutoFocusEnabled*
        name: isAutoFocusEnabled
        nameWithType: ITXDeviceManager.isAutoFocusEnabled
        qualifiedName: trtc.ITXDeviceManager.isAutoFocusEnabled
    isDefinition: true
    commentId: Overload:trtc.ITXDeviceManager.isAutoFocusEnabled
  trtc.ITXDeviceManager.enableCameraAutoFocus*:
    name:
      CSharp:
      - id: trtc.ITXDeviceManager.enableCameraAutoFocus*
        name: enableCameraAutoFocus
        nameWithType: ITXDeviceManager.enableCameraAutoFocus
        qualifiedName: trtc.ITXDeviceManager.enableCameraAutoFocus
      VB:
      - id: trtc.ITXDeviceManager.enableCameraAutoFocus*
        name: enableCameraAutoFocus
        nameWithType: ITXDeviceManager.enableCameraAutoFocus
        qualifiedName: trtc.ITXDeviceManager.enableCameraAutoFocus
    isDefinition: true
    commentId: Overload:trtc.ITXDeviceManager.enableCameraAutoFocus
  trtc.ITXDeviceManager.setCameraFocusPosition*:
    name:
      CSharp:
      - id: trtc.ITXDeviceManager.setCameraFocusPosition*
        name: setCameraFocusPosition
        nameWithType: ITXDeviceManager.setCameraFocusPosition
        qualifiedName: trtc.ITXDeviceManager.setCameraFocusPosition
      VB:
      - id: trtc.ITXDeviceManager.setCameraFocusPosition*
        name: setCameraFocusPosition
        nameWithType: ITXDeviceManager.setCameraFocusPosition
        qualifiedName: trtc.ITXDeviceManager.setCameraFocusPosition
    isDefinition: true
    commentId: Overload:trtc.ITXDeviceManager.setCameraFocusPosition
  trtc.ITXDeviceManager.enableCameraTorch*:
    name:
      CSharp:
      - id: trtc.ITXDeviceManager.enableCameraTorch*
        name: enableCameraTorch
        nameWithType: ITXDeviceManager.enableCameraTorch
        qualifiedName: trtc.ITXDeviceManager.enableCameraTorch
      VB:
      - id: trtc.ITXDeviceManager.enableCameraTorch*
        name: enableCameraTorch
        nameWithType: ITXDeviceManager.enableCameraTorch
        qualifiedName: trtc.ITXDeviceManager.enableCameraTorch
    isDefinition: true
    commentId: Overload:trtc.ITXDeviceManager.enableCameraTorch
  trtc.ITXDeviceManager.setSystemVolumeType*:
    name:
      CSharp:
      - id: trtc.ITXDeviceManager.setSystemVolumeType*
        name: setSystemVolumeType
        nameWithType: ITXDeviceManager.setSystemVolumeType
        qualifiedName: trtc.ITXDeviceManager.setSystemVolumeType
      VB:
      - id: trtc.ITXDeviceManager.setSystemVolumeType*
        name: setSystemVolumeType
        nameWithType: ITXDeviceManager.setSystemVolumeType
        qualifiedName: trtc.ITXDeviceManager.setSystemVolumeType
    isDefinition: true
    commentId: Overload:trtc.ITXDeviceManager.setSystemVolumeType
  trtc.ITXDeviceManager.setAudioRoute*:
    name:
      CSharp:
      - id: trtc.ITXDeviceManager.setAudioRoute*
        name: setAudioRoute
        nameWithType: ITXDeviceManager.setAudioRoute
        qualifiedName: trtc.ITXDeviceManager.setAudioRoute
      VB:
      - id: trtc.ITXDeviceManager.setAudioRoute*
        name: setAudioRoute
        nameWithType: ITXDeviceManager.setAudioRoute
        qualifiedName: trtc.ITXDeviceManager.setAudioRoute
    isDefinition: true
    commentId: Overload:trtc.ITXDeviceManager.setAudioRoute
  trtc.ITXDeviceManager:
    name:
      CSharp:
      - id: trtc.ITXDeviceManager
        name: ITXDeviceManager
        nameWithType: ITXDeviceManager
        qualifiedName: trtc.ITXDeviceManager
      VB:
      - id: trtc.ITXDeviceManager
        name: ITXDeviceManager
        nameWithType: ITXDeviceManager
        qualifiedName: trtc.ITXDeviceManager
    isDefinition: true
    parent: trtc
    commentId: T:trtc.ITXDeviceManager
  trtc.ITRTCCloud:
    name:
      CSharp:
      - id: trtc.ITRTCCloud
        name: ITRTCCloud
        nameWithType: ITRTCCloud
        qualifiedName: trtc.ITRTCCloud
      VB:
      - id: trtc.ITRTCCloud
        name: ITRTCCloud
        nameWithType: ITRTCCloud
        qualifiedName: trtc.ITRTCCloud
    isDefinition: true
    parent: trtc
    commentId: T:trtc.ITRTCCloud
  trtc.ITRTCCloud.getTRTCShareInstance*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.getTRTCShareInstance*
        name: getTRTCShareInstance
        nameWithType: ITRTCCloud.getTRTCShareInstance
        qualifiedName: trtc.ITRTCCloud.getTRTCShareInstance
      VB:
      - id: trtc.ITRTCCloud.getTRTCShareInstance*
        name: getTRTCShareInstance
        nameWithType: ITRTCCloud.getTRTCShareInstance
        qualifiedName: trtc.ITRTCCloud.getTRTCShareInstance
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.getTRTCShareInstance
  trtc.ITRTCCloud.destroyTRTCShareInstance*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.destroyTRTCShareInstance*
        name: destroyTRTCShareInstance
        nameWithType: ITRTCCloud.destroyTRTCShareInstance
        qualifiedName: trtc.ITRTCCloud.destroyTRTCShareInstance
      VB:
      - id: trtc.ITRTCCloud.destroyTRTCShareInstance*
        name: destroyTRTCShareInstance
        nameWithType: ITRTCCloud.destroyTRTCShareInstance
        qualifiedName: trtc.ITRTCCloud.destroyTRTCShareInstance
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.destroyTRTCShareInstance
  trtc.ITRTCCloud.addCallback*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.addCallback*
        name: addCallback
        nameWithType: ITRTCCloud.addCallback
        qualifiedName: trtc.ITRTCCloud.addCallback
      VB:
      - id: trtc.ITRTCCloud.addCallback*
        name: addCallback
        nameWithType: ITRTCCloud.addCallback
        qualifiedName: trtc.ITRTCCloud.addCallback
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.addCallback
  trtc.ITRTCCloud.removeCallback*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.removeCallback*
        name: removeCallback
        nameWithType: ITRTCCloud.removeCallback
        qualifiedName: trtc.ITRTCCloud.removeCallback
      VB:
      - id: trtc.ITRTCCloud.removeCallback*
        name: removeCallback
        nameWithType: ITRTCCloud.removeCallback
        qualifiedName: trtc.ITRTCCloud.removeCallback
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.removeCallback
  trtc.ITRTCCloud.enterRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.enterRoom*
        name: enterRoom
        nameWithType: ITRTCCloud.enterRoom
        qualifiedName: trtc.ITRTCCloud.enterRoom
      VB:
      - id: trtc.ITRTCCloud.enterRoom*
        name: enterRoom
        nameWithType: ITRTCCloud.enterRoom
        qualifiedName: trtc.ITRTCCloud.enterRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.enterRoom
  trtc.ITRTCCloud.exitRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.exitRoom*
        name: exitRoom
        nameWithType: ITRTCCloud.exitRoom
        qualifiedName: trtc.ITRTCCloud.exitRoom
      VB:
      - id: trtc.ITRTCCloud.exitRoom*
        name: exitRoom
        nameWithType: ITRTCCloud.exitRoom
        qualifiedName: trtc.ITRTCCloud.exitRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.exitRoom
  trtc.ITRTCCloud.switchRole*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.switchRole*
        name: switchRole
        nameWithType: ITRTCCloud.switchRole
        qualifiedName: trtc.ITRTCCloud.switchRole
      VB:
      - id: trtc.ITRTCCloud.switchRole*
        name: switchRole
        nameWithType: ITRTCCloud.switchRole
        qualifiedName: trtc.ITRTCCloud.switchRole
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.switchRole
  trtc.ITRTCCloud.connectOtherRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.connectOtherRoom*
        name: connectOtherRoom
        nameWithType: ITRTCCloud.connectOtherRoom
        qualifiedName: trtc.ITRTCCloud.connectOtherRoom
      VB:
      - id: trtc.ITRTCCloud.connectOtherRoom*
        name: connectOtherRoom
        nameWithType: ITRTCCloud.connectOtherRoom
        qualifiedName: trtc.ITRTCCloud.connectOtherRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.connectOtherRoom
  trtc.ITRTCCloud.disconnectOtherRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.disconnectOtherRoom*
        name: disconnectOtherRoom
        nameWithType: ITRTCCloud.disconnectOtherRoom
        qualifiedName: trtc.ITRTCCloud.disconnectOtherRoom
      VB:
      - id: trtc.ITRTCCloud.disconnectOtherRoom*
        name: disconnectOtherRoom
        nameWithType: ITRTCCloud.disconnectOtherRoom
        qualifiedName: trtc.ITRTCCloud.disconnectOtherRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.disconnectOtherRoom
  trtc.ITRTCCloud.switchRoom*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.switchRoom*
        name: switchRoom
        nameWithType: ITRTCCloud.switchRoom
        qualifiedName: trtc.ITRTCCloud.switchRoom
      VB:
      - id: trtc.ITRTCCloud.switchRoom*
        name: switchRoom
        nameWithType: ITRTCCloud.switchRoom
        qualifiedName: trtc.ITRTCCloud.switchRoom
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.switchRoom
  trtc.ITRTCCloud.setDefaultStreamRecvMode*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setDefaultStreamRecvMode*
        name: setDefaultStreamRecvMode
        nameWithType: ITRTCCloud.setDefaultStreamRecvMode
        qualifiedName: trtc.ITRTCCloud.setDefaultStreamRecvMode
      VB:
      - id: trtc.ITRTCCloud.setDefaultStreamRecvMode*
        name: setDefaultStreamRecvMode
        nameWithType: ITRTCCloud.setDefaultStreamRecvMode
        qualifiedName: trtc.ITRTCCloud.setDefaultStreamRecvMode
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setDefaultStreamRecvMode
  trtc.ITRTCCloud.startPublishing*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.startPublishing*
        name: startPublishing
        nameWithType: ITRTCCloud.startPublishing
        qualifiedName: trtc.ITRTCCloud.startPublishing
      VB:
      - id: trtc.ITRTCCloud.startPublishing*
        name: startPublishing
        nameWithType: ITRTCCloud.startPublishing
        qualifiedName: trtc.ITRTCCloud.startPublishing
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.startPublishing
  trtc.ITRTCCloud.stopPublishing*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.stopPublishing*
        name: stopPublishing
        nameWithType: ITRTCCloud.stopPublishing
        qualifiedName: trtc.ITRTCCloud.stopPublishing
      VB:
      - id: trtc.ITRTCCloud.stopPublishing*
        name: stopPublishing
        nameWithType: ITRTCCloud.stopPublishing
        qualifiedName: trtc.ITRTCCloud.stopPublishing
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.stopPublishing
  trtc.ITRTCCloud.startPublishCDNStream*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.startPublishCDNStream*
        name: startPublishCDNStream
        nameWithType: ITRTCCloud.startPublishCDNStream
        qualifiedName: trtc.ITRTCCloud.startPublishCDNStream
      VB:
      - id: trtc.ITRTCCloud.startPublishCDNStream*
        name: startPublishCDNStream
        nameWithType: ITRTCCloud.startPublishCDNStream
        qualifiedName: trtc.ITRTCCloud.startPublishCDNStream
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.startPublishCDNStream
  trtc.ITRTCCloud.stopPublishCDNStream*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.stopPublishCDNStream*
        name: stopPublishCDNStream
        nameWithType: ITRTCCloud.stopPublishCDNStream
        qualifiedName: trtc.ITRTCCloud.stopPublishCDNStream
      VB:
      - id: trtc.ITRTCCloud.stopPublishCDNStream*
        name: stopPublishCDNStream
        nameWithType: ITRTCCloud.stopPublishCDNStream
        qualifiedName: trtc.ITRTCCloud.stopPublishCDNStream
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.stopPublishCDNStream
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{trtc.TRTCTranscodingConfig}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: trtc.TRTCTranscodingConfig
        name: TRTCTranscodingConfig
        nameWithType: TRTCTranscodingConfig
        qualifiedName: trtc.TRTCTranscodingConfig
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: trtc.TRTCTranscodingConfig
        name: TRTCTranscodingConfig
        nameWithType: TRTCTranscodingConfig
        qualifiedName: trtc.TRTCTranscodingConfig
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{trtc.TRTCTranscodingConfig}
  trtc.ITRTCCloud.setMixTranscodingConfig*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setMixTranscodingConfig*
        name: setMixTranscodingConfig
        nameWithType: ITRTCCloud.setMixTranscodingConfig
        qualifiedName: trtc.ITRTCCloud.setMixTranscodingConfig
      VB:
      - id: trtc.ITRTCCloud.setMixTranscodingConfig*
        name: setMixTranscodingConfig
        nameWithType: ITRTCCloud.setMixTranscodingConfig
        qualifiedName: trtc.ITRTCCloud.setMixTranscodingConfig
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setMixTranscodingConfig
  trtc.ITRTCCloud.startLocalPreview*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.startLocalPreview*
        name: startLocalPreview
        nameWithType: ITRTCCloud.startLocalPreview
        qualifiedName: trtc.ITRTCCloud.startLocalPreview
      VB:
      - id: trtc.ITRTCCloud.startLocalPreview*
        name: startLocalPreview
        nameWithType: ITRTCCloud.startLocalPreview
        qualifiedName: trtc.ITRTCCloud.startLocalPreview
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.startLocalPreview
  trtc.ITRTCCloud.GetVideoRenderData*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.GetVideoRenderData*
        name: GetVideoRenderData
        nameWithType: ITRTCCloud.GetVideoRenderData
        qualifiedName: trtc.ITRTCCloud.GetVideoRenderData
      VB:
      - id: trtc.ITRTCCloud.GetVideoRenderData*
        name: GetVideoRenderData
        nameWithType: ITRTCCloud.GetVideoRenderData
        qualifiedName: trtc.ITRTCCloud.GetVideoRenderData
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.GetVideoRenderData
  trtc.ITRTCCloud.stopLocalPreview*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.stopLocalPreview*
        name: stopLocalPreview
        nameWithType: ITRTCCloud.stopLocalPreview
        qualifiedName: trtc.ITRTCCloud.stopLocalPreview
      VB:
      - id: trtc.ITRTCCloud.stopLocalPreview*
        name: stopLocalPreview
        nameWithType: ITRTCCloud.stopLocalPreview
        qualifiedName: trtc.ITRTCCloud.stopLocalPreview
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.stopLocalPreview
  trtc.ITRTCCloud.muteLocalVideo*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.muteLocalVideo*
        name: muteLocalVideo
        nameWithType: ITRTCCloud.muteLocalVideo
        qualifiedName: trtc.ITRTCCloud.muteLocalVideo
      VB:
      - id: trtc.ITRTCCloud.muteLocalVideo*
        name: muteLocalVideo
        nameWithType: ITRTCCloud.muteLocalVideo
        qualifiedName: trtc.ITRTCCloud.muteLocalVideo
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.muteLocalVideo
  trtc.ITRTCCloud.startRemoteView*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.startRemoteView*
        name: startRemoteView
        nameWithType: ITRTCCloud.startRemoteView
        qualifiedName: trtc.ITRTCCloud.startRemoteView
      VB:
      - id: trtc.ITRTCCloud.startRemoteView*
        name: startRemoteView
        nameWithType: ITRTCCloud.startRemoteView
        qualifiedName: trtc.ITRTCCloud.startRemoteView
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.startRemoteView
  trtc.ITRTCCloud.stopRemoteView*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.stopRemoteView*
        name: stopRemoteView
        nameWithType: ITRTCCloud.stopRemoteView
        qualifiedName: trtc.ITRTCCloud.stopRemoteView
      VB:
      - id: trtc.ITRTCCloud.stopRemoteView*
        name: stopRemoteView
        nameWithType: ITRTCCloud.stopRemoteView
        qualifiedName: trtc.ITRTCCloud.stopRemoteView
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.stopRemoteView
  trtc.ITRTCCloud.stopAllRemoteView*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.stopAllRemoteView*
        name: stopAllRemoteView
        nameWithType: ITRTCCloud.stopAllRemoteView
        qualifiedName: trtc.ITRTCCloud.stopAllRemoteView
      VB:
      - id: trtc.ITRTCCloud.stopAllRemoteView*
        name: stopAllRemoteView
        nameWithType: ITRTCCloud.stopAllRemoteView
        qualifiedName: trtc.ITRTCCloud.stopAllRemoteView
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.stopAllRemoteView
  trtc.ITRTCCloud.muteRemoteVideoStream*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.muteRemoteVideoStream*
        name: muteRemoteVideoStream
        nameWithType: ITRTCCloud.muteRemoteVideoStream
        qualifiedName: trtc.ITRTCCloud.muteRemoteVideoStream
      VB:
      - id: trtc.ITRTCCloud.muteRemoteVideoStream*
        name: muteRemoteVideoStream
        nameWithType: ITRTCCloud.muteRemoteVideoStream
        qualifiedName: trtc.ITRTCCloud.muteRemoteVideoStream
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.muteRemoteVideoStream
  trtc.ITRTCCloud.muteAllRemoteVideoStreams*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.muteAllRemoteVideoStreams*
        name: muteAllRemoteVideoStreams
        nameWithType: ITRTCCloud.muteAllRemoteVideoStreams
        qualifiedName: trtc.ITRTCCloud.muteAllRemoteVideoStreams
      VB:
      - id: trtc.ITRTCCloud.muteAllRemoteVideoStreams*
        name: muteAllRemoteVideoStreams
        nameWithType: ITRTCCloud.muteAllRemoteVideoStreams
        qualifiedName: trtc.ITRTCCloud.muteAllRemoteVideoStreams
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.muteAllRemoteVideoStreams
  trtc.ITRTCCloud.setVideoEncoderParam*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setVideoEncoderParam*
        name: setVideoEncoderParam
        nameWithType: ITRTCCloud.setVideoEncoderParam
        qualifiedName: trtc.ITRTCCloud.setVideoEncoderParam
      VB:
      - id: trtc.ITRTCCloud.setVideoEncoderParam*
        name: setVideoEncoderParam
        nameWithType: ITRTCCloud.setVideoEncoderParam
        qualifiedName: trtc.ITRTCCloud.setVideoEncoderParam
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setVideoEncoderParam
  trtc.ITRTCCloud.setNetworkQosParam*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setNetworkQosParam*
        name: setNetworkQosParam
        nameWithType: ITRTCCloud.setNetworkQosParam
        qualifiedName: trtc.ITRTCCloud.setNetworkQosParam
      VB:
      - id: trtc.ITRTCCloud.setNetworkQosParam*
        name: setNetworkQosParam
        nameWithType: ITRTCCloud.setNetworkQosParam
        qualifiedName: trtc.ITRTCCloud.setNetworkQosParam
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setNetworkQosParam
  trtc.ITRTCCloud.setVideoEncoderMirror*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setVideoEncoderMirror*
        name: setVideoEncoderMirror
        nameWithType: ITRTCCloud.setVideoEncoderMirror
        qualifiedName: trtc.ITRTCCloud.setVideoEncoderMirror
      VB:
      - id: trtc.ITRTCCloud.setVideoEncoderMirror*
        name: setVideoEncoderMirror
        nameWithType: ITRTCCloud.setVideoEncoderMirror
        qualifiedName: trtc.ITRTCCloud.setVideoEncoderMirror
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setVideoEncoderMirror
  trtc.ITRTCCloud.enableSmallVideoStream*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.enableSmallVideoStream*
        name: enableSmallVideoStream
        nameWithType: ITRTCCloud.enableSmallVideoStream
        qualifiedName: trtc.ITRTCCloud.enableSmallVideoStream
      VB:
      - id: trtc.ITRTCCloud.enableSmallVideoStream*
        name: enableSmallVideoStream
        nameWithType: ITRTCCloud.enableSmallVideoStream
        qualifiedName: trtc.ITRTCCloud.enableSmallVideoStream
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.enableSmallVideoStream
  trtc.ITRTCCloud.setRemoteVideoStreamType*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setRemoteVideoStreamType*
        name: setRemoteVideoStreamType
        nameWithType: ITRTCCloud.setRemoteVideoStreamType
        qualifiedName: trtc.ITRTCCloud.setRemoteVideoStreamType
      VB:
      - id: trtc.ITRTCCloud.setRemoteVideoStreamType*
        name: setRemoteVideoStreamType
        nameWithType: ITRTCCloud.setRemoteVideoStreamType
        qualifiedName: trtc.ITRTCCloud.setRemoteVideoStreamType
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setRemoteVideoStreamType
  trtc.ITRTCCloud.startLocalAudio*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.startLocalAudio*
        name: startLocalAudio
        nameWithType: ITRTCCloud.startLocalAudio
        qualifiedName: trtc.ITRTCCloud.startLocalAudio
      VB:
      - id: trtc.ITRTCCloud.startLocalAudio*
        name: startLocalAudio
        nameWithType: ITRTCCloud.startLocalAudio
        qualifiedName: trtc.ITRTCCloud.startLocalAudio
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.startLocalAudio
  trtc.ITRTCCloud.stopLocalAudio*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.stopLocalAudio*
        name: stopLocalAudio
        nameWithType: ITRTCCloud.stopLocalAudio
        qualifiedName: trtc.ITRTCCloud.stopLocalAudio
      VB:
      - id: trtc.ITRTCCloud.stopLocalAudio*
        name: stopLocalAudio
        nameWithType: ITRTCCloud.stopLocalAudio
        qualifiedName: trtc.ITRTCCloud.stopLocalAudio
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.stopLocalAudio
  trtc.ITRTCCloud.muteLocalAudio*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.muteLocalAudio*
        name: muteLocalAudio
        nameWithType: ITRTCCloud.muteLocalAudio
        qualifiedName: trtc.ITRTCCloud.muteLocalAudio
      VB:
      - id: trtc.ITRTCCloud.muteLocalAudio*
        name: muteLocalAudio
        nameWithType: ITRTCCloud.muteLocalAudio
        qualifiedName: trtc.ITRTCCloud.muteLocalAudio
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.muteLocalAudio
  trtc.ITRTCCloud.muteRemoteAudio*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.muteRemoteAudio*
        name: muteRemoteAudio
        nameWithType: ITRTCCloud.muteRemoteAudio
        qualifiedName: trtc.ITRTCCloud.muteRemoteAudio
      VB:
      - id: trtc.ITRTCCloud.muteRemoteAudio*
        name: muteRemoteAudio
        nameWithType: ITRTCCloud.muteRemoteAudio
        qualifiedName: trtc.ITRTCCloud.muteRemoteAudio
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.muteRemoteAudio
  trtc.ITRTCCloud.muteAllRemoteAudio*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.muteAllRemoteAudio*
        name: muteAllRemoteAudio
        nameWithType: ITRTCCloud.muteAllRemoteAudio
        qualifiedName: trtc.ITRTCCloud.muteAllRemoteAudio
      VB:
      - id: trtc.ITRTCCloud.muteAllRemoteAudio*
        name: muteAllRemoteAudio
        nameWithType: ITRTCCloud.muteAllRemoteAudio
        qualifiedName: trtc.ITRTCCloud.muteAllRemoteAudio
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.muteAllRemoteAudio
  trtc.ITRTCCloud.setRemoteAudioVolume*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setRemoteAudioVolume*
        name: setRemoteAudioVolume
        nameWithType: ITRTCCloud.setRemoteAudioVolume
        qualifiedName: trtc.ITRTCCloud.setRemoteAudioVolume
      VB:
      - id: trtc.ITRTCCloud.setRemoteAudioVolume*
        name: setRemoteAudioVolume
        nameWithType: ITRTCCloud.setRemoteAudioVolume
        qualifiedName: trtc.ITRTCCloud.setRemoteAudioVolume
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setRemoteAudioVolume
  trtc.ITRTCCloud.setAudioPlayoutVolume*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setAudioPlayoutVolume*
        name: setAudioPlayoutVolume
        nameWithType: ITRTCCloud.setAudioPlayoutVolume
        qualifiedName: trtc.ITRTCCloud.setAudioPlayoutVolume
      VB:
      - id: trtc.ITRTCCloud.setAudioPlayoutVolume*
        name: setAudioPlayoutVolume
        nameWithType: ITRTCCloud.setAudioPlayoutVolume
        qualifiedName: trtc.ITRTCCloud.setAudioPlayoutVolume
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setAudioPlayoutVolume
  trtc.ITRTCCloud.getAudioPlayoutVolume*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.getAudioPlayoutVolume*
        name: getAudioPlayoutVolume
        nameWithType: ITRTCCloud.getAudioPlayoutVolume
        qualifiedName: trtc.ITRTCCloud.getAudioPlayoutVolume
      VB:
      - id: trtc.ITRTCCloud.getAudioPlayoutVolume*
        name: getAudioPlayoutVolume
        nameWithType: ITRTCCloud.getAudioPlayoutVolume
        qualifiedName: trtc.ITRTCCloud.getAudioPlayoutVolume
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.getAudioPlayoutVolume
  trtc.ITRTCCloud.startAudioRecording*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.startAudioRecording*
        name: startAudioRecording
        nameWithType: ITRTCCloud.startAudioRecording
        qualifiedName: trtc.ITRTCCloud.startAudioRecording
      VB:
      - id: trtc.ITRTCCloud.startAudioRecording*
        name: startAudioRecording
        nameWithType: ITRTCCloud.startAudioRecording
        qualifiedName: trtc.ITRTCCloud.startAudioRecording
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.startAudioRecording
  trtc.ITRTCCloud.stopAudioRecording*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.stopAudioRecording*
        name: stopAudioRecording
        nameWithType: ITRTCCloud.stopAudioRecording
        qualifiedName: trtc.ITRTCCloud.stopAudioRecording
      VB:
      - id: trtc.ITRTCCloud.stopAudioRecording*
        name: stopAudioRecording
        nameWithType: ITRTCCloud.stopAudioRecording
        qualifiedName: trtc.ITRTCCloud.stopAudioRecording
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.stopAudioRecording
  trtc.ITRTCCloud.startLocalRecording*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.startLocalRecording*
        name: startLocalRecording
        nameWithType: ITRTCCloud.startLocalRecording
        qualifiedName: trtc.ITRTCCloud.startLocalRecording
      VB:
      - id: trtc.ITRTCCloud.startLocalRecording*
        name: startLocalRecording
        nameWithType: ITRTCCloud.startLocalRecording
        qualifiedName: trtc.ITRTCCloud.startLocalRecording
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.startLocalRecording
  trtc.ITRTCCloud.stopLocalRecording*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.stopLocalRecording*
        name: stopLocalRecording
        nameWithType: ITRTCCloud.stopLocalRecording
        qualifiedName: trtc.ITRTCCloud.stopLocalRecording
      VB:
      - id: trtc.ITRTCCloud.stopLocalRecording*
        name: stopLocalRecording
        nameWithType: ITRTCCloud.stopLocalRecording
        qualifiedName: trtc.ITRTCCloud.stopLocalRecording
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.stopLocalRecording
  trtc.ITRTCCloud.setAudioCaptureVolume*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setAudioCaptureVolume*
        name: setAudioCaptureVolume
        nameWithType: ITRTCCloud.setAudioCaptureVolume
        qualifiedName: trtc.ITRTCCloud.setAudioCaptureVolume
      VB:
      - id: trtc.ITRTCCloud.setAudioCaptureVolume*
        name: setAudioCaptureVolume
        nameWithType: ITRTCCloud.setAudioCaptureVolume
        qualifiedName: trtc.ITRTCCloud.setAudioCaptureVolume
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setAudioCaptureVolume
  trtc.ITRTCCloud.getAudioCaptureVolume*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.getAudioCaptureVolume*
        name: getAudioCaptureVolume
        nameWithType: ITRTCCloud.getAudioCaptureVolume
        qualifiedName: trtc.ITRTCCloud.getAudioCaptureVolume
      VB:
      - id: trtc.ITRTCCloud.getAudioCaptureVolume*
        name: getAudioCaptureVolume
        nameWithType: ITRTCCloud.getAudioCaptureVolume
        qualifiedName: trtc.ITRTCCloud.getAudioCaptureVolume
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.getAudioCaptureVolume
  System.UInt32:
    name:
      CSharp:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
      VB:
      - id: System.UInt32
        name: UInt32
        nameWithType: UInt32
        qualifiedName: System.UInt32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.UInt32
  trtc.ITRTCCloud.enableAudioVolumeEvaluation*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.enableAudioVolumeEvaluation*
        name: enableAudioVolumeEvaluation
        nameWithType: ITRTCCloud.enableAudioVolumeEvaluation
        qualifiedName: trtc.ITRTCCloud.enableAudioVolumeEvaluation
      VB:
      - id: trtc.ITRTCCloud.enableAudioVolumeEvaluation*
        name: enableAudioVolumeEvaluation
        nameWithType: ITRTCCloud.enableAudioVolumeEvaluation
        qualifiedName: trtc.ITRTCCloud.enableAudioVolumeEvaluation
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.enableAudioVolumeEvaluation
  trtc.ITRTCCloud.getDeviceManager*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.getDeviceManager*
        name: getDeviceManager
        nameWithType: ITRTCCloud.getDeviceManager
        qualifiedName: trtc.ITRTCCloud.getDeviceManager
      VB:
      - id: trtc.ITRTCCloud.getDeviceManager*
        name: getDeviceManager
        nameWithType: ITRTCCloud.getDeviceManager
        qualifiedName: trtc.ITRTCCloud.getDeviceManager
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.getDeviceManager
  trtc.ITRTCCloud.setBeautyStyle*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setBeautyStyle*
        name: setBeautyStyle
        nameWithType: ITRTCCloud.setBeautyStyle
        qualifiedName: trtc.ITRTCCloud.setBeautyStyle
      VB:
      - id: trtc.ITRTCCloud.setBeautyStyle*
        name: setBeautyStyle
        nameWithType: ITRTCCloud.setBeautyStyle
        qualifiedName: trtc.ITRTCCloud.setBeautyStyle
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setBeautyStyle
  trtc.ITRTCCloud.setWaterMark*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setWaterMark*
        name: setWaterMark
        nameWithType: ITRTCCloud.setWaterMark
        qualifiedName: trtc.ITRTCCloud.setWaterMark
      VB:
      - id: trtc.ITRTCCloud.setWaterMark*
        name: setWaterMark
        nameWithType: ITRTCCloud.setWaterMark
        qualifiedName: trtc.ITRTCCloud.setWaterMark
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setWaterMark
  trtc.ITXAudioEffectManager:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager
        name: ITXAudioEffectManager
        nameWithType: ITXAudioEffectManager
        qualifiedName: trtc.ITXAudioEffectManager
      VB:
      - id: trtc.ITXAudioEffectManager
        name: ITXAudioEffectManager
        nameWithType: ITXAudioEffectManager
        qualifiedName: trtc.ITXAudioEffectManager
    isDefinition: true
    parent: trtc
    commentId: T:trtc.ITXAudioEffectManager
  trtc.ITRTCCloud.getAudioEffectManager*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.getAudioEffectManager*
        name: getAudioEffectManager
        nameWithType: ITRTCCloud.getAudioEffectManager
        qualifiedName: trtc.ITRTCCloud.getAudioEffectManager
      VB:
      - id: trtc.ITRTCCloud.getAudioEffectManager*
        name: getAudioEffectManager
        nameWithType: ITRTCCloud.getAudioEffectManager
        qualifiedName: trtc.ITRTCCloud.getAudioEffectManager
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.getAudioEffectManager
  trtc.ITRTCCloud.startScreenCapture*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.startScreenCapture*
        name: startScreenCapture
        nameWithType: ITRTCCloud.startScreenCapture
        qualifiedName: trtc.ITRTCCloud.startScreenCapture
      VB:
      - id: trtc.ITRTCCloud.startScreenCapture*
        name: startScreenCapture
        nameWithType: ITRTCCloud.startScreenCapture
        qualifiedName: trtc.ITRTCCloud.startScreenCapture
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.startScreenCapture
  trtc.ITRTCCloud.stopScreenCapture*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.stopScreenCapture*
        name: stopScreenCapture
        nameWithType: ITRTCCloud.stopScreenCapture
        qualifiedName: trtc.ITRTCCloud.stopScreenCapture
      VB:
      - id: trtc.ITRTCCloud.stopScreenCapture*
        name: stopScreenCapture
        nameWithType: ITRTCCloud.stopScreenCapture
        qualifiedName: trtc.ITRTCCloud.stopScreenCapture
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.stopScreenCapture
  trtc.ITRTCCloud.pauseScreenCapture*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.pauseScreenCapture*
        name: pauseScreenCapture
        nameWithType: ITRTCCloud.pauseScreenCapture
        qualifiedName: trtc.ITRTCCloud.pauseScreenCapture
      VB:
      - id: trtc.ITRTCCloud.pauseScreenCapture*
        name: pauseScreenCapture
        nameWithType: ITRTCCloud.pauseScreenCapture
        qualifiedName: trtc.ITRTCCloud.pauseScreenCapture
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.pauseScreenCapture
  trtc.ITRTCCloud.resumeScreenCapture*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.resumeScreenCapture*
        name: resumeScreenCapture
        nameWithType: ITRTCCloud.resumeScreenCapture
        qualifiedName: trtc.ITRTCCloud.resumeScreenCapture
      VB:
      - id: trtc.ITRTCCloud.resumeScreenCapture*
        name: resumeScreenCapture
        nameWithType: ITRTCCloud.resumeScreenCapture
        qualifiedName: trtc.ITRTCCloud.resumeScreenCapture
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.resumeScreenCapture
  trtc.TRTCScreenCaptureSourceInfo[]:
    name:
      CSharp:
      - id: trtc.TRTCScreenCaptureSourceInfo
        name: TRTCScreenCaptureSourceInfo
        nameWithType: TRTCScreenCaptureSourceInfo
        qualifiedName: trtc.TRTCScreenCaptureSourceInfo
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: trtc.TRTCScreenCaptureSourceInfo
        name: TRTCScreenCaptureSourceInfo
        nameWithType: TRTCScreenCaptureSourceInfo
        qualifiedName: trtc.TRTCScreenCaptureSourceInfo
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  trtc.ITRTCCloud.getScreenCaptureSources*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.getScreenCaptureSources*
        name: getScreenCaptureSources
        nameWithType: ITRTCCloud.getScreenCaptureSources
        qualifiedName: trtc.ITRTCCloud.getScreenCaptureSources
      VB:
      - id: trtc.ITRTCCloud.getScreenCaptureSources*
        name: getScreenCaptureSources
        nameWithType: ITRTCCloud.getScreenCaptureSources
        qualifiedName: trtc.ITRTCCloud.getScreenCaptureSources
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.getScreenCaptureSources
  Rect:
    name:
      CSharp:
      - id: Rect
        name: Rect
        nameWithType: Rect
        qualifiedName: Rect
        isExternal: true
      VB:
      - id: Rect
        name: Rect
        nameWithType: Rect
        qualifiedName: Rect
        isExternal: true
    isDefinition: true
    commentId: '!:Rect'
  trtc.ITRTCCloud.selectScreenCaptureTarget*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.selectScreenCaptureTarget*
        name: selectScreenCaptureTarget
        nameWithType: ITRTCCloud.selectScreenCaptureTarget
        qualifiedName: trtc.ITRTCCloud.selectScreenCaptureTarget
      VB:
      - id: trtc.ITRTCCloud.selectScreenCaptureTarget*
        name: selectScreenCaptureTarget
        nameWithType: ITRTCCloud.selectScreenCaptureTarget
        qualifiedName: trtc.ITRTCCloud.selectScreenCaptureTarget
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.selectScreenCaptureTarget
  trtc.ITRTCCloud.setSubStreamEncoderParam*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setSubStreamEncoderParam*
        name: setSubStreamEncoderParam
        nameWithType: ITRTCCloud.setSubStreamEncoderParam
        qualifiedName: trtc.ITRTCCloud.setSubStreamEncoderParam
      VB:
      - id: trtc.ITRTCCloud.setSubStreamEncoderParam*
        name: setSubStreamEncoderParam
        nameWithType: ITRTCCloud.setSubStreamEncoderParam
        qualifiedName: trtc.ITRTCCloud.setSubStreamEncoderParam
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setSubStreamEncoderParam
  trtc.ITRTCCloud.enableCustomVideoCapture*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.enableCustomVideoCapture*
        name: enableCustomVideoCapture
        nameWithType: ITRTCCloud.enableCustomVideoCapture
        qualifiedName: trtc.ITRTCCloud.enableCustomVideoCapture
      VB:
      - id: trtc.ITRTCCloud.enableCustomVideoCapture*
        name: enableCustomVideoCapture
        nameWithType: ITRTCCloud.enableCustomVideoCapture
        qualifiedName: trtc.ITRTCCloud.enableCustomVideoCapture
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.enableCustomVideoCapture
  trtc.ITRTCCloud.sendCustomVideoData*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.sendCustomVideoData*
        name: sendCustomVideoData
        nameWithType: ITRTCCloud.sendCustomVideoData
        qualifiedName: trtc.ITRTCCloud.sendCustomVideoData
      VB:
      - id: trtc.ITRTCCloud.sendCustomVideoData*
        name: sendCustomVideoData
        nameWithType: ITRTCCloud.sendCustomVideoData
        qualifiedName: trtc.ITRTCCloud.sendCustomVideoData
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.sendCustomVideoData
  trtc.ITRTCCloud.enableCustomAudioCapture*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.enableCustomAudioCapture*
        name: enableCustomAudioCapture
        nameWithType: ITRTCCloud.enableCustomAudioCapture
        qualifiedName: trtc.ITRTCCloud.enableCustomAudioCapture
      VB:
      - id: trtc.ITRTCCloud.enableCustomAudioCapture*
        name: enableCustomAudioCapture
        nameWithType: ITRTCCloud.enableCustomAudioCapture
        qualifiedName: trtc.ITRTCCloud.enableCustomAudioCapture
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.enableCustomAudioCapture
  trtc.ITRTCCloud.sendCustomAudioData*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.sendCustomAudioData*
        name: sendCustomAudioData
        nameWithType: ITRTCCloud.sendCustomAudioData
        qualifiedName: trtc.ITRTCCloud.sendCustomAudioData
      VB:
      - id: trtc.ITRTCCloud.sendCustomAudioData*
        name: sendCustomAudioData
        nameWithType: ITRTCCloud.sendCustomAudioData
        qualifiedName: trtc.ITRTCCloud.sendCustomAudioData
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.sendCustomAudioData
  trtc.ITRTCCloud.setLocalVideoRenderCallback*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setLocalVideoRenderCallback*
        name: setLocalVideoRenderCallback
        nameWithType: ITRTCCloud.setLocalVideoRenderCallback
        qualifiedName: trtc.ITRTCCloud.setLocalVideoRenderCallback
      VB:
      - id: trtc.ITRTCCloud.setLocalVideoRenderCallback*
        name: setLocalVideoRenderCallback
        nameWithType: ITRTCCloud.setLocalVideoRenderCallback
        qualifiedName: trtc.ITRTCCloud.setLocalVideoRenderCallback
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setLocalVideoRenderCallback
  trtc.ITRTCCloud.setRemoteVideoRenderCallback*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setRemoteVideoRenderCallback*
        name: setRemoteVideoRenderCallback
        nameWithType: ITRTCCloud.setRemoteVideoRenderCallback
        qualifiedName: trtc.ITRTCCloud.setRemoteVideoRenderCallback
      VB:
      - id: trtc.ITRTCCloud.setRemoteVideoRenderCallback*
        name: setRemoteVideoRenderCallback
        nameWithType: ITRTCCloud.setRemoteVideoRenderCallback
        qualifiedName: trtc.ITRTCCloud.setRemoteVideoRenderCallback
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setRemoteVideoRenderCallback
  trtc.ITRTCCloud.sendSEIMsg*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.sendSEIMsg*
        name: sendSEIMsg
        nameWithType: ITRTCCloud.sendSEIMsg
        qualifiedName: trtc.ITRTCCloud.sendSEIMsg
      VB:
      - id: trtc.ITRTCCloud.sendSEIMsg*
        name: sendSEIMsg
        nameWithType: ITRTCCloud.sendSEIMsg
        qualifiedName: trtc.ITRTCCloud.sendSEIMsg
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.sendSEIMsg
  trtc.ITRTCCloud.sendCustomCmdMsg*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.sendCustomCmdMsg*
        name: sendCustomCmdMsg
        nameWithType: ITRTCCloud.sendCustomCmdMsg
        qualifiedName: trtc.ITRTCCloud.sendCustomCmdMsg
      VB:
      - id: trtc.ITRTCCloud.sendCustomCmdMsg*
        name: sendCustomCmdMsg
        nameWithType: ITRTCCloud.sendCustomCmdMsg
        qualifiedName: trtc.ITRTCCloud.sendCustomCmdMsg
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.sendCustomCmdMsg
  trtc.ITRTCCloud.startSpeedTest*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.startSpeedTest*
        name: startSpeedTest
        nameWithType: ITRTCCloud.startSpeedTest
        qualifiedName: trtc.ITRTCCloud.startSpeedTest
      VB:
      - id: trtc.ITRTCCloud.startSpeedTest*
        name: startSpeedTest
        nameWithType: ITRTCCloud.startSpeedTest
        qualifiedName: trtc.ITRTCCloud.startSpeedTest
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.startSpeedTest
  trtc.ITRTCCloud.stopSpeedTest*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.stopSpeedTest*
        name: stopSpeedTest
        nameWithType: ITRTCCloud.stopSpeedTest
        qualifiedName: trtc.ITRTCCloud.stopSpeedTest
      VB:
      - id: trtc.ITRTCCloud.stopSpeedTest*
        name: stopSpeedTest
        nameWithType: ITRTCCloud.stopSpeedTest
        qualifiedName: trtc.ITRTCCloud.stopSpeedTest
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.stopSpeedTest
  trtc.ITRTCCloud.getSDKVersion*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.getSDKVersion*
        name: getSDKVersion
        nameWithType: ITRTCCloud.getSDKVersion
        qualifiedName: trtc.ITRTCCloud.getSDKVersion
      VB:
      - id: trtc.ITRTCCloud.getSDKVersion*
        name: getSDKVersion
        nameWithType: ITRTCCloud.getSDKVersion
        qualifiedName: trtc.ITRTCCloud.getSDKVersion
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.getSDKVersion
  trtc.ITRTCCloud.setLogLevel*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setLogLevel*
        name: setLogLevel
        nameWithType: ITRTCCloud.setLogLevel
        qualifiedName: trtc.ITRTCCloud.setLogLevel
      VB:
      - id: trtc.ITRTCCloud.setLogLevel*
        name: setLogLevel
        nameWithType: ITRTCCloud.setLogLevel
        qualifiedName: trtc.ITRTCCloud.setLogLevel
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setLogLevel
  trtc.ITRTCCloud.setConsoleEnabled*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setConsoleEnabled*
        name: setConsoleEnabled
        nameWithType: ITRTCCloud.setConsoleEnabled
        qualifiedName: trtc.ITRTCCloud.setConsoleEnabled
      VB:
      - id: trtc.ITRTCCloud.setConsoleEnabled*
        name: setConsoleEnabled
        nameWithType: ITRTCCloud.setConsoleEnabled
        qualifiedName: trtc.ITRTCCloud.setConsoleEnabled
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setConsoleEnabled
  trtc.ITRTCCloud.setLogCompressEnabled*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setLogCompressEnabled*
        name: setLogCompressEnabled
        nameWithType: ITRTCCloud.setLogCompressEnabled
        qualifiedName: trtc.ITRTCCloud.setLogCompressEnabled
      VB:
      - id: trtc.ITRTCCloud.setLogCompressEnabled*
        name: setLogCompressEnabled
        nameWithType: ITRTCCloud.setLogCompressEnabled
        qualifiedName: trtc.ITRTCCloud.setLogCompressEnabled
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setLogCompressEnabled
  trtc.ITRTCCloud.setLogDirPath*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setLogDirPath*
        name: setLogDirPath
        nameWithType: ITRTCCloud.setLogDirPath
        qualifiedName: trtc.ITRTCCloud.setLogDirPath
      VB:
      - id: trtc.ITRTCCloud.setLogDirPath*
        name: setLogDirPath
        nameWithType: ITRTCCloud.setLogDirPath
        qualifiedName: trtc.ITRTCCloud.setLogDirPath
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setLogDirPath
  trtc.ITRTCCloud.setLogCallback*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.setLogCallback*
        name: setLogCallback
        nameWithType: ITRTCCloud.setLogCallback
        qualifiedName: trtc.ITRTCCloud.setLogCallback
      VB:
      - id: trtc.ITRTCCloud.setLogCallback*
        name: setLogCallback
        nameWithType: ITRTCCloud.setLogCallback
        qualifiedName: trtc.ITRTCCloud.setLogCallback
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.setLogCallback
  trtc.ITRTCCloud.callExperimentalAPI*:
    name:
      CSharp:
      - id: trtc.ITRTCCloud.callExperimentalAPI*
        name: callExperimentalAPI
        nameWithType: ITRTCCloud.callExperimentalAPI
        qualifiedName: trtc.ITRTCCloud.callExperimentalAPI
      VB:
      - id: trtc.ITRTCCloud.callExperimentalAPI*
        name: callExperimentalAPI
        nameWithType: ITRTCCloud.callExperimentalAPI
        qualifiedName: trtc.ITRTCCloud.callExperimentalAPI
    isDefinition: true
    commentId: Overload:trtc.ITRTCCloud.callExperimentalAPI
  trtc.ITXMusicPlayObserver.onStart*:
    name:
      CSharp:
      - id: trtc.ITXMusicPlayObserver.onStart*
        name: onStart
        nameWithType: ITXMusicPlayObserver.onStart
        qualifiedName: trtc.ITXMusicPlayObserver.onStart
      VB:
      - id: trtc.ITXMusicPlayObserver.onStart*
        name: onStart
        nameWithType: ITXMusicPlayObserver.onStart
        qualifiedName: trtc.ITXMusicPlayObserver.onStart
    isDefinition: true
    commentId: Overload:trtc.ITXMusicPlayObserver.onStart
  System.Int64:
    name:
      CSharp:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
      VB:
      - id: System.Int64
        name: Int64
        nameWithType: Int64
        qualifiedName: System.Int64
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int64
  trtc.ITXMusicPlayObserver.onPlayProgress*:
    name:
      CSharp:
      - id: trtc.ITXMusicPlayObserver.onPlayProgress*
        name: onPlayProgress
        nameWithType: ITXMusicPlayObserver.onPlayProgress
        qualifiedName: trtc.ITXMusicPlayObserver.onPlayProgress
      VB:
      - id: trtc.ITXMusicPlayObserver.onPlayProgress*
        name: onPlayProgress
        nameWithType: ITXMusicPlayObserver.onPlayProgress
        qualifiedName: trtc.ITXMusicPlayObserver.onPlayProgress
    isDefinition: true
    commentId: Overload:trtc.ITXMusicPlayObserver.onPlayProgress
  trtc.ITXMusicPlayObserver.onComplete*:
    name:
      CSharp:
      - id: trtc.ITXMusicPlayObserver.onComplete*
        name: onComplete
        nameWithType: ITXMusicPlayObserver.onComplete
        qualifiedName: trtc.ITXMusicPlayObserver.onComplete
      VB:
      - id: trtc.ITXMusicPlayObserver.onComplete*
        name: onComplete
        nameWithType: ITXMusicPlayObserver.onComplete
        qualifiedName: trtc.ITXMusicPlayObserver.onComplete
    isDefinition: true
    commentId: Overload:trtc.ITXMusicPlayObserver.onComplete
  trtc.ITXMusicPlayObserver:
    name:
      CSharp:
      - id: trtc.ITXMusicPlayObserver
        name: ITXMusicPlayObserver
        nameWithType: ITXMusicPlayObserver
        qualifiedName: trtc.ITXMusicPlayObserver
      VB:
      - id: trtc.ITXMusicPlayObserver
        name: ITXMusicPlayObserver
        nameWithType: ITXMusicPlayObserver
        qualifiedName: trtc.ITXMusicPlayObserver
    isDefinition: true
    parent: trtc
    commentId: T:trtc.ITXMusicPlayObserver
  trtc.ITXAudioEffectManager.setVoiceReverbType*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.setVoiceReverbType*
        name: setVoiceReverbType
        nameWithType: ITXAudioEffectManager.setVoiceReverbType
        qualifiedName: trtc.ITXAudioEffectManager.setVoiceReverbType
      VB:
      - id: trtc.ITXAudioEffectManager.setVoiceReverbType*
        name: setVoiceReverbType
        nameWithType: ITXAudioEffectManager.setVoiceReverbType
        qualifiedName: trtc.ITXAudioEffectManager.setVoiceReverbType
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.setVoiceReverbType
  trtc.ITXAudioEffectManager.setVoiceCaptureVolume*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.setVoiceCaptureVolume*
        name: setVoiceCaptureVolume
        nameWithType: ITXAudioEffectManager.setVoiceCaptureVolume
        qualifiedName: trtc.ITXAudioEffectManager.setVoiceCaptureVolume
      VB:
      - id: trtc.ITXAudioEffectManager.setVoiceCaptureVolume*
        name: setVoiceCaptureVolume
        nameWithType: ITXAudioEffectManager.setVoiceCaptureVolume
        qualifiedName: trtc.ITXAudioEffectManager.setVoiceCaptureVolume
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.setVoiceCaptureVolume
  trtc.ITXAudioEffectManager.setMusicObserver*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.setMusicObserver*
        name: setMusicObserver
        nameWithType: ITXAudioEffectManager.setMusicObserver
        qualifiedName: trtc.ITXAudioEffectManager.setMusicObserver
      VB:
      - id: trtc.ITXAudioEffectManager.setMusicObserver*
        name: setMusicObserver
        nameWithType: ITXAudioEffectManager.setMusicObserver
        qualifiedName: trtc.ITXAudioEffectManager.setMusicObserver
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.setMusicObserver
  trtc.ITXAudioEffectManager.startPlayMusic*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.startPlayMusic*
        name: startPlayMusic
        nameWithType: ITXAudioEffectManager.startPlayMusic
        qualifiedName: trtc.ITXAudioEffectManager.startPlayMusic
      VB:
      - id: trtc.ITXAudioEffectManager.startPlayMusic*
        name: startPlayMusic
        nameWithType: ITXAudioEffectManager.startPlayMusic
        qualifiedName: trtc.ITXAudioEffectManager.startPlayMusic
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.startPlayMusic
  trtc.ITXAudioEffectManager.stopPlayMusic*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.stopPlayMusic*
        name: stopPlayMusic
        nameWithType: ITXAudioEffectManager.stopPlayMusic
        qualifiedName: trtc.ITXAudioEffectManager.stopPlayMusic
      VB:
      - id: trtc.ITXAudioEffectManager.stopPlayMusic*
        name: stopPlayMusic
        nameWithType: ITXAudioEffectManager.stopPlayMusic
        qualifiedName: trtc.ITXAudioEffectManager.stopPlayMusic
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.stopPlayMusic
  trtc.ITXAudioEffectManager.pausePlayMusic*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.pausePlayMusic*
        name: pausePlayMusic
        nameWithType: ITXAudioEffectManager.pausePlayMusic
        qualifiedName: trtc.ITXAudioEffectManager.pausePlayMusic
      VB:
      - id: trtc.ITXAudioEffectManager.pausePlayMusic*
        name: pausePlayMusic
        nameWithType: ITXAudioEffectManager.pausePlayMusic
        qualifiedName: trtc.ITXAudioEffectManager.pausePlayMusic
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.pausePlayMusic
  trtc.ITXAudioEffectManager.resumePlayMusic*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.resumePlayMusic*
        name: resumePlayMusic
        nameWithType: ITXAudioEffectManager.resumePlayMusic
        qualifiedName: trtc.ITXAudioEffectManager.resumePlayMusic
      VB:
      - id: trtc.ITXAudioEffectManager.resumePlayMusic*
        name: resumePlayMusic
        nameWithType: ITXAudioEffectManager.resumePlayMusic
        qualifiedName: trtc.ITXAudioEffectManager.resumePlayMusic
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.resumePlayMusic
  trtc.ITXAudioEffectManager.setMusicPublishVolume*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.setMusicPublishVolume*
        name: setMusicPublishVolume
        nameWithType: ITXAudioEffectManager.setMusicPublishVolume
        qualifiedName: trtc.ITXAudioEffectManager.setMusicPublishVolume
      VB:
      - id: trtc.ITXAudioEffectManager.setMusicPublishVolume*
        name: setMusicPublishVolume
        nameWithType: ITXAudioEffectManager.setMusicPublishVolume
        qualifiedName: trtc.ITXAudioEffectManager.setMusicPublishVolume
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.setMusicPublishVolume
  trtc.ITXAudioEffectManager.setMusicPlayoutVolume*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.setMusicPlayoutVolume*
        name: setMusicPlayoutVolume
        nameWithType: ITXAudioEffectManager.setMusicPlayoutVolume
        qualifiedName: trtc.ITXAudioEffectManager.setMusicPlayoutVolume
      VB:
      - id: trtc.ITXAudioEffectManager.setMusicPlayoutVolume*
        name: setMusicPlayoutVolume
        nameWithType: ITXAudioEffectManager.setMusicPlayoutVolume
        qualifiedName: trtc.ITXAudioEffectManager.setMusicPlayoutVolume
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.setMusicPlayoutVolume
  trtc.ITXAudioEffectManager.setAllMusicVolume*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.setAllMusicVolume*
        name: setAllMusicVolume
        nameWithType: ITXAudioEffectManager.setAllMusicVolume
        qualifiedName: trtc.ITXAudioEffectManager.setAllMusicVolume
      VB:
      - id: trtc.ITXAudioEffectManager.setAllMusicVolume*
        name: setAllMusicVolume
        nameWithType: ITXAudioEffectManager.setAllMusicVolume
        qualifiedName: trtc.ITXAudioEffectManager.setAllMusicVolume
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.setAllMusicVolume
  trtc.ITXAudioEffectManager.setMusicPitch*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.setMusicPitch*
        name: setMusicPitch
        nameWithType: ITXAudioEffectManager.setMusicPitch
        qualifiedName: trtc.ITXAudioEffectManager.setMusicPitch
      VB:
      - id: trtc.ITXAudioEffectManager.setMusicPitch*
        name: setMusicPitch
        nameWithType: ITXAudioEffectManager.setMusicPitch
        qualifiedName: trtc.ITXAudioEffectManager.setMusicPitch
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.setMusicPitch
  trtc.ITXAudioEffectManager.setMusicSpeedRate*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.setMusicSpeedRate*
        name: setMusicSpeedRate
        nameWithType: ITXAudioEffectManager.setMusicSpeedRate
        qualifiedName: trtc.ITXAudioEffectManager.setMusicSpeedRate
      VB:
      - id: trtc.ITXAudioEffectManager.setMusicSpeedRate*
        name: setMusicSpeedRate
        nameWithType: ITXAudioEffectManager.setMusicSpeedRate
        qualifiedName: trtc.ITXAudioEffectManager.setMusicSpeedRate
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.setMusicSpeedRate
  trtc.ITXAudioEffectManager.getMusicCurrentPosInMS*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.getMusicCurrentPosInMS*
        name: getMusicCurrentPosInMS
        nameWithType: ITXAudioEffectManager.getMusicCurrentPosInMS
        qualifiedName: trtc.ITXAudioEffectManager.getMusicCurrentPosInMS
      VB:
      - id: trtc.ITXAudioEffectManager.getMusicCurrentPosInMS*
        name: getMusicCurrentPosInMS
        nameWithType: ITXAudioEffectManager.getMusicCurrentPosInMS
        qualifiedName: trtc.ITXAudioEffectManager.getMusicCurrentPosInMS
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.getMusicCurrentPosInMS
  trtc.ITXAudioEffectManager.seekMusicToPosInMS*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.seekMusicToPosInMS*
        name: seekMusicToPosInMS
        nameWithType: ITXAudioEffectManager.seekMusicToPosInMS
        qualifiedName: trtc.ITXAudioEffectManager.seekMusicToPosInMS
      VB:
      - id: trtc.ITXAudioEffectManager.seekMusicToPosInMS*
        name: seekMusicToPosInMS
        nameWithType: ITXAudioEffectManager.seekMusicToPosInMS
        qualifiedName: trtc.ITXAudioEffectManager.seekMusicToPosInMS
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.seekMusicToPosInMS
  trtc.ITXAudioEffectManager.getMusicDurationInMS*:
    name:
      CSharp:
      - id: trtc.ITXAudioEffectManager.getMusicDurationInMS*
        name: getMusicDurationInMS
        nameWithType: ITXAudioEffectManager.getMusicDurationInMS
        qualifiedName: trtc.ITXAudioEffectManager.getMusicDurationInMS
      VB:
      - id: trtc.ITXAudioEffectManager.getMusicDurationInMS*
        name: getMusicDurationInMS
        nameWithType: ITXAudioEffectManager.getMusicDurationInMS
        qualifiedName: trtc.ITXAudioEffectManager.getMusicDurationInMS
    isDefinition: true
    commentId: Overload:trtc.ITXAudioEffectManager.getMusicDurationInMS
